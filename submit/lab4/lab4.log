Script started on 2020-02-20 14:53:21-05:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="94" LINES="49"]
bash: /home/umrigar/cs220/bin/student.rc: No such file or directory
tman1@g7-19:~/i240b/submit/lab4$ ls
exercises  lab4  lab4.html  lab4.log  lab4.pdf	lab4.umt
tman1@g7-19:~/i240b/submit/lab4$ ps
    PID TTY          TIME CMD
1297710 pts/2    00:00:00 bash
1297716 pts/2    00:00:00 ps
tman1@g7-19:~/i240b/submit/lab4$ jobs
tman1@g7-19:~/i240b/submit/lab4$ ls
exercises  lab4  lab4.html  lab4.log  lab4.pdf	lab4.umt
tman1@g7-19:~/i240b/submit/lab4$ cd exercises/
1-point/  2-shape/  3-expr/   Makefile  
tman1@g7-19:~/i240b/submit/lab4$ cd exercises/`[K1-point/;[K
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ls
main.cc  point.cc  point.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ cd [K[K[Kcat point.hh 
#ifndef POINT_HH_
#define POINT_HH_

#include <string>

struct Point {
  //for the purpose of this lab, these fields are public but const.
  //Having them public makes it hard to change the reprentation
  //from these cartesian coordinates to polar coordinates.
  const double x, y;

  /** constructor */
  Point(double x=0, double y=0) : x(x), y(y) { }

  /** return distance of this point from other point */
  //the trailing const means that this function will not change
  //this point
  double distance(const Point& other) const;

  /** return a string representation of this point */
  std::string toString() const;
};



#endif //ifndef POINT_HH_
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ cat point..[Kcc 
#include "point.hh"

#include <cmath>
#include <string>
#include <sstream>

/** return distance of this point from other point */
double Point::distance(const Point& other) const {
  const auto dx = x - other.x;
  const auto dy = y - other.y;
  return sqrt(dx*dx + dy*dy);
}

std::string Point::toString() const {
  //declaring s to be a stringstream allows usage similar to std::cout
  std::stringstream s;
  s << "(" << x << ", " << y << ")"; //normal (x, y) format
  return s.str(); //return std::string underlying stringstream
}
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ls
main.cc  point.cc  point.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ iv[K[Kcat main.cc 
#include "point.hh"

#include <iostream>

//declare an array of points
static const Point points[] = {
  Point(0, 0), Point(3, 4), Point(1, 1), Point(4, 5),
};
//use standard idiom to figure out number of elements in array
static constexpr auto nPoints = sizeof(points)/sizeof(points[0]);

static void
outSizes(std::ostream& out) {
  out << "sizeof(double) = " << sizeof(double) << std::endl;
  out << "sizeof(Point) = " << sizeof(Point) << std::endl;
}

/** output pair-wise distance between all points in points[] to out. */
static void
outDistances(std::ostream& out)
{
  for (auto i = 0u; i < nPoints - 1; i++) {
    Point pi = points[i];
    for (auto j = i + 1; j < nPoints; j++) {
      Point pj = points[j];
      out << "distance from " << pi.toString()
	  << " to " << pj.toString()
	  << " is " << pi.distance(pj)
	  << std::endl;
    }
  }
}

int main() {

  //instead of hardcoding std::cout in functions, we pass it as a param.
  //so if we wanted to output to a file, the code for the functions
  //would not need to change (the code in this function would change).
  std::ostream& out = std::cout;

  outDistances(out); out << std::endl;

  outSizes(out);
}
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ls
main.cc  point.cc  point.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ amke -f ../Makefile 
bash: amke: command not found
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ amke -f ../Makefile [1P[1P[1@m[1@a
g++ -MT point.o -MMD -MP -MF .deps/point.d -g -Wall -std=c++17 -c point.cc
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ point.o main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main point.o main.o; do echo $t >>.gitignore; done
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ls
main  main.cc  main.o  point.cc  point.hh  point.o
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ./
.deps/ main   
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ./
.deps/ main   
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ./
.deps/ main   
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ./m[K.
./     ../    .deps/ 
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ./.
./     ../    .deps/ 
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ./.deps/
bash: ./.deps/: Is a directory
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ./.deps/[K[K[K[K[K[K[K[Kls ./
.deps/      main        main.o      point.hh    
.gitignore  main.cc     point.cc    point.o     
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ls ./de[C.de[C[Cps/
main.d   point.d  
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ls ./.deps/[1P ./.deps/[1P ./.deps/c ./.deps/a ./.deps/t ./.deps/[C ./.deps/[1P./.deps/[Kcat ./.deps/main.d 
main.o: main.cc point.hh

point.hh:
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ cat ./.deps/main.d [C[C[1P[1P[1P[1P[1@p[1@o[1@i[1@n[1@t
point.o: point.cc point.hh

point.hh:
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ls
main  main.cc  main.o  point.cc  point.hh  point.o
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ cd [K[K[K./main 
distance from (0, 0) to (3, 4) is 5
distance from (0, 0) to (1, 1) is 1.41421
distance from (0, 0) to (4, 5) is 6.40312
distance from (3, 4) to (1, 1) is 3.60555
distance from (3, 4) to (4, 5) is 1.41421
distance from (1, 1) to (4, 5) is 5

sizeof(double) = 8
sizeof(Point) = 16
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ls
main  main.cc  main.o  point.cc  point.hh  point.o
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ cat point.[K.cc 
#include "point.hh"

#include <cmath>
#include <string>
#include <sstream>

/** return distance of this point from other point */
double Point::distance(const Point& other) const {
  const auto dx = x - other.x;
  const auto dy = y - other.y;
  return sqrt(dx*dx + dy*dy);
}

std::string Point::toString() const {
  //declaring s to be a stringstream allows usage similar to std::cout
  std::stringstream s;
  s << "(" << x << ", " << y << ")"; //normal (x, y) format
  return s.str(); //return std::string underlying stringstream
}
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ cat point..[Khh 
#ifndef POINT_HH_
#define POINT_HH_

#include <string>

struct Point {
  //for the purpose of this lab, these fields are public but const.
  //Having them public makes it hard to change the reprentation
  //from these cartesian coordinates to polar coordinates.
  const double x, y;

  /** constructor */
  Point(double x=0, double y=0) : x(x), y(y) { }

  /** return distance of this point from other point */
  //the trailing const means that this function will not change
  //this point
  double distance(const Point& other) const;

  /** return a string representation of this point */
  std::string toString() const;
};



#endif //ifndef POINT_HH_
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ d[Kls
main  main.cc  main.o  point.cc  point.hh  point.o
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ vim main.
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main." [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[94m~                                                                                             [3;1H~                                                                                             [4;1H~                                                                                             [5;1H~                                                                                             [6;1H~                                                                                             [7;1H~                                                                                             [8;1H~                                                                                             [9;1H~                                                                                             [10;1H~                                                                                             [11;1H~                                                                                             [12;1H~                                                                                             [13;1H~                                                                                             [14;1H~                                                                                             [15;1H~                                                                                             [16;1H~                                                                                             [17;1H~                                                                                             [18;1H~                                                                                             [19;1H~                                                                                             [20;1H~                                                                                             [21;1H~                                                                                             [22;1H~                                                                                             [23;1H~                                                                                             [24;1H~                                                                                             [25;1H~                                                                                             [26;1H~                                                                                             [27;1H~                                                                                             [28;1H~                                                                                             [29;1H~                                                                                             [30;1H~                                                                                             [31;1H~                                                                                             [32;1H~                                                                                             [33;1H~                                                                                             [34;1H~                                                                                             [35;1H~                                                                                             [36;1H~                                                                                             [37;1H~                                                                                             [38;1H~                                                                                             [39;1H~                                                                                             [40;1H~                                                                                             [41;1H~                                                                                             [42;1H~                                                                                             [43;1H~                                                                                             [44;1H~                                                                                             [45;1H~                                                                                             [46;1H~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H0,0-1[9CAll]2;main. (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[2;1H[94m~                                                                                             [3;1H~                                                                                             [4;1H~                                                                                             [5;1H~                                                                                             [6;1H~                                                                                             [7;1H~                                                                                             [8;1H~                                                                                             [9;1H~                                                                                             [10;1H~                                                                                             [11;1H~                                                                                             [12;1H~                                                                                             [13;1H~                                                                                             [14;1H~                                                                                             [15;1H~                                                                                             [16;1H~                                                                                             [17;1H~                                                                                             [18;1H~                                                                                             [19;1H~                                                                                             [20;1H~                                                                                             [21;1H~                                                                                             [22;1H~                                                                                             [23;1H~                                                                                             [24;1H~                                                                                             [25;1H~                                                                                             [26;1H~                                                                                             [27;1H~                                                                                             [28;1H~                                                                                             [29;1H~                                                                                             [30;1H~                                                                                             [31;1H~                                                                                             [32;1H~                                                                                             [33;1H~                                                                                             [34;1H~                                                                                             [35;1H~                                                                                             [36;1H~                                                                                             [37;1H~                                                                                             [38;1H~                                                                                             [39;1H~                                                                                             [40;1H~                                                                                             [41;1H~                                                                                             [42;1H~                                                                                             [43;1H~                                                                                             [44;1H~                                                                                             [45;1H~                                                                                             [46;1H~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H0,0-1[9CAll"main." [New File][1;1H[?25h[?25l[49;67HZ[1;1H[?25h[?25l[49;68HZ[1;1H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ vim main.
main.cc  main.o   
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ vim main.
main.cc  main.o   
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ vim main.[K[K[K[K[K[K[K[K[Kmake clean
make: *** No rule to make target 'clean'.  Stop.
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ls
main  main.cc  main.o  point.cc  point.hh  point.o
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ vim main.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main.cc" 44L, 1174C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"point.hh"[m

[35m#include [m[31m<iostream>[m

[34m//declare an array of points[m
[32mstatic[m [32mconst[m Point points[] = {
  Point([31m0[m, [31m0[m), Point([31m3[m, [31m4[m), Point([31m1[m, [31m1[m), Point([31m4[m, [31m5[m),
};
[34m//use standard idiom to figure out number of elements in array[m
[32mstatic[m [32mconstexpr[m [32mauto[m nPoints = [38;5;130msizeof[m(points)/[38;5;130msizeof[m(points[[31m0[m]);

[32mstatic[m [32mvoid[m
outSizes(std::ostream& out) {
  out << [31m"sizeof(double) = "[m << [38;5;130msizeof[m([32mdouble[m) << std::endl;
  out << [31m"sizeof(Point) = "[m << [38;5;130msizeof[m(Point) << std::endl;
}

[34m/** output pair-wise distance between all points in points[] to out. */[m
[32mstatic[m [32mvoid[m
outDistances(std::ostream& out)
{
  [38;5;130mfor[m ([32mauto[m i = [31m0u[m; i < nPoints - [31m1[m; i++) {
    Point pi = points[i];
    [38;5;130mfor[m ([32mauto[m j = i + [31m1[m; j < nPoints; j++) {[25;7HPoint pj = points[j];[26;7Hout << [31m"distance from "[m << pi.toString()[27;11H<< [31m" to "[m << pj.toString()[28;11H<< [31m" is "[m << pi.distance(pj)[29;11H<< std::endl;
    }
  }
}

[32mint[m main() {

  [34m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [34m//so if we wanted to output to a file, the code for the functions
[m  [34m//would not need to change (the code in this function would change).[m
  std::ostream& out = std::cout;

  outDistances(out); out << std::endl;

  outSizes(out);
}
[94m~                                                                                             [46;1H~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H1,1[11CAll]2;main.cc (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.cc[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"point.hh"[m

[38;5;81m#include [m[95m<iostream>[m

[96m//declare an array of points[m
[38;5;121mstatic[m [38;5;121mconst[m Point points[] = {
  Point([95m0[m, [95m0[m), Point([95m3[m, [95m4[m), Point([95m1[m, [95m1[m), Point([95m4[m, [95m5[m),
};
[96m//use standard idiom to figure out number of elements in array[m
[38;5;121mstatic[m [38;5;121mconstexpr[m [38;5;121mauto[m nPoints = [93msizeof[m(points)/[93msizeof[m(points[[95m0[m]);

[38;5;121mstatic[m [38;5;121mvoid[m
outSizes(std::ostream& out) {
  out << [95m"sizeof(double) = "[m << [93msizeof[m([38;5;121mdouble[m) << std::endl;
  out << [95m"sizeof(Point) = "[m << [93msizeof[m(Point) << std::endl;
}

[96m/** output pair-wise distance between all points in points[] to out. */[m
[38;5;121mstatic[m [38;5;121mvoid[m
outDistances(std::ostream& out)
{
  [93mfor[m ([38;5;121mauto[m i = [95m0u[m; i < nPoints - [95m1[m; i++) {
    Point pi = points[i];
    [93mfor[m ([38;5;121mauto[m j = i + [95m1[m; j < nPoints; j++) {[25;7HPoint pj = points[j];[26;7Hout << [95m"distance from "[m << pi.toString()[27;11H<< [95m" to "[m << pj.toString()[28;11H<< [95m" is "[m << pi.distance(pj)[29;11H<< std::endl;
    }
  }
}

[38;5;121mint[m main() {

  [96m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [96m//so if we wanted to output to a file, the code for the functions
[m  [96m//would not need to change (the code in this function would change).[m
  std::ostream& out = std::cout;

  outDistances(out); out << std::endl;

  outSizes(out);
}
[94m~                                                                                             [46;1H~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H1,1[11CAll"main.cc" 44L, 1174C[1;1H[?25h[?25l[49;67H~@k[1;1H[49;67H   [2;1H[49;77H2,0-1[2;1H[?25h[?25l[49;67H~@k[2;1H[49;67H   [3;1H[49;77H3,1  [3;1H[?25h[?25l[49;67H~@k[3;1H[49;67H   [4;1H[49;77H4,0-1[4;1H[?25h[?25l[49;67H~@k[4;1H[49;67H   [5;1H[49;77H5,1  [5;1H[?25h[?25l[49;67H~@k[5;1H[49;67H   [6;1H[49;77H6[6;1H[?25h[?25l[49;67H~@k[6;1H[49;67H   [7;1H[49;77H7[7;1H[?25h[?25l[49;67H~@k[7;1H[49;67H   [8;1H[6;31H[46m{

}[m[49;77H8[8;1H[?25h[?25l[49;67H~@k[8;1H[49;67H   [9;1H[6;31H{

}[49;77H9[9;1H[?25h[?25l[49;67H~@k[9;1H[49;67H   [10;1H[49;77H10,1[10;1H[?25h[?25l[49;67H~@k[10;1H[49;67H   [11;1H[49;78H1,0-1[11;1H[?25h[?25l[49;67H~@k[11;1H[49;67H   [12;1H[49;78H2,1  [12;1H[?25h[?25l[49;67H~@k[12;1H[49;67H   [13;1H[49;78H3[13;1H[?25h[?25l[49;67H~@k[13;1H[49;67H   [14;1H[49;78H4[14;1H[?25h[?25l[49;67H~@k[14;1H[49;67H   [15;1H[49;78H5[15;1H[?25h[?25l[49;67H~@k[15;1H[49;67H   [16;1H[13;29H[46m{


}[m[49;78H6[16;1H[?25h[?25l[49;67H~@k[16;1H[49;67H   [17;1H[13;29H{


}[49;78H7,0-1[17;1H[?25h[?25l[49;67H~@k[17;1H[49;67H   [18;1H[49;78H8,1  [18;1H[?25h[?25l[49;67H~@k[18;1H[49;67H   [19;1H[49;78H9[19;1H[?25h[?25l[49;67H~@k[19;1H[49;67H   [20;1H[49;77H20[20;1H[?25h[?25l[49;67H~@k[20;1H[49;67H   [21;1H[46m{[32;1H}[m[49;78H1[21;1H[?25h[?25l[49;67H~@k[21;1H[49;67H   [22;1H[21;1H{[32;1H}[49;78H2[22;1H[?25h[?25l[49;67H~@k[22;1H[49;67H   [23;1H[49;78H3[23;1H[?25h[?25l[49;67H~@k[23;1H[49;67H   [24;1H[49;78H4[24;1H[?25h[?25l[49;67H~@k[24;1H[49;67H   [25;1H[49;78H5[25;1H[?25h[?25l[49;67H~@k[25;1H[49;67H   [26;1H[49;78H6[26;1H[?25h[?25l[49;67H~@k[26;1H[49;67H   [27;8H[49;78H7,1-8[27;8H[?25h[?25l[49;67H~@k[27;8H[49;67H   [28;8H[49;78H8[28;8H[?25h[?25l[49;67H~@k[28;8H[49;67H   [29;8H[49;78H9[29;8H[?25h[?25l[49;67H~@k[29;8H[49;67H   [30;1H[49;77H30,1  [30;1H[?25h[?25l[49;67H~@k[30;1H[49;67H   [31;1H[49;78H1[31;1H[?25h[?25l[49;67H~@k[31;1H[49;67H   [30;1H[49;78H0[30;1H[?25h[?25l[49;67H~@k[30;1H[49;67H   [29;8H[49;77H29,1-8[29;8H[?25h[?25l[49;67H~@k[29;8H[49;67H   [28;8H[49;78H8[28;8H[?25h[?25l[49;67H~@k[28;8H[49;67H   [27;8H[49;78H7[27;8H[?25h[?25l[49;67H~@k[27;8H[49;67H   [26;1H[49;78H6,1  [26;1H[?25h[?25l[49;67H~@k[26;1H[49;67H   [25;1H[49;78H5[25;1H[?25h[?25l[49;67H~@k[25;1H[49;67H   [24;1H[49;78H4[24;1H[?25h[?25l[49;67H~@k[24;1H[49;67H   [23;1H[49;78H3[23;1H[?25h[?25l[49;67H~@k[23;1H[49;67H   [22;1H[49;78H2[22;1H[?25h[?25l[49;67H~@k[22;1H[49;67H   [21;1H[46m{[32;1H}[m[49;78H1[21;1H[?25h[?25l[49;67H~@k[21;1H[49;67H   [20;1H
{[32;1H}[49;78H0[20;1H[?25h[?25l[49;67H~@k[20;1H[49;67H   [19;1H[49;77H19[19;1H[?25h[?25l[49;67H~@k[19;1H[49;67H   [18;1H[49;78H8[18;1H[?25h[?25l[49;67H~@k[18;1H[49;67H   [17;1H[49;78H7,0-1[17;1H[?25h[?25l[49;67H~@k[17;1H[49;67H   [16;1H[13;29H[46m{


}[m[49;78H6,1  [16;1H[?25h[?25l[49;67H~@k[16;1H[49;67H   [15;1H[13;29H{


}[49;78H5[15;1H[?25h[?25l[49;67H~@k[15;1H[49;67H   [14;1H[49;78H4[14;1H[?25h[?25l[49;67H~@k[14;1H[49;67H   [13;1H[49;78H3[13;1H[?25h[?25l[49;67H~@k[13;1H[49;67H   [12;1H[49;78H2[12;1H[?25h[?25l[49;67H~@k[12;1H[49;67H   [11;1H[49;78H1,0-1[11;1H[?25h[?25l[49;67H~@k[11;1H[49;67H   [10;1H[49;78H0,1  [10;1H[?25h[?25l[49;67H~@k[10;1H[49;67H   [9;1H[49;77H9,1 [9;1H[?25h[?25l[49;67H~@k[9;1H[49;67H   [8;1H[6;31H[46m{

}[m[49;77H8[8;1H[?25h[?25l[49;67H~@k[8;1H[49;67H   [7;1H[6;31H{

}[49;77H7[7;1H[?25h[?25l[49;67H~@k[7;1H[49;67H   [6;1H[49;77H6[6;1H[?25h[?25l[49;67H~@k[6;1H[49;67H   [5;1H[49;77H5[5;1H[?25h[?25l[49;67H~@k[5;1H[49;67H   [4;1H[49;77H4,0-1[4;1H[?25h[?25l[49;67H~@k[4;1H[49;67H   [5;1H[49;77H5,1  [5;1H[?25h[?25l[49;67H~@k[5;1H[49;67H   [6;1H[49;77H6[6;1H[?25h[?25l[49;67H~@k[6;1H[49;67H   [7;1H[49;77H7[7;1H[?25h[?25l[49;67H~@k[7;1H[49;67H   [8;1H[6;31H[46m{

}[m[49;77H8[8;1H[?25h[?25l[49;67H~@k[8;1H[49;67H   [9;1H[6;31H{

}[49;77H9[9;1H[?25h[?25l[49;67H~@k[9;1H[49;67H   [10;1H[49;77H10,1[10;1H[?25h[?25l[49;67H~@k[10;1H[49;67H   [11;1H[49;78H1,0-1[11;1H[?25h[?25l[49;67H~@k[11;1H[49;67H   [12;1H[49;78H2,1  [12;1H[?25h[?25l[49;67H~@k[12;1H[49;67H   [13;1H[49;78H3[13;1H[?25h[?25l[49;67H~@k[13;1H[49;67H   [14;1H[49;78H4[14;1H[?25h[?25l[49;67H~@k[14;1H[49;67H   [15;1H[49;78H5[15;1H[?25h[?25l[49;67H~@k[15;1H[49;67H   [16;1H[13;29H[46m{


}[m[49;78H6[16;1H[?25h[?25l[49;67H~@k[16;1H[49;67H   [17;1H[13;29H{


}[49;78H7,0-1[17;1H[?25h[?25l[49;67H~@k[17;1H[49;67H   [18;1H[49;78H8,1  [18;1H[?25h[?25l[49;67H~@k[18;1H[49;67H   [19;1H[49;78H9[19;1H[?25h[?25l[49;67H~@k[19;1H[49;67H   [20;1H[49;77H20[20;1H[?25h[?25l[49;67H~@k[20;1H[49;67H   [19;1H[49;77H19[19;1H[?25h[?25l[49;67H~@k[19;1H[49;67H   [18;1H[49;78H8[18;1H[?25h[?25l[49;67H~@k[18;1H[49;67H   [17;1H[49;78H7,0-1[17;1H[?25h[?25l[49;67H~@k[17;1H[49;67H   [16;1H[13;29H[46m{


}[m[49;78H6,1  [16;1H[?25h[?25l[49;67H~@k[16;1H[49;67H   [15;1H[13;29H{


}[49;78H5[15;1H[?25h[?25l[49;67H~@k[15;1H[49;67H   [14;1H[49;78H4[14;1H[?25h[?25l[49;67H~@k[14;1H[49;67H   [13;1H[49;78H3[13;1H[?25h[?25l[49;67H~@k[13;1H[49;67H   [12;1H[49;78H2[12;1H[?25h[?25l[49;67H~@k[12;1H[49;67H   [11;1H[49;78H1,0-1[11;1H[?25h[?25l[49;67H~@k[11;1H[49;67H   [10;1H[49;78H0,1  [10;1H[?25h[?25l[49;67H~@k[10;1H[49;67H   [9;1H[49;77H9,1 [9;1H[?25h[?25l[49;67H~@k[9;1H[49;67H   [8;1H[6;31H[46m{

}[m[49;77H8[8;1H[?25h[?25l[49;67H~@k[8;1H[49;67H   [7;1H[6;31H{

}[49;77H7[7;1H[?25h[?25l[49;67H~@k[7;1H[49;67H   [6;1H[49;77H6[6;1H[?25h[?25l[49;67H~@k[6;1H[49;67H   [5;1H[49;77H5[5;1H[?25h[?25l[49;67H~@k[5;1H[49;67H   [4;1H[49;77H4,0-1[4;1H[?25h[?25l[49;67H~@k[4;1H[49;67H   [3;1H[49;77H3,1  [3;1H[?25h[?25l[49;67H~@k[3;1H[49;67H   [4;1H[49;77H4,0-1[4;1H[?25h[?25l[49;67Hi[4;1H[49;67H [4;1H[49;1H[1m-- INSERT --[m[49;13H[K[49;77H4,1[11CAll[4;1H[?25h[?25l[5;48r[5;1H[L[1;49r[49;77H[K[49;77H5,1[11CAll]2;main.cc + (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.cc[5;1H[?25h[?25l[6;48r[6;1H[L[1;49r[49;77H[K[49;77H6,1[11CAll[6;1H[?25h[?25l[49;77H5[5;1H[?25h[?25lc[49;79H2[5;2H[?25h[?25ll[49;79H3[5;3H[?25h[?25la[49;79H4[5;4H[?25h[?25ls[49;79H5[5;5H[?25h[?25l[38;5;121mclass[m[49;79H6[5;6H[?25h[?25l[49;79H7[5;7H[?25h[?25lL[49;79H8[5;8H[?25h[?25li[49;79H9[5;9H[?25h[?25ln[49;79H10[5;10H[?25h[?25le[49;80H1[5;11H[?25h[?25l[6;48r[6;1H[L[1;49r[49;77H[K[49;77H6,1[11CAll[6;1H[?25h[?25l{[49;79H2[6;2H[?25h[?25l[7;48r[7;1H[L[1;49r[49;77H[K[49;77H7,2-9[9CAll[7;9H[?25h[?25l}[6;1H[46m{
}[m[49;80H  [7;2H[?25h[?25l;[6;1H{
}[49;79H3[7;3H[?25h[?25l[6;1H[46m{
}[m[49;77H6,2[6;2H[?25h[?25l[7;48r[7;1H[L[1;49r[7;1H[46m        [m
}[49;77H[K[49;77H7,2-9[9CTop[6;1H{
        [?25h[?25lP[49;79H3-10[7;10H[?25h[?25lo[49;79H4-11[7;11H[?25h[?25li[49;79H5-12[7;12H[?25h[?25ln[49;79H6-13[7;13H[?25h[?25lt[49;79H7-14[7;14H[?25h[?25l[49;79H8-15[7;15H[?25h[?25lp[49;79H9-16[7;16H[?25h[?25l1[49;79H10-17[7;17H[?25h[?25l,[49;80H1-18[7;18H[?25h[?25l[49;80H2-19[7;19H[?25h[?25lp[49;80H3-20[7;20H[?25h[?25l2[49;80H4-21[7;21H[?25h[?25l;[49;80H5-22[7;22H[?25h[?25l[8;48r[8;1H[L[1;49r[49;77H[K[49;77H8,2-9[9CTop[8;9H[?25h[?25ld[49;79H3-10[8;10H[?25h[?25l[93mdo[m[49;79H4-11[8;11H[?25h[?25ldou[49;79H5-12[8;12H[?25h[?25lb[49;79H6-13[8;13H[?25h[?25ll[49;79H7-14[8;14H[?25h[?25l[38;5;121mdouble[m[49;79H8-15[8;15H[?25h[?25l[49;79H9-16[8;16H[?25h[?25ll[49;79H10-17[8;17H[?25h[?25le[49;80H1-18[8;18H[?25h[?25ln[49;80H2-19[8;19H[?25h[?25lt[49;80H3-20[8;20H[?25h[?25lh[49;80H4-21[8;21H[?25h[?25l([49;80H5-22[8;22H[?25h[?25l)[46m()[m[49;80H6-23[8;23H[?25h[?25l[8;22H[K[8;21H([49;80H5-22[8;22H[?25h[?25l[8;21H[K[49;80H4-21[8;21H[?25h[?25l[8;20H[K[49;80H3-20[8;20H[?25h[?25l[8;19H[K[49;80H2-19[8;19H[?25h[?25l[8;18H[K[49;80H1-18[8;18H[?25h[?25lg[49;80H2-19[8;19H[?25h[?25lt[49;80H3-20[8;20H[?25h[?25l[8;19H[K[49;80H2-19[8;19H[?25h[?25l[8;18H[K[49;80H1-18[8;18H[?25h[?25ln[49;80H2-19[8;19H[?25h[?25lg[49;80H3-20[8;20H[?25h[?25lt[49;80H4-21[8;21H[?25h[?25lh[49;80H5-22[8;22H[?25h[?25l([49;80H6-23[8;23H[?25h[?25l)[46m()[m[49;80H7-24[8;24H[?25h[?25l;()[49;80H8-25[8;25H[?25h[?25l[9;48r[9;1H[L[1;49r[49;77H[K[49;77H9,2-9[9CTop[9;9H[?25h[?25ls[49;79H3-10[9;10H[?25h[?25lt[49;79H4-11[9;11H[?25h[?25lr[49;79H5-12[9;12H[?25h[?25l[9;11H[K[49;79H4-11[9;11H[?25h[?25l[9;10H[K[49;79H3-10[9;10H[?25h[?25l[9;9H[K[49;79H2-9 [9;9H[?25h[?25l[49;77H8[8;9H[?25h[?25l[49;77H7[7;9H[?25h[?25l[6;1H[46m{[10;1H}[m[49;77H6,2  [6;2H[?25h[?25l{[10;1H}[49;77H5,9[5;9H[?25h[?25l[49;77H4,1[4;1H[?25h[?25lu[49;79H2[4;2H[?25h[?25ls[49;79H3[4;3H[?25h[?25li[49;79H4[4;4H[?25h[?25ln[49;79H5[4;5H[?25h[?25l[93musing[m[49;79H6[4;6H[?25h[?25l[49;79H7[4;7H[?25h[?25ln[49;79H8[4;8H[?25h[?25la[49;79H9[4;9H[?25h[?25lm[49;79H10[4;10H[?25h[?25le[49;80H1[4;11H[?25h[?25ls[49;80H2[4;12H[?25h[?25lp[49;80H3[4;13H[?25h[?25la[49;80H4[4;14H[?25h[?25lc[49;80H5[4;15H[?25h[?25l[4;7H[38;5;121mnamespace[m[49;80H6[4;16H[?25h[?25l[4;7Hnamespacec[49;80H7[4;17H[?25h[?25l[49;80H8[4;18H[?25h[?25ls[49;80H9[4;19H[?25h[?25l[4;18H[K[49;80H8[4;18H[?25h[?25l[49;80H7[4;17H[?25h[?25l[4;7H[38;5;121mnamespace[m[4;16H[K[49;80H6[4;16H[?25h[?25l[49;80H7[4;17H[?25h[?25ls[49;80H8[4;18H[?25h[?25lt[49;80H9[4;19H[?25h[?25ld[49;79H20[4;20H[?25h[?25l;[49;80H1[4;21H[?25h[?25l[5;48r[5;1H[L[1;49r[49;77H[K[49;77H5,1[11CTop[5;1H[?25h[?25l[49;77H6[6;1H[?25h[?25l
[46m{[11;1H}[m[49;77H7[7;1H[?25h[?25l{[11;1H}[49;77H8[8;1H[?25h[?25l[49;77H9[9;1H[?25h[?25l[49;77H10,1[10;1H[?25h[?25l[7;1H[46m{[11;1H}[m[49;78H1[11;1H[?25h[?25l[7;1H{[11;1H}[49;78H0[10;1H[?25h[?25l[9;48r[48;1H
[1;49r[9;9H[38;5;121mdouble[m length();[48;3HoutDistances(out); out << std::endl;[49;77H[K[49;77H9,18-25[7CTop[9;25H[?25h[?25l[10;48r[10;1H[L[1;49r[49;77H[K[49;77H10,1[10CTop[10;1H[?25h[?25l[49;80H2-9[10;9H[?25h[?25ls[49;80H3-10[10;10H[?25h[?25lt[49;80H4-11[10;11H[?25h[?25lr[49;80H5-12[10;12H[?25h[?25li[49;80H6-13[10;13H[?25h[?25ln[49;80H7-14[10;14H[?25h[?25lg[49;80H8-15[10;15H[?25h[?25l[49;80H9-16[10;16H[?25h[?25lt[49;80H10-17[10;17H[?25h[?25lo[49;81H1-18[10;18H[?25h[?25lS[49;81H2-19[10;19H[?25h[?25lt[49;81H3-20[10;20H[?25h[?25lr[49;81H4-21[10;21H[?25h[?25li[49;81H5-22[10;22H[?25h[?25ln[49;81H6-23[10;23H[?25h[?25lg[49;81H7-24[10;24H[?25h[?25l([49;81H8-25[10;25H[?25h[?25l)[46m()[m[49;81H9-26[10;26H[?25h[?25l;()[49;80H20-27[10;27H[?25h[?25l[49;78H1,3    [11;3H[?25h[?25l[49;78H0,20-27[10;27H[?25h[?25l[49;78H1,3    [11;3H[?25h[?25l[12;48r[12;1H[L[1;49r[49;77H[K[49;77H12,1[10CTop[12;1H[?25h[?25l[13;48r[13;1H[L[1;49r[49;77H[K[49;77H13,1[10CTop[13;1H[?25h[?25ld[49;80H2[13;2H[?25h[?25l[93mdo[m[49;80H3[13;3H[?25h[?25ldou[49;80H4[13;4H[?25h[?25lb[49;80H5[13;5H[?25h[?25ll[49;80H6[13;6H[?25h[?25l[38;5;121mdouble[m[49;80H7[13;7H[?25h[?25l[49;80H8[13;8H[?25h[?25l[49;78H2,1[12;1H[?25h[?25l[49;78H1,3[11;3H[?25h[?25l[49;78H0,1[10;1H[?25h[?25l[49;77H9,1 [9;1H[?25h[?25l[49;79H2-9[9;9H[?25h[?25l[49;79H3-10[9;10H[?25h[?25l[49;79H4-11[9;11H[?25h[?25l[49;79H5-12[9;12H[?25h[?25l[49;79H6-13[9;13H[?25h[?25l[49;79H7-14[9;14H[?25h[?25l[49;79H8-15[9;15H[?25h[?25l[49;79H9-16[9;16H[?25h[?25l[49;79H10-17[9;17H[?25h[?25l[49;80H1-18[9;18H[?25h[?25l[49;80H2-19[9;19H[?25h[?25l[49;80H3-20[9;20H[?25h[?25l[49;80H4-21[9;21H[?25h[?25lh[46m()[m[49;80H5-22[9;22H[?25h[?25l[49;80H6-23[9;23H[?25h[?25l[46mP[m);P[46m)[m[49;80H7-24[9;24H[?25h[?25l[46mo[m);o[46m)[m[49;80H8-25[9;25H[?25h[?25l[46mi[m);i[46m)[m[49;80H9-26[9;26H[?25h[?25l[46mn[m);n[46m)[m[49;79H20-27[9;27H[?25h[?25l[46mt[m);t[46m)[m[49;80H1-28[9;28H[?25h[?25l[46m [m); [46m)[m[49;80H2-29[9;29H[?25h[?25l[46mp[m);p[46m)[m[49;80H3-30[9;30H[?25h[?25l[46m1[m);1[46m)[m[49;80H4-31[9;31H[?25h[?25l[46m,[m);,[46m)[m[49;80H5-32[9;32H[?25h[?25l[46m [m); [46m)[m[49;80H6-33[9;33H[?25h[?25l[46mP[m);P[46m)[m[49;80H7-34[9;34H[?25h[?25l[46mo[m);o[46m)[m[49;80H8-35[9;35H[?25h[?25l[46mi[m);i[46m)[m[49;80H9-36[9;36H[?25h[?25l[46mn[m);n[46m)[m[49;79H30-37[9;37H[?25h[?25l[46mt[m);t[46m)[m[49;80H1-38[9;38H[?25h[?25l[46m [m); [46m)[m[49;80H2-39[9;39H[?25h[?25l[46mp[m);p[46m)[m[49;80H3-40[9;40H[?25h[?25l[46m2[m);2[46m)[m[49;80H4-41[9;41H[?25h[?25l[9;22H([18C)[49;77H10,21-33[10;33H[?25h[?25l[49;78H1,3    [11;3H[?25h[?25l[49;78H2,1[12;1H[?25h[?25l[49;78H3,8[13;8H[?25h[?25l[49;80H9[13;9H[?25h[?25ld[49;80H10[13;10H[?25h[?25l[93mdo[m[49;81H1[13;11H[?25h[?25ldob[49;81H2[13;12H[?25h[?25lu[49;81H3[13;13H[?25h[?25ll[49;81H4[13;14H[?25h[?25l[13;13H[K[49;81H3[13;13H[?25h[?25l[13;12H[K[49;81H2[13;12H[?25h[?25l[93mdo[m[13;11H[K[49;81H1[13;11H[?25h[?25ld[13;10H[K[49;81H0[13;10H[?25h[?25l[13;9H[K[49;80H9 [13;9H[?25h[?25l[49;80H8[13;8H[?25h[?25lL[49;80H9[13;9H[?25h[?25li[49;80H10[13;10H[?25h[?25ln[49;81H1[13;11H[?25h[?25le[49;81H2[13;12H[?25h[?25l:[49;81H3[13;13H[?25h[?25l:[49;81H4[13;14H[?25h[?25ll[49;81H5[13;15H[?25h[?25le[49;81H6[13;16H[?25h[?25ln[49;81H7[13;17H[?25h[?25lg[49;81H8[13;18H[?25h[?25lt[49;81H9[13;19H[?25h[?25lh[49;80H20[13;20H[?25h[?25l([49;81H1[13;21H[?25h[?25l)[46m()[m[49;81H2[13;22H[?25h[?25l[13;21H[K[13;20H([49;81H1[13;21H[?25h[?25lP[49;81H2[13;22H[?25h[?25lo[49;81H3[13;23H[?25h[?25li[49;81H4[13;24H[?25h[?25ln[49;81H5[13;25H[?25h[?25lt[49;81H6[13;26H[?25h[?25l[49;81H7[13;27H[?25h[?25lp[49;81H8[13;28H[?25h[?25l1[49;81H9[13;29H[?25h[?25l,[49;80H30[13;30H[?25h[?25l[49;81H1[13;31H[?25h[?25lP[49;81H2[13;32H[?25h[?25lo[49;81H3[13;33H[?25h[?25li[49;81H4[13;34H[?25h[?25ln[49;81H5[13;35H[?25h[?25lt[49;81H6[13;36H[?25h[?25l[49;81H7[13;37H[?25h[?25lp[49;81H8[13;38H[?25h[?25l2[49;81H9[13;39H[?25h[?25l)[13;20H[46m([18C)[m[49;80H40[13;40H[?25h[?25l[14;48r[14;1H[L[1;49r[49;77H[K[49;77H14,2-9[8CTop[13;20H([18C)[14;9H[?25h[?25l{[49;81H  [14;2H[?25h[?25l[15;48r[15;1H[L[1;49r[49;77H[K[49;77H15,2-9[8CTop[15;9H[?25h[?25l}[14;1H[46m{
}[m[49;81H  [15;2H[?25h[?25l[49;78H4[14;2H[?25h[?25l[15;48r[15;1H[L[1;49r[15;1H[46m        [m
}[49;77H[K[49;77H15,2-9[8CTop[14;1H{
        [?25h[?25lr[49;80H3-10[15;10H[?25h[?25le[49;80H4-11[15;11H[?25h[?25lt[49;80H5-12[15;12H[?25h[?25lu[49;80H6-13[15;13H[?25h[?25lr[49;80H7-14[15;14H[?25h[?25lb[49;80H8-15[15;15H[?25h[?25l[49;80H9-16[15;16H[?25h[?25l[49;80H8-15[15;15H[?25h[?25l[15;14H[K[49;80H7-14[15;14H[?25h[?25l[93mreturn[m[49;80H8-15[15;15H[?25h[?25l[49;80H9-16[15;16H[?25h[?25ld[49;80H10-17[15;17H[?25h[?25li[49;81H1-18[15;18H[?25h[?25ls[49;81H2-19[15;19H[?25h[?25lt[49;81H3-20[15;20H[?25h[?25la[49;81H4-21[15;21H[?25h[?25ln[49;81H5-22[15;22H[?25h[?25lc[49;81H6-23[15;23H[?25h[?25le[49;81H7-24[15;24H[?25h[?25l([49;81H8-25[15;25H[?25h[?25l)[46m()[m[49;81H9-26[15;26H[?25h[?25l;()[49;80H20-27[15;27H[?25h[?25l[46m()[m[49;80H19-26[15;26H[?25h[?25l[49;81H8-25[15;25H[?25h[?25l[49;81H7-24[15;24H[?25h[?25l()[49;81H6-23[15;23H[?25h[?25l[49;81H5-22[15;22H[?25h[?25l[49;81H4-21[15;21H[?25h[?25l[49;81H3-20[15;20H[?25h[?25l[49;81H2-19[15;19H[?25h[?25l[49;81H1-18[15;18H[?25h[?25l[49;81H0-17[15;17H[?25h[?25l[49;80H9-16 [15;16H[?25h[?25lpdistance();[49;80H10-17[15;17H[?25h[?25l1distance();[49;81H1-18[15;18H[?25h[?25l.distance();[49;81H2-19[15;19H[?25h[?25l[49;81H3-20[15;20H[?25h[?25l[49;81H4-21[15;21H[?25h[?25l[49;81H5-22[15;22H[?25h[?25l[49;81H6-23[15;23H[?25h[?25l[49;81H7-24[15;24H[?25h[?25l[49;81H8-25[15;25H[?25h[?25l[49;81H9-26[15;26H[?25h[?25le[46m()[m[49;80H20-27[15;27H[?25h[?25l[49;81H1-28[15;28H[?25h[?25l[49;81H2-29[15;29H[?25h[?25l()[49;81H3-30[15;30H[?25h[?25l[46m()[m[49;81H2-29[15;29H[?25h[?25l[49;81H1-28[15;28H[?25h[?25l[46mp[m);p[46m)[m[49;81H2-29[15;29H[?25h[?25l[46m2[m);2[46m)[m[49;81H3-30[15;30H[?25h[?25l[49;81H4-31[15;31H[?25h[?25l(p2)[49;81H5-32[15;32H[?25h[?25l[14;1H[46m{

}[m[49;78H6,2    [16;2H[?25h[?25l[14;1H{

}[49;78H5,25-32[15;32H[?25h[?25l[14;1H[46m{

}[m[49;78H6,2    [16;2H[?25h[?25l[17;48r[17;1H[L[1;49r[49;77H[K[49;77H17,1[10CTop[14;1H{

}
[?25h[?25l[18;48r[18;1H[L[1;49r[49;77H[K[49;77H18,1[10CTop[18;1H[?25h[?25ls[49;80H2[18;2H[?25h[?25lt[49;80H3[18;3H[?25h[?25lr[49;80H4[18;4H[?25h[?25li[49;80H5[18;5H[?25h[?25ln[49;80H6[18;6H[?25h[?25lg[49;80H7[18;7H[?25h[?25l[49;80H8[18;8H[?25h[?25lL[49;80H9[18;9H[?25h[?25li[49;80H10[18;10H[?25h[?25ln[49;81H1[18;11H[?25h[?25le[49;81H2[18;12H[?25h[?25l:[49;81H3[18;13H[?25h[?25l:[49;81H4[18;14H[?25h[?25lt[49;81H5[18;15H[?25h[?25lo[49;81H6[18;16H[?25h[?25lS[49;81H7[18;17H[?25h[?25lt[49;81H8[18;18H[?25h[?25lr[49;81H9[18;19H[?25h[?25li[49;80H20[18;20H[?25h[?25ln[49;81H1[18;21H[?25h[?25lg[49;81H2[18;22H[?25h[?25l([49;81H3[18;23H[?25h[?25l)[46m()[m[49;81H4[18;24H[?25h[?25l[19;48r[19;1H[L[1;49r[49;77H[K[49;77H19,2-9[8CTop[18;22H()[19;9H[?25h[?25l{[49;81H  [19;2H[?25h[?25l[20;48r[20;1H[L[1;49r[49;77H[K[49;77H20,2-9[8CTop[20;9H[?25h[?25l}[19;1H[46m{
}[m[49;81H  [20;2H[?25h[?25l[49;77H19[19;2H[?25h[?25l[20;48r[20;1H[L[1;49r[20;1H[46m        [m
}[49;77H[K[49;77H20,2-9[8CTop[19;1H{
        [?25h[?25l[49;77H18,15 [18;15H[?25h[?25l[49;77H20,1 [20;1H[?25h[?25l[19;1H[46m{

}[m[49;78H1,2[21;2H[?25h[?25l[19;1H{

}[49;78H0,1[20;1H[?25h[?25l[19;48r[48;1H
[1;49r[19;1H{[48;3H}[49;77H[K[49;77H19,2[10CTop[19;1H[46m{
}[19;2H[?25h[?25l[20;48r[m[20;1H[L[1;49r[20;1H[46m        [m
}[49;77H[K[49;77H20,2-9[8CTop[19;1H{
        [?25h[?25ls[49;80H3-10[20;10H[?25h[?25lt[49;80H4-11[20;11H[?25h[?25lr[49;80H5-12[20;12H[?25h[?25li[49;80H6-13[20;13H[?25h[?25ln[49;80H7-14[20;14H[?25h[?25lg[49;80H8-15[20;15H[?25h[?25l[19;1H[46m{

}[m[49;77H19,2   [19;2H[?25h[?25l{

}[49;78H8,15[18;15H[?25h[?25l[49;78H7,1 [17;1H[?25h[?25l[14;1H[46m{

}[m[49;78H6,2[16;2H[?25h[?25l[14;1H{

}[49;78H5,8-15[15;15H[?25h[?25l[14;1H[46m{

}[m[49;78H4,2   [14;2H[?25h[?25l{

}[49;78H3,15[13;15H[?25h[?25l[49;78H2,1 [12;1H[?25h[?25l[49;78H1,3[11;3H[?25h[?25l[49;78H0,8-15[10;15H[?25h[?25l[49;77H9,8-15 [9;15H[?25h[?25l[49;77H8[8;15H[?25h[?25l[7;1H[46m{[11;1H}[m[49;77H7,2   [7;2H[?25h[?25l{[11;1H}[49;77H6,11[6;11H[?25h[?25l[49;77H5,1 [5;1H[?25h[?25l[49;77H4,15[4;15H[?25h[?25l[49;77H3[3;15H[?25h[?25l[49;77H2,1 [2;1H[?25h[?25l[49;77H1,15[1;15H[?25h[?25l[49;77H2,1 [2;1H[?25h[?25l#[49;79H2[2;2H[?25h[?25li[49;79H3[2;3H[?25h[?25ln[49;79H4[2;4H[?25h[?25lc[49;79H5[2;5H[?25h[?25ll[49;79H6[2;6H[?25h[?25lu[49;79H7[2;7H[?25h[?25ld[49;79H8[2;8H[?25h[?25le[49;79H9[2;9H[?25h[?25l[49;79H10[2;10H[?25h[?25l[38;5;81m#include <[m[49;80H1[2;11H[?25h[?25ls[49;80H2[2;12H[?25h[?25lt[49;80H3[2;13H[?25h[?25lr[49;80H4[2;14H[?25h[?25l[2;13H[K[49;80H3[2;13H[?25h[?25l[2;12H[K[49;80H2[2;12H[?25h[?25ls[49;80H3[2;13H[?25h[?25lt[49;80H4[2;14H[?25h[?25lr[49;80H5[2;15H[?25h[?25le[49;80H6[2;16H[?25h[?25la[49;80H7[2;17H[?25h[?25lm[49;80H8[2;18H[?25h[?25l[2;10H[95m<sstream>[m[49;80H9[2;19H[?25h[?25l[49;77H3[3;19H[?25h[?25l[49;77H4[4;19H[?25h[?25l[49;77H5,1 [5;1H[?25h[?25l[49;77H6,11[6;11H[?25h[?25l
[46m{[11;1H}[m[49;77H7,2 [7;2H[?25h[?25l{[11;1H}[49;77H8,12-19[8;19H[?25h[?25l[49;77H9[9;19H[?25h[?25l[49;77H10,12-19[10;19H[?25h[?25l[49;78H1,3    [11;3H[?25h[?25l[49;78H2,1[12;1H[?25h[?25l[49;78H3,19[13;19H[?25h[?25l
[46m{

}[m[49;78H4,2 [14;2H[?25h[?25l{

}[49;78H5,12-19[15;19H[?25h[?25l[14;1H[46m{

}[m[49;78H6,2    [16;2H[?25h[?25l[14;1H{

}[49;78H7,1[17;1H[?25h[?25l[49;78H8,19[18;19H[?25h[?25l
[46m{

}[m[49;78H9,2 [19;2H[?25h[?25l{

}[49;77H20,8-15[20;15H[?25h[?25l[19;1H[46m{

}[m[49;78H1,2   [21;2H[?25h[?25l[19;1H{

}[49;78H0,8-15[20;15H[?25h[?25l[49;80H9-16[20;16H[?25h[?25l[49;80H8-15[20;15H[?25h[?25ls[49;80H9-16[20;16H[?25h[?25lt[49;80H10-17[20;17H[?25h[?25lr[49;81H1-18[20;18H[?25h[?25le[49;81H2-19[20;19H[?25h[?25la[49;81H3-20[20;20H[?25h[?25lm[49;81H4-21[20;21H[?25h[?25l[49;81H5-22[20;22H[?25h[?25ls[49;81H6-23[20;23H[?25h[?25l;[49;81H7-24[20;24H[?25h[?25l[21;48r[21;1H[L[1;49r[49;77H[K[49;77H21,2-9[8CTop[21;9H[?25h[?25ls[49;80H3-10[21;10H[?25h[?25l[49;80H4-11[21;11H[?25h[?25l<[49;80H5-12[21;12H[?25h[?25l<[49;80H6-13[21;13H[?25h[?25l[49;80H7-14[21;14H[?25h[?25l[49;80H6-13[21;13H[?25h[?25l[21;12H[K[49;80H5-12[21;12H[?25h[?25l[21;11H[K[49;80H4-11[21;11H[?25h[?25l[49;80H3-10[21;10H[?25h[?25l[21;9H[K[49;80H2-9 [21;9H[?25h[?25l[49;80H1  [21;1H[?25h[?25l[20;48r[48;1H
[1;49r[20;9Hstringstream s;[48;5H}[49;77H[K[49;77H20,17-24      Top[20;24H[?25h[?25l[20;23H[K[49;81H6-23[20;23H[?25h[?25lr[49;81H7-24[20;24H[?25h[?25le[49;81H8-25[20;25H[?25h[?25l[49;81H9-26[20;26H[?25h[?25l[49;81H8-25[20;25H[?25h[?25l[20;24H[K[49;81H7-24[20;24H[?25h[?25lt[49;81H8-25[20;25H[?25h[?25lr[49;81H9-26[20;26H[?25h[?25l[20;25H[K[49;81H8-25[20;25H[?25h[?25l[20;24H[K[49;81H7-24[20;24H[?25h[?25l[20;23H[K[49;81H6-23[20;23H[?25h[?25lt[49;81H7-24[20;24H[?25h[?25lr[49;81H8-25[20;25H[?25h[?25l;[49;81H9-26[20;26H[?25h[?25l[21;48r[21;1H[L[1;49r[49;77H[K[49;77H21,2-9[8CTop[21;9H[?25h[?25ls[49;80H3-10[21;10H[?25h[?25lt[49;80H4-11[21;11H[?25h[?25lr[49;80H5-12[21;12H[?25h[?25l[49;80H6-13[21;13H[?25h[?25l<[49;80H7-14[21;14H[?25h[?25l<[49;80H8-15[21;15H[?25h[?25l[49;80H9-16[21;16H[?25h[?25lt[49;80H10-17[21;17H[?25h[?25lo[49;81H1-18[21;18H[?25h[?25lS[49;81H2-19[21;19H[?25h[?25lt[49;81H3-20[21;20H[?25h[?25lr[49;81H4-21[21;21H[?25h[?25li[49;81H5-22[21;22H[?25h[?25ln[49;81H6-23[21;23H[?25h[?25lg[49;81H7-24[21;24H[?25h[?25l[49;81H8-25[21;25H[?25h[?25l[49;81H7-24[21;24H[?25h[?25l([49;81H8-25[21;25H[?25h[?25l)[46m()[m[49;81H9-26[21;26H[?25h[?25l[49;81H8-25[21;25H[?25h[?25l[49;81H7-24[21;24H[?25h[?25l()[49;81H6-23[21;23H[?25h[?25l[49;81H5-22[21;22H[?25h[?25l[49;81H4-21[21;21H[?25h[?25l[49;81H3-20[21;20H[?25h[?25l[49;81H2-19[21;19H[?25h[?25l[49;81H1-18[21;18H[?25h[?25l[49;81H0-17[21;17H[?25h[?25l[49;78H0[20;17H[?25h[?25l[19;1H[46m{


}[m[49;77H19,2    [19;2H[?25h[?25l{


}[49;78H8,17[18;17H[?25h[?25l[49;81H8[18;18H[?25h[?25l[49;81H9[18;19H[?25h[?25l[49;80H20[18;20H[?25h[?25l[49;81H1[18;21H[?25h[?25lg[46m()[m[49;81H2[18;22H[?25h[?25l[49;81H3[18;23H[?25h[?25l[46mP[m)P[46m)[m[49;81H4[18;24H[?25h[?25l[46mo[m)o[46m)[m[49;81H5[18;25H[?25h[?25l[46mi[m)i[46m)[m[49;81H6[18;26H[?25h[?25l[46mn[m)n[46m)[m[49;81H7[18;27H[?25h[?25l[46mt[m)t[46m)[m[49;81H8[18;28H[?25h[?25l[46m [m) [46m)[m[49;81H9[18;29H[?25h[?25l[46mp[m)p[46m)[m[49;80H30[18;30H[?25h[?25l[46m1[m)1[46m)[m[49;81H1[18;31H[?25h[?25l[46m,[m),[46m)[m[49;81H2[18;32H[?25h[?25l[46m [m) [46m)[m[49;81H3[18;33H[?25h[?25l[46mP[m)P[46m)[m[49;81H4[18;34H[?25h[?25l[46mo[m)o[46m)[m[49;81H5[18;35H[?25h[?25l[46mi[m)i[46m)[m[49;81H6[18;36H[?25h[?25l[46mn[m)n[46m)[m[49;81H7[18;37H[?25h[?25l[46mt[m)t[46m)[m[49;81H8[18;38H[?25h[?25l[46m [m) [46m)[m[49;81H9[18;39H[?25h[?25l[46mp[m)p[46m)[m[49;80H40[18;40H[?25h[?25l[46m2[m)2[46m)[m[49;81H1[18;41H[?25h[?25l[18;22H([18C)[49;78H7,1 [17;1H[?25h[?25l[14;1H[46m{

}[m[49;78H6,2[16;2H[?25h[?25l[14;1H{

}[49;78H5,25-32[15;32H[?25h[?25l[14;1H[46m{

}[m[49;78H4,2    [14;2H[?25h[?25l[13;20H[46m([18C)[m
{

}[49;78H3,40[13;40H[?25h[?25l[13;20H([18C)[49;78H2,1 [12;1H[?25h[?25l[49;78H1,3[11;3H[?25h[?25l[49;78H0,21-33[10;33H[?25h[?25l[9;22H[46m([18C)[m[49;77H9,34-41 [9;41H[?25h[?25l[9;22H([18C)[49;77H8,15-22[8;22H[?25h[?25l[9;22H[46m([18C)[m[49;77H9,34-41[9;41H[?25h[?25l[9;22H([18C)[49;77H10,21-33[10;33H[?25h[?25l[49;78H1,3    [11;3H[?25h[?25l[49;78H2,1[12;1H[?25h[?25l[13;20H[46m([18C)[m[49;78H3,40[13;40H[?25h[?25l[49;80H39[13;39H[?25h[?25l[13;20H([18C)[49;81H8[13;38H[?25h[?25l[49;81H7[13;37H[?25h[?25l[49;81H6[13;36H[?25h[?25l[49;81H5[13;35H[?25h[?25l[49;81H4[13;34H[?25h[?25l[49;81H3[13;33H[?25h[?25l[49;81H2[13;32H[?25h[?25l[49;81H1[13;31H[?25h[?25l[49;81H0[13;30H[?25h[?25l[49;80H29[13;29H[?25h[?25l[49;81H8[13;28H[?25h[?25lt1, Point p2)[49;81H9[13;29H[?25h[?25l[49;80H30[13;30H[?25h[?25l[49;81H1[13;31H[?25h[?25l[49;81H2[13;32H[?25h[?25l[49;81H3[13;33H[?25h[?25l[49;81H4[13;34H[?25h[?25l[49;81H5[13;35H[?25h[?25l[49;81H6[13;36H[?25h[?25l[49;81H7[13;37H[?25h[?25l[49;81H8[13;38H[?25h[?25l[49;81H9[13;39H[?25h[?25lt2)[49;80H40[13;40H[?25h[?25l
[46m{

}[m[49;78H4,2 [14;2H[?25h[?25l[49;80H1[14;1H[?25h[?25l{

}[49;78H5[15;1H[?25h[?25l[49;80H2-9[15;9H[?25h[?25l[49;80H3-10[15;10H[?25h[?25l[49;80H4-11[15;11H[?25h[?25l[49;80H5-12[15;12H[?25h[?25l[49;80H6-13[15;13H[?25h[?25l[49;80H7-14[15;14H[?25h[?25l[49;80H8-15[15;15H[?25h[?25l[49;80H9-16[15;16H[?25h[?25l[49;80H10-17[15;17H[?25h[?25lt1.distance(p2);[49;81H1-18[15;18H[?25h[?25l[49;81H2-19[15;19H[?25h[?25l[49;81H3-20[15;20H[?25h[?25l[49;81H4-21[15;21H[?25h[?25l[49;81H5-22[15;22H[?25h[?25l[49;81H6-23[15;23H[?25h[?25l[49;81H7-24[15;24H[?25h[?25l[49;81H8-25[15;25H[?25h[?25l[49;81H9-26[15;26H[?25h[?25l[49;80H20-27[15;27H[?25h[?25le[46m([mp2[46m)[m[49;81H1-28[15;28H[?25h[?25l[49;81H2-29[15;29H[?25h[?25l(p2)[49;81H3-30[15;30H[?25h[?25lt2);[49;81H4-31[15;31H[?25h[?25l[14;1H[46m{

}[m[49;78H4,2    [14;2H[?25h[?25l{

}[49;78H3,31[13;31H[?25h[?25l[49;78H2,1 [12;1H[?25h[?25l[49;78H3,31[13;31H[?25h[?25l[49;81H2[13;32H[?25h[?25l[49;81H3[13;33H[?25h[?25l[49;81H4[13;34H[?25h[?25l[49;81H5[13;35H[?25h[?25l[49;81H6[13;36H[?25h[?25l[49;81H7[13;37H[?25h[?25l[49;81H8[13;38H[?25h[?25l[49;81H9[13;39H[?25h[?25l[49;80H40[13;40H[?25h[?25l[13;20H[46m([20C)[m[49;81H1[13;41H[?25h[?25l[49;81H2[13;42H[?25h[?25l[49;81H1[13;41H[?25h[?25l)[13;41H[K[13;40H[46m)[m[49;81H0[13;40H[?25h[?25l)[13;40H[K[13;39H[46m)[m[49;80H39[13;39H[?25h[?25l)[13;39H[K[13;38H[46m)[m[49;81H8[13;38H[?25h[?25l)[13;38H[K[13;37H[46m)[m[49;81H7[13;37H[?25h[?25l)[13;37H[K[13;36H[46m)[m[49;81H6[13;36H[?25h[?25l)[13;36H[K[13;35H[46m)[m[49;81H5[13;35H[?25h[?25l)[13;35H[K[13;34H[46m)[m[49;81H4[13;34H[?25h[?25l)[13;34H[K[13;33H[46m)[m[49;81H3[13;33H[?25h[?25l)[13;33H[K[13;32H[46m)[m[49;81H2[13;32H[?25h[?25l)[13;32H[K[13;31H[46m)[m[49;81H1[13;31H[?25h[?25l)[13;31H[K[13;30H[46m)[m[49;81H0[13;30H[?25h[?25l)[13;30H[K[13;29H[46m)[m[49;80H29[13;29H[?25h[?25l)[13;29H[K[13;28H[46m)[m[49;81H8[13;28H[?25h[?25l)[13;28H[K[13;27H[46m)[m[49;81H7[13;27H[?25h[?25l)[13;27H[K[13;26H[46m)[m[49;81H6[13;26H[?25h[?25l)[13;26H[K[13;25H[46m)[m[49;81H5[13;25H[?25h[?25l)[13;25H[K[13;24H[46m)[m[49;81H4[13;24H[?25h[?25l)[13;24H[K[13;23H[46m)[m[49;81H3[13;23H[?25h[?25l)[13;23H[K[13;22H[46m)[m[49;81H2[13;22H[?25h[?25l)[13;22H[K[13;21H[46m)[m[49;81H1[13;21H[?25h[?25l()[49;78H2,1 [12;1H[?25h[?25l[49;78H1,3[11;3H[?25h[?25l[49;78H0,14-21[10;21H[?25h[?25l[49;77H9,14-21 [9;21H[?25h[?25lh[46m([18C)[m[49;80H5-22[9;22H[?25h[?25l[49;80H6-23[9;23H[?25h[?25l([18C)[49;80H7-24[9;24H[?25h[?25l[49;80H8-25[9;25H[?25h[?25l[49;80H9-26[9;26H[?25h[?25l[49;79H20-27[9;27H[?25h[?25l[49;80H1-28[9;28H[?25h[?25l[49;80H2-29[9;29H[?25h[?25l[49;80H3-30[9;30H[?25h[?25l[49;80H4-31[9;31H[?25h[?25l[49;80H5-32[9;32H[?25h[?25l[49;80H6-33[9;33H[?25h[?25l[49;80H7-34[9;34H[?25h[?25l[49;80H8-35[9;35H[?25h[?25l[49;80H9-36[9;36H[?25h[?25l[49;79H30-37[9;37H[?25h[?25l[49;80H1-38[9;38H[?25h[?25l[49;80H2-39[9;39H[?25h[?25l[49;80H3-40[9;40H[?25h[?25l[9;22H[46m([18C)[m[49;80H4-41[9;41H[?25h[?25l)[46m;[m[9;42H[K[9;40H[46m)[m;[49;80H3-40[9;40H[?25h[?25l)[46m;[m[9;41H[K[9;39H[46m)[m;[49;80H2-39[9;39H[?25h[?25l)[46m;[m[9;40H[K[9;38H[46m)[m;[49;80H1-38[9;38H[?25h[?25l)[46m;[m[9;39H[K[9;37H[46m)[m;[49;80H0-37[9;37H[?25h[?25l)[46m;[m[9;38H[K[9;36H[46m)[m;[49;79H29-36[9;36H[?25h[?25l)[46m;[m[9;37H[K[9;35H[46m)[m;[49;80H8-35[9;35H[?25h[?25l)[46m;[m[9;36H[K[9;34H[46m)[m;[49;80H7-34[9;34H[?25h[?25l)[46m;[m[9;35H[K[9;33H[46m)[m;[49;80H6-33[9;33H[?25h[?25l)[46m;[m[9;34H[K[9;32H[46m)[m;[49;80H5-32[9;32H[?25h[?25l)[46m;[m[9;33H[K[9;31H[46m)[m;[49;80H4-31[9;31H[?25h[?25l)[46m;[m[9;32H[K[9;30H[46m)[m;[49;80H3-30[9;30H[?25h[?25l)[46m;[m[9;31H[K[9;29H[46m)[m;[49;80H2-29[9;29H[?25h[?25l)[46m;[m[9;30H[K[9;28H[46m)[m;[49;80H1-28[9;28H[?25h[?25l)[46m;[m[9;29H[K[9;27H[46m)[m;[49;80H0-27[9;27H[?25h[?25l)[46m;[m[9;28H[K[9;26H[46m)[m;[49;79H19-26[9;26H[?25h[?25l)[46m;[m[9;27H[K[9;25H[46m)[m;[49;80H8-25[9;25H[?25h[?25l)[46m;[m[9;26H[K[9;24H[46m)[m;[49;80H7-24[9;24H[?25h[?25l)[46m;[m[9;25H[K[9;23H[46m)[m;[49;80H6-23[9;23H[?25h[?25l()[49;77H10,16-23[10;23H[?25h[?25l[49;78H1,3    [11;3H[?25h[?25l[49;78H2,1[12;1H[?25h[?25l[13;20H[46m()[m[49;78H3,22[13;22H[?25h[?25l()
[46m{

}[m[49;78H4,2 [14;2H[?25h[?25l{

}[49;78H5,16-23[15;23H[?25h[?25l[49;81H5-22[15;22H[?25h[?25l[49;81H4-21[15;21H[?25h[?25l[49;81H3-20[15;20H[?25h[?25l[49;81H2-19[15;19H[?25h[?25l[49;81H1-18[15;18H[?25h[?25l1.distance(pt2);[15;33H[K[49;81H0-17[15;17H[?25h[?25l[49;81H1-18[15;18H[?25h[?25l[49;81H2-19[15;19H[?25h[?25l[49;81H3-20[15;20H[?25h[?25l[49;81H4-21[15;21H[?25h[?25l[49;81H5-22[15;22H[?25h[?25l[49;81H6-23[15;23H[?25h[?25l[49;81H7-24[15;24H[?25h[?25l[49;81H8-25[15;25H[?25h[?25l[49;81H9-26[15;26H[?25h[?25le[46m([mpt2[46m)[m[49;80H20-27[15;27H[?25h[?25l[49;81H1-28[15;28H[?25h[?25l(pt2)[49;81H2-29[15;29H[?25h[?25l[49;81H3-30[15;30H[?25h[?25l2);[15;32H[K[49;81H2-29[15;29H[?25h[?25l\[95m2[m);[49;81H3-30[15;30H[?25h[?25l2);[15;32H[K[49;81H2-29[15;29H[?25h[?25l[14;1H[46m{

}[m[49;78H6,2    [16;2H[?25h[?25l[14;1H{

}[49;78H7,1[17;1H[?25h[?25l[49;78H8,29[18;29H[?25h[?25l
[46m{


}[m[49;78H9,2 [19;2H[?25h[?25l{


}[49;78H8,29[18;29H[?25h[?25l[49;80H30[18;30H[?25h[?25l[49;81H1[18;31H[?25h[?25l[49;81H2[18;32H[?25h[?25l[49;81H3[18;33H[?25h[?25l[49;81H4[18;34H[?25h[?25l[49;81H5[18;35H[?25h[?25l[49;81H6[18;36H[?25h[?25l[49;81H7[18;37H[?25h[?25l[49;81H8[18;38H[?25h[?25l[49;81H9[18;39H[?25h[?25l[49;80H40[18;40H[?25h[?25l[18;22H[46m([18C)[m[49;81H1[18;41H[?25h[?25l[49;81H2[18;42H[?25h[?25l[49;81H1[18;41H[?25h[?25l)[18;41H[K[18;40H[46m)[m[49;81H0[18;40H[?25h[?25l)[18;40H[K[18;39H[46m)[m[49;80H39[18;39H[?25h[?25l)[18;39H[K[18;38H[46m)[m[49;81H8[18;38H[?25h[?25l)[18;38H[K[18;37H[46m)[m[49;81H7[18;37H[?25h[?25l)[18;37H[K[18;36H[46m)[m[49;81H6[18;36H[?25h[?25l)[18;36H[K[18;35H[46m)[m[49;81H5[18;35H[?25h[?25l)[18;35H[K[18;34H[46m)[m[49;81H4[18;34H[?25h[?25l)[18;34H[K[18;33H[46m)[m[49;81H3[18;33H[?25h[?25l)[18;33H[K[18;32H[46m)[m[49;81H2[18;32H[?25h[?25l)[18;32H[K[18;31H[46m)[m[49;81H1[18;31H[?25h[?25l)[18;31H[K[18;30H[46m)[m[49;81H0[18;30H[?25h[?25l)[18;30H[K[18;29H[46m)[m[49;80H29[18;29H[?25h[?25l)[18;29H[K[18;28H[46m)[m[49;81H8[18;28H[?25h[?25l)[18;28H[K[18;27H[46m)[m[49;81H7[18;27H[?25h[?25l)[18;27H[K[18;26H[46m)[m[49;81H6[18;26H[?25h[?25l)[18;26H[K[18;25H[46m)[m[49;81H5[18;25H[?25h[?25l)[18;25H[K[18;24H[46m)[m[49;81H4[18;24H[?25h[?25l)[18;24H[K[18;23H[46m)[m[49;81H3[18;23H[?25h[?25l()
[46m{


}[m[49;78H9,2 [19;2H[?25h[?25l{


}[49;77H20,16-23[20;23H[?25h[?25l[49;78H1[21;23H[?25h[?25l[49;81H5-22[21;22H[?25h[?25l[49;81H4-21[21;21H[?25h[?25l[49;81H3-20[21;20H[?25h[?25l[49;81H2-19[21;19H[?25h[?25l[49;81H1-18[21;18H[?25h[?25l[49;81H0-17[21;17H[?25h[?25l[49;80H9-16 [21;16H[?25h[?25lptoString()[49;80H10-17[21;17H[?25h[?25l1toString()[49;81H1-18[21;18H[?25h[?25l.toString()[49;81H2-19[21;19H[?25h[?25l[49;81H3-20[21;20H[?25h[?25l[49;81H4-21[21;21H[?25h[?25l[49;81H5-22[21;22H[?25h[?25l[49;81H6-23[21;23H[?25h[?25l[49;81H7-24[21;24H[?25h[?25l[49;81H8-25[21;25H[?25h[?25l[49;81H9-26[21;26H[?25h[?25lg[46m()[m[49;80H20-27[21;27H[?25h[?25l[49;81H1-28[21;28H[?25h[?25l[49;81H2-29[21;29H[?25h[?25l()[49;81H3-30[21;30H[?25h[?25l<[49;81H4-31[21;31H[?25h[?25l<[49;81H5-32[21;32H[?25h[?25l[49;81H6-33[21;33H[?25h[?25l[95m"[m[49;81H7-34[21;34H[?25h[?25l[95m [m[49;81H8-35[21;35H[?25h[?25l[21;34H[K[49;81H7-34[21;34H[?25h[?25l[21;33H[K[49;81H6-33[21;33H[?25h[?25l[49;81H5-32[21;32H[?25h[?25l[21;31H[K[49;81H4-31[21;31H[?25h[?25l[21;30H[K[49;81H3-30[21;30H[?25h[?25l[46m()[m[49;81H2-29[21;29H[?25h[?25l[21;28H[K[21;27H([49;81H1-28[21;28H[?25h[?25l[21;27H[K[49;81H0-27[21;27H[?25h[?25l[21;26H[K[49;80H19-26[21;26H[?25h[?25l[21;25H[K[49;81H8-25[21;25H[?25h[?25l[21;24H[K[49;81H7-24[21;24H[?25h[?25l[21;23H[K[49;81H6-23[21;23H[?25h[?25l[21;22H[K[49;81H5-22[21;22H[?25h[?25l[21;21H[K[49;81H4-21[21;21H[?25h[?25l[21;20H[K[49;81H3-20[21;20H[?25h[?25l[21;19H[K[49;81H2-19[21;19H[?25h[?25l[21;18H[K[49;81H1-18[21;18H[?25h[?25l[21;17H[K[49;81H0-17[21;17H[?25h[?25l[21;16H[K[49;80H9-16 [21;16H[?25h[?25l[49;80H8-15[21;15H[?25h[?25l[21;14H[K[49;80H7-14[21;14H[?25h[?25l[21;13H[K[49;80H6-13[21;13H[?25h[?25l[49;80H5-12[21;12H[?25h[?25l[21;11H[K[49;80H4-11[21;11H[?25h[?25l[21;10H[K[49;80H3-10[21;10H[?25h[?25l[21;9H[K[49;80H2-9 [21;9H[?25h[?25l[49;80H1  [21;1H[?25h[?25l[20;48r[48;1H
[1;49r[20;9Hstringstream str;[48;5H}[49;77H[K[49;77H20,19-26      Top[20;26H[?25h[?25l[20;25H[K[49;81H8-25[20;25H[?25h[?25l[20;24H[K[49;81H7-24[20;24H[?25h[?25l[20;23H[K[49;81H6-23[20;23H[?25h[?25l[20;22H[K[49;81H5-22[20;22H[?25h[?25l[49;81H4-21[20;21H[?25h[?25l[20;20H[K[49;81H3-20[20;20H[?25h[?25l[20;19H[K[49;81H2-19[20;19H[?25h[?25l[20;18H[K[49;81H1-18[20;18H[?25h[?25l[20;17H[K[49;81H0-17[20;17H[?25h[?25l[20;16H[K[49;80H9-16 [20;16H[?25h[?25l[20;15H[K[49;80H8-15[20;15H[?25h[?25l[20;14H[K[49;80H7-14[20;14H[?25h[?25l[20;13H[K[49;80H6-13[20;13H[?25h[?25l[20;12H[K[49;80H5-12[20;12H[?25h[?25l[20;11H[K[49;80H4-11[20;11H[?25h[?25l[20;10H[K[49;80H3-10[20;10H[?25h[?25l[20;9H[K[49;80H2-9 [20;9H[?25h[?25ls[49;80H3-10[20;10H[?25h[?25lt[49;80H4-11[20;11H[?25h[?25lr[49;80H5-12[20;12H[?25h[?25li[49;80H6-13[20;13H[?25h[?25ln[49;80H7-14[20;14H[?25h[?25lg[49;80H8-15[20;15H[?25h[?25l[49;80H9-16[20;16H[?25h[?25ls[49;80H10-17[20;17H[?25h[?25l;[49;81H1-18[20;18H[?25h[?25l[20;17H[K[49;81H0-17[20;17H[?25h[?25l[20;16H[K[49;80H9-16 [20;16H[?25h[?25ls[49;80H10-17[20;17H[?25h[?25lt[49;81H1-18[20;18H[?25h[?25lr[49;81H2-19[20;19H[?25h[?25l;[49;81H3-20[20;20H[?25h[?25l[21;48r[21;1H[L[1;49r[49;77H[K[49;77H21,2-9[8CTop[21;9H[?25h[?25l[49;80H1  [21;1H[?25h[?25l[20;48r[48;1H
[1;49r[20;9Hstring str;[48;5H}[49;77H[K[49;77H20,13-20      Top[20;20H[?25h[?25l[20;19H[K[49;81H2-19[20;19H[?25h[?25l[49;81H3-20[20;20H[?25h[?25l=[49;81H4-21[20;21H[?25h[?25l[49;81H5-22[20;22H[?25h[?25l[95m"[m[49;81H6-23[20;23H[?25h[?25l[95m"[m[49;81H7-24[20;24H[?25h[?25l;[49;81H8-25[20;25H[?25h[?25l[21;48r[21;1H[L[1;49r[49;77H[K[49;77H21,2-9[8CTop[21;9H[?25h[?25ls[49;80H3-10[21;10H[?25h[?25lt[49;80H4-11[21;11H[?25h[?25lr[49;80H5-12[21;12H[?25h[?25l[49;80H6-13[21;13H[?25h[?25l+[49;80H7-14[21;14H[?25h[?25l[49;80H8-15[21;15H[?25h[?25lp[49;80H9-16[21;16H[?25h[?25l1[49;80H10-17[21;17H[?25h[?25l.[49;81H1-18[21;18H[?25h[?25lt[49;81H2-19[21;19H[?25h[?25lo[49;81H3-20[21;20H[?25h[?25lS[49;81H4-21[21;21H[?25h[?25lt[49;81H5-22[21;22H[?25h[?25lr[49;81H6-23[21;23H[?25h[?25li[49;81H7-24[21;24H[?25h[?25ln[49;81H8-25[21;25H[?25h[?25lg[49;81H9-26[21;26H[?25h[?25l([49;80H20-27[21;27H[?25h[?25l)[46m()[m[49;81H1-28[21;28H[?25h[?25l()[49;81H2-29[21;29H[?25h[?25l+[49;81H3-30[21;30H[?25h[?25l[49;81H4-31[21;31H[?25h[?25l[95m"[m[49;81H5-32[21;32H[?25h[?25l[95m [m[49;81H6-33[21;33H[?25h[?25l[95m-[m[49;81H7-34[21;34H[?25h[?25l[95m-[m[49;81H8-35[21;35H[?25h[?25l[95m [m[49;81H9-36[21;36H[?25h[?25l[95m"[m[49;80H30-37[21;37H[?25h[?25l[49;81H1-38[21;38H[?25h[?25l+[49;81H2-39[21;39H[?25h[?25l[18;22H[46m()[m[49;77H18,24   [18;24H[?25h[?25l()[49;77H21,32-39[21;39H[?25h[?25ls[49;81H3-40[21;40H[?25h[?25l[21;39H[K[49;81H2-39[21;39H[?25h[?25l[19;1H[46m{


}[m[49;77H19,2    [19;2H[?25h[?25ls{


}[49;80H3[19;3H[?25h[?25l[19;2H[K[19;1H[46m{


}[m[49;80H2[19;2H[?25h[?25l[49;77H22[22;2H[?25h[?25l[49;4H[1m(insert)- VISUAL --[m[49;77H[K[49;67H2[21;39H[49;77H21,32-39      Top[21;39H[19;1H{


[48;5;242m} [21;39H[?25h[?25l[?25h[?25l[m[49;67H [20;25H[49;4H[1mINSERTt --[m[49;13H[K[49;77H20,18-25      Top[22;1H}[22;2H[K[20;25H[?25h[?25l[49;78H1,32-39[21;39H[?25h[?25l[49;81H3-40[21;40H[?25h[?25lp[49;81H4-41[21;41H[?25h[?25l2[49;81H5-42[21;42H[?25h[?25l.[49;81H6-43[21;43H[?25h[?25ls[49;81H7-44[21;44H[?25h[?25l[21;43H[K[49;81H6-43[21;43H[?25h[?25lt[49;81H7-44[21;44H[?25h[?25lo[49;81H8-45[21;45H[?25h[?25lS[49;81H9-46[21;46H[?25h[?25lt[49;80H40-47[21;47H[?25h[?25lr[49;81H1-48[21;48H[?25h[?25li[49;81H2-49[21;49H[?25h[?25ln[49;81H3-50[21;50H[?25h[?25lg[49;81H4-51[21;51H[?25h[?25l([49;81H5-52[21;52H[?25h[?25l)[46m()[m[49;81H6-53[21;53H[?25h[?25l;()[49;81H7-54[21;54H[?25h[?25l[22;48r[22;1H[L[1;49r[49;77H[K[49;77H22,2-9[8CTop[22;9H[?25h[?25lr[49;80H3-10[22;10H[?25h[?25le[49;80H4-11[22;11H[?25h[?25lt[49;80H5-12[22;12H[?25h[?25lu[49;80H6-13[22;13H[?25h[?25lr[49;80H7-14[22;14H[?25h[?25l[93mreturn[m[49;80H8-15[22;15H[?25h[?25l[49;80H9-16[22;16H[?25h[?25lt[49;80H10-17[22;17H[?25h[?25l[22;16H[K[49;80H9-16 [22;16H[?25h[?25ls[49;80H10-17[22;17H[?25h[?25lt[49;81H1-18[22;18H[?25h[?25lr[49;81H2-19[22;19H[?25h[?25l;[49;81H3-20[22;20H[?25h[?25l[49;78H1[21;20H[?25h[?25l[49;81H2-19[21;19H[?25h[?25l[49;81H1-18[21;18H[?25h[?25l[49;81H0-17[21;17H[?25h[?25l[49;80H9-16 [21;16H[?25h[?25l[49;80H8-15[21;15H[?25h[?25l[49;80H7-14[21;14H[?25h[?25l[49;80H6-13[21;13H[?25h[?25l[49;80H5-12[21;12H[?25h[?25l[49;80H4-11[21;11H[?25h[?25l[49;80H3-10[21;10H[?25h[?25l[49;80H2-9 [21;9H[?25h[?25l[49;80H1  [21;1H[?25h[?25l[49;80H2-9[21;9H[?25h[?25lsstr + p1.toString() + [95m" -- "[m + p2.toString();[49;80H3-10[21;10H[?25h[?25ltstr + p1.toString() + [95m" -- "[m + p2.toString();[49;80H4-11[21;11H[?25h[?25lrstr + p1.toString() + [95m" -- "[m + p2.toString();[49;80H5-12[21;12H[?25h[?25l str + p1.toString() + [95m" -- "[m + p2.toString();[49;80H6-13[21;13H[?25h[?25l=str + p1.toString() + [95m" -- "[m + p2.toString();[49;80H7-14[21;14H[?25h[?25l str + p1.toString() + [95m" -- "[m + p2.toString();[49;80H8-15[21;15H[?25h[?25l[49;78H2[22;15H[?25h[?25l[49;80H9-16[22;16H[?25h[?25l[49;80H10-17[22;17H[?25h[?25l[49;81H1-18[22;18H[?25h[?25l[49;81H2-19[22;19H[?25h[?25l[49;81H3-20[22;20H[?25h[?25l[49;78H1[21;20H[?25h[?25l[49;78H0[20;20H[?25h[?25l[49;78H1[21;20H[?25h[?25l[49;78H2[22;20H[?25h[?25l[19;1H[46m{[23;1H}[m[49;78H3,2    [23;2H[?25h[?25l[19;1H{[23;1H}[49;78H2,13-20[22;20H[?25h[?25l[49;78H1[21;20H[?25h[?25l[49;81H2-19[21;19H[?25h[?25l[49;81H3-20[21;20H[?25h[?25l p1.toString() + [95m" -- "[m + p2.toString();[21;59H[K[49;81H2-19[21;19H[?25h[?25lp1.toString() + [95m" -- "[m + p2.toString();[21;58H[K[49;81H1-18[21;18H[?25h[?25l p1.toString() + [95m" -- "[m + p2.toString();[21;57H[K[49;81H0-17[21;17H[?25h[?25l[49;81H1-18[21;18H[?25h[?25lp1.toString() + [95m" -- "[m + p2.toString();[21;56H[K[49;81H0-17[21;17H[?25h[?25lp1.toString() + [95m" -- "[m + p2.toString();[21;55H[K[49;80H9-16 [21;16H[?25h[?25lp1.toString() + [95m" -- "[m + p2.toString();[21;54H[K[49;80H8-15[21;15H[?25h[?25l[49;78H2[22;15H[?25h[?25l[19;1H[46m{[23;1H}[m[49;78H3,2   [23;2H[?25h[?25l[19;1H{[23;1H}[49;78H2,8-15[22;15H[?25h[49;1H[K[22;14H[?25l[49;67H^[[22;14H[49;67H  [22;15H[49;77H22,7-14[7CTop[22;14H[?25h[?25l[49;67H~@k[22;14H[49;67H   [21;14H[49;78H1[21;14H[?25h[?25l[49;67H~@k[21;14H[49;67H   [20;14H[49;78H0[20;14H[?25h[?25l[49;67H~@k[20;14H[49;67H   [19;1H[46m{[23;1H}[m[49;77H19,1   [19;1H[?25h[?25l[49;67H~@k[19;1H[49;67H   [18;14H
{[23;1H}[49;78H8,14[18;14H[?25h[?25l[49;67H~@k[18;14H[49;67H   [17;1H[49;78H7,0-1[17;1H[?25h[?25l[49;67HZ[17;1H[?25h[?25l[49;68HZ[17;1H[?1006l[?1002l[?2004l[49;1H"main.cc"[49;67H[K[49;11H64L, 1443C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ vim main.cc ls[Kmake clean[1Pvim main.make clean[1Pvim main.ls[Kcat point.hh cc[Cls[K./main ls[Kcat ./.deps/point.d [1Pmain[C[C[C[11P./.deps/ls[Kmake -f ../Makefile am[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kamke -f ../Makefile ma[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ point.o main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main point.o main.o; do echo $t >>.gitignore; done
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ls
main  main.cc  main.o  point.cc  point.hh  point.o
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ vim ../Makefile 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"../Makefile" 56L, 1388C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[36mCXX [m= g++
[36mCXXFLAGS [m= -g -Wall -std=c++17

[34m#produce a list of all cc files[m
[36mCXX_FILES [m= [36m$([m[38;5;130mwildcard[m[36m *.cc)[m

[34m#produce a list of all *.o files by substituting cc in CXX_FILES with o.[m
[36mOFILES [m= [36m$(CXX_FILES:cc=o)[m

[34m#dir in which to generate dependences[m
[36mDEPDIR [m= .deps

[36mTARGETS [m= main

[36mall:[12C$(TARGETS)[m .gitignore

[36mmain:[11C$(OFILES)[m
[31m                [m[36m$(CXX)[m[31m [m[36m$(OFILES)[m[31m -o [m[36m$@

.phony:[m[9Cclean
[36mclean:[m
[31m                rm -rf *.o *~ [m[36m$(TARGETS)[m[31m [m[36m$(DEPDIR)[m[31m .gitignore[m

[36m.gitignore:[m     [36m$(CXX_FILES)[m
[31m                cat </dev/null >[m[36m$@[m
[31m                echo [m[36m$(DEPDIR)[m[31m >[m[36m$@[m
[31m                for t in [m[36m$(TARGETS)[m[31m [m[36m$(OFILES)[m[31m; do echo [m[36m$$[m[31mt >>[m[36m$@[m[31m; done[m


[34m#auto-dependences
#<http://make.mad-scientist.net/papers/advanced-auto-dependency-generation/>

#have DEPDIR/*.d file for each *.cc file[m
[36mDEPFILES [m= [36m$(CXX_FILES:%.cc=$(DEPDIR)/%.d)[m

[34m#-MT $@ sets target name in dependency file
#-MMD tells compiler to generate prereqs without including system headers
#-MP adds target for each prereq
#-MF $(DEPDIR)/$*.d sets name of output dependency file[m
[36mDEPFLAGS [m= -MT [36m$@[m -MMD -MP -MF [36m$(DEPDIR)[m/[36m$*[m.d

[34m#delete built-in implicit rule for building .o from .cc[m
[36m%.o:[m [36m%[m.cc

[34m#create our own implicit rule for building %.o from %.cc
#| $(DEPDIR) makes DEPDIR an order only prereq[m
[36m%.o:[12C%[m.cc [36m$(DEPDIR)[m/[36m%[m.d | [36m$(DEPDIR)[m
[31m                [m[36m$(CXX)[m[31m [m[36m$(DEPFLAGS)[m[31m [m[36m$(CXXFLAGS)[m[31m -c [m[36m$<[m[49;77H1,1[11CTop]2;Makefile (~/projects/i240b/submit/lab4/exercises) - VIM]1;Makefile[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[1m[96mCXX [m= g++
[1m[96mCXXFLAGS [m= -g -Wall -std=c++17

[96m#produce a list of all cc files[m
[1m[96mCXX_FILES [m= [1m[96m$([m[93mwildcard[m[1m[96m *.cc)[m

[96m#produce a list of all *.o files by substituting cc in CXX_FILES with o.[m
[1m[96mOFILES [m= [1m[96m$(CXX_FILES:cc=o)[m

[96m#dir in which to generate dependences[m
[1m[96mDEPDIR [m= .deps

[1m[96mTARGETS [m= main

[1m[96mall:[12C$(TARGETS)[m .gitignore

[1m[96mmain:[11C$(OFILES)[m
[95m                [m[1m[96m$(CXX)[m[95m [m[1m[96m$(OFILES)[m[95m -o [m[1m[96m$@

.phony:[m[9Cclean
[1m[96mclean:[m
[95m                rm -rf *.o *~ [m[1m[96m$(TARGETS)[m[95m [m[1m[96m$(DEPDIR)[m[95m .gitignore[m

[1m[96m.gitignore:[m     [1m[96m$(CXX_FILES)[m
[95m                cat </dev/null >[m[1m[96m$@[m
[95m                echo [m[1m[96m$(DEPDIR)[m[95m >[m[1m[96m$@[m
[95m                for t in [m[1m[96m$(TARGETS)[m[95m [m[1m[96m$(OFILES)[m[95m; do echo [m[1m[96m$$[m[95mt >>[m[1m[96m$@[m[95m; done[m


[96m#auto-dependences
#<http://make.mad-scientist.net/papers/advanced-auto-dependency-generation/>

#have DEPDIR/*.d file for each *.cc file[m
[1m[96mDEPFILES [m= [1m[96m$(CXX_FILES:%.cc=$(DEPDIR)/%.d)[m

[96m#-MT $@ sets target name in dependency file
#-MMD tells compiler to generate prereqs without including system headers
#-MP adds target for each prereq
#-MF $(DEPDIR)/$*.d sets name of output dependency file[m
[1m[96mDEPFLAGS [m= -MT [1m[96m$@[m -MMD -MP -MF [1m[96m$(DEPDIR)[m/[1m[96m$*[m.d

[96m#delete built-in implicit rule for building .o from .cc[m
[1m[96m%.o:[m [1m[96m%[m.cc

[96m#create our own implicit rule for building %.o from %.cc
#| $(DEPDIR) makes DEPDIR an order only prereq[m
[1m[96m%.o:[12C%[m.cc [1m[96m$(DEPDIR)[m/[1m[96m%[m.d | [1m[96m$(DEPDIR)[m
[95m                [m[1m[96m$(CXX)[m[95m [m[1m[96m$(DEPFLAGS)[m[95m [m[1m[96m$(CXXFLAGS)[m[95m -c [m[1m[96m$<[m[49;77H1,1[11CTop"../Makefile" 56L, 1388C[1;1H[?25h[?25l[49;67HZ[1;1H[?25h[?25l[49;68HZ[1;1H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ make clean -f ../Makefile 
rm -rf *.o *~ main .deps .gitignore
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ make clean -f ../Makefile [10Pvim[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kmake -f ../Makefile 
g++ -MT point.o -MMD -MP -MF .deps/point.d -g -Wall -std=c++17 -c point.cc
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ point.o main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main point.o main.o; do echo $t >>.gitignore; done
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ make -f ../Makefile [6@clean [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[10Pvim[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kmake -f ../Makefile [8Pvim main.cc[Cls[Kmake clean[1Pvim main.make clean[1Pvim main.ls[Kcat point.hh ls[Kvim main.make cleanls[Kvim main.cc [8@make -f ../Makefile[Cls[Kvim ../Makefile [10@make clean -f[C[C[C[C[C[C[C[C[C[C[C[C[C[6P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kmake -f ../Makefile [Kmake -f ../Makefile [6@clean [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[10Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"../Makefile" 56L, 1388C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[36mCXX [m= g++
[36mCXXFLAGS [m= -g -Wall -std=c++17

[34m#produce a list of all cc files[m
[36mCXX_FILES [m= [36m$([m[38;5;130mwildcard[m[36m *.cc)[m

[34m#produce a list of all *.o files by substituting cc in CXX_FILES with o.[m
[36mOFILES [m= [36m$(CXX_FILES:cc=o)[m

[34m#dir in which to generate dependences[m
[36mDEPDIR [m= .deps

[36mTARGETS [m= main

[36mall:[12C$(TARGETS)[m .gitignore

[36mmain:[11C$(OFILES)[m
[31m                [m[36m$(CXX)[m[31m [m[36m$(OFILES)[m[31m -o [m[36m$@

.phony:[m[9Cclean
[36mclean:[m
[31m                rm -rf *.o *~ [m[36m$(TARGETS)[m[31m [m[36m$(DEPDIR)[m[31m .gitignore[m

[36m.gitignore:[m     [36m$(CXX_FILES)[m
[31m                cat </dev/null >[m[36m$@[m
[31m                echo [m[36m$(DEPDIR)[m[31m >[m[36m$@[m
[31m                for t in [m[36m$(TARGETS)[m[31m [m[36m$(OFILES)[m[31m; do echo [m[36m$$[m[31mt >>[m[36m$@[m[31m; done[m


[34m#auto-dependences
#<http://make.mad-scientist.net/papers/advanced-auto-dependency-generation/>

#have DEPDIR/*.d file for each *.cc file[m
[36mDEPFILES [m= [36m$(CXX_FILES:%.cc=$(DEPDIR)/%.d)[m

[34m#-MT $@ sets target name in dependency file
#-MMD tells compiler to generate prereqs without including system headers
#-MP adds target for each prereq
#-MF $(DEPDIR)/$*.d sets name of output dependency file[m
[36mDEPFLAGS [m= -MT [36m$@[m -MMD -MP -MF [36m$(DEPDIR)[m/[36m$*[m.d

[34m#delete built-in implicit rule for building .o from .cc[m
[36m%.o:[m [36m%[m.cc

[34m#create our own implicit rule for building %.o from %.cc
#| $(DEPDIR) makes DEPDIR an order only prereq[m
[36m%.o:[12C%[m.cc [36m$(DEPDIR)[m/[36m%[m.d | [36m$(DEPDIR)[m
[31m                [m[36m$(CXX)[m[31m [m[36m$(DEPFLAGS)[m[31m [m[36m$(CXXFLAGS)[m[31m -c [m[36m$<[m[49;77H1,1[11CTop]2;Makefile (~/projects/i240b/submit/lab4/exercises) - VIM]1;Makefile[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[1m[96mCXX [m= g++
[1m[96mCXXFLAGS [m= -g -Wall -std=c++17

[96m#produce a list of all cc files[m
[1m[96mCXX_FILES [m= [1m[96m$([m[93mwildcard[m[1m[96m *.cc)[m

[96m#produce a list of all *.o files by substituting cc in CXX_FILES with o.[m
[1m[96mOFILES [m= [1m[96m$(CXX_FILES:cc=o)[m

[96m#dir in which to generate dependences[m
[1m[96mDEPDIR [m= .deps

[1m[96mTARGETS [m= main

[1m[96mall:[12C$(TARGETS)[m .gitignore

[1m[96mmain:[11C$(OFILES)[m
[95m                [m[1m[96m$(CXX)[m[95m [m[1m[96m$(OFILES)[m[95m -o [m[1m[96m$@

.phony:[m[9Cclean
[1m[96mclean:[m
[95m                rm -rf *.o *~ [m[1m[96m$(TARGETS)[m[95m [m[1m[96m$(DEPDIR)[m[95m .gitignore[m

[1m[96m.gitignore:[m     [1m[96m$(CXX_FILES)[m
[95m                cat </dev/null >[m[1m[96m$@[m
[95m                echo [m[1m[96m$(DEPDIR)[m[95m >[m[1m[96m$@[m
[95m                for t in [m[1m[96m$(TARGETS)[m[95m [m[1m[96m$(OFILES)[m[95m; do echo [m[1m[96m$$[m[95mt >>[m[1m[96m$@[m[95m; done[m


[96m#auto-dependences
#<http://make.mad-scientist.net/papers/advanced-auto-dependency-generation/>

#have DEPDIR/*.d file for each *.cc file[m
[1m[96mDEPFILES [m= [1m[96m$(CXX_FILES:%.cc=$(DEPDIR)/%.d)[m

[96m#-MT $@ sets target name in dependency file
#-MMD tells compiler to generate prereqs without including system headers
#-MP adds target for each prereq
#-MF $(DEPDIR)/$*.d sets name of output dependency file[m
[1m[96mDEPFLAGS [m= -MT [1m[96m$@[m -MMD -MP -MF [1m[96m$(DEPDIR)[m/[1m[96m$*[m.d

[96m#delete built-in implicit rule for building .o from .cc[m
[1m[96m%.o:[m [1m[96m%[m.cc

[96m#create our own implicit rule for building %.o from %.cc
#| $(DEPDIR) makes DEPDIR an order only prereq[m
[1m[96m%.o:[12C%[m.cc [1m[96m$(DEPDIR)[m/[1m[96m%[m.d | [1m[96m$(DEPDIR)[m
[95m                [m[1m[96m$(CXX)[m[95m [m[1m[96m$(DEPFLAGS)[m[95m [m[1m[96m$(CXXFLAGS)[m[95m -c [m[1m[96m$<[m[49;77H1,1[11CTop"../Makefile" 56L, 1388C[1;1H[?25h[?25l[49;67H~@k[1;1H[49;67H   [2;1H[49;77H2[2;1H[?25h[?25l[49;67H~@k[2;1H[49;67H   [3;1H[49;77H3,0-1[3;1H[?25h[?25l[49;67H~@k[3;1H[49;67H   [4;1H[49;77H4,1  [4;1H[?25h[?25l[49;67H~@k[4;1H[49;67H   [5;1H[49;77H5[5;1H[?25h[?25l[49;67H~@k[5;1H[49;67H   [6;1H[49;77H6,0-1[6;1H[?25h[?25l[49;67H~@k[6;1H[49;67H   [7;1H[49;77H7,1  [7;1H[?25h[?25l[49;67H~@k[7;1H[49;67H   [8;1H[49;77H8[8;1H[?25h[?25l[49;67H~@k[8;1H[49;67H   [9;1H[49;77H9,0-1[9;1H[?25h[?25l[49;67H~@k[9;1H[49;67H   [10;1H[49;77H10,1 [10;1H[?25h[?25l[49;67H~@k[10;1H[49;67H   [11;1H[49;78H1[11;1H[?25h[?25l[49;67H~@k[11;1H[49;67H   [12;1H[49;78H2,0-1[12;1H[?25h[?25l[49;67H~@k[12;1H[49;67H   [13;1H[49;78H3,1  [13;1H[?25h[?25l[49;67H~@k[13;1H[49;67H   [14;1H[49;78H4,0-1[14;1H[?25h[?25l[49;67H~@k[14;1H[49;67H   [15;1H[49;78H5,1  [15;1H[?25h[?25l[49;67H~@k[15;1H[49;67H   [16;1H[49;78H6,0-1[16;1H[?25h[?25l[49;67H~@k[16;1H[49;67H   [17;1H[49;78H7,1  [17;1H[?25h[?25l[49;67H~@k[17;1H[49;67H   [18;8H[49;78H8,1-8[18;8H[?25h[?25l[49;67H~@k[18;8H[49;67H   [19;1H[49;78H9,0-1[19;1H[?25h[?25l[49;67H~@k[19;1H[49;67H   [20;1H[49;77H20,1  [20;1H[?25h[?25l[49;67H~@k[20;1H[49;67H   [21;1H[49;78H1[21;1H[?25h[?25l[49;67H~@k[21;1H[49;67H   [22;8H[49;78H2,1-8[22;8H[?25h[?25l[49;67H~@k[22;8H[49;67H   [23;1H[49;78H3,0-1[23;1H[?25h[?25l[49;67H~@k[23;1H[49;67H   [24;1H[49;78H4,1  [24;1H[?25h[?25l[49;67H~@k[24;1H[49;67H   [25;8H[49;78H5,1-8[25;8H[?25h[?25l[49;67H~@k[25;8H[49;67H   [26;8H[49;78H6[26;8H[?25h[?25l[49;67H~@k[26;8H[49;67H   [27;8H[49;78H7[27;8H[?25h[?25l[49;67H~@k[27;8H[49;67H   [28;1H[49;78H8,0-1[28;1H[?25h[?25l[49;67H~@k[28;1H[49;67H   [29;1H[49;78H9[29;1H[?25h[?25l[49;67H~@k[29;1H[49;67H   [30;1H[49;77H30,1  [30;1H[?25h[?25l[49;67H~@k[30;1H[49;67H   [31;1H[49;78H1[31;1H[?25h[?25l[49;67H~@k[31;1H[49;67H   [32;1H[49;78H2,0-1[32;1H[?25h[?25l[49;67H~@k[32;1H[49;67H   [33;1H[49;78H3,1  [33;1H[?25h[?25l[49;67H~@k[33;1H[49;67H   [34;1H[49;78H4[34;1H[?25h[?25l[49;67H~@k[34;1H[49;67H   [35;1H[49;78H5,0-1[35;1H[?25h[?25l[49;67H~@k[35;1H[49;67H   [36;1H[49;78H6,1  [36;1H[?25h[?25l[49;67H~@k[36;1H[49;67H   [37;1H[49;78H7[37;1H[?25h[?25l[49;67H~@k[37;1H[49;67H   [38;1H[49;78H8[38;1H[?25h[?25l[49;67H~@k[38;1H[49;67H   [39;1H[49;78H9[39;1H[?25h[?25l[49;67H~@k[39;1H[49;67H   [40;1H[49;77H40[40;1H[?25h[?25l[49;67H~@k[40;1H[49;67H   [41;1H[49;78H1,0-1[41;1H[?25h[?25l[49;67H~@k[41;1H[49;67H   [42;1H[49;78H2,1  [42;1H[?25h[?25l[49;67H~@k[42;1H[49;67H   [43;1H[49;78H3[43;1H[?25h[?25l[49;67HZ[43;1H[?25h[?25l[49;68HZ[43;1H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ i[Kvim main.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main.cc" 64L, 1443C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"point.hh"[m
[35m#include [m[31m<sstream>[m
[35m#include [m[31m<iostream>[m
[38;5;130musing[m [32mnamespace[m std;

[32mclass[m Line
{[8;9HPoint p1, p2;[9;9H[32mdouble[m length();[10;9Hstring toString();
};

[32mdouble[m Line::length()
{[15;9H[38;5;130mreturn[m p1.distance(p2);
}

string Line::toString()
{[20;9Hstring str = [31m""[m;[21;9Hstr = p1.toString() + [31m" -- "[m + p2.toString();[22;9H[38;5;130mreturn[m str;
}

[34m//declare an array of points[m
[32mstatic[m [32mconst[m Point points[] = {
  Point([31m0[m, [31m0[m), Point([31m3[m, [31m4[m), Point([31m1[m, [31m1[m), Point([31m4[m, [31m5[m),
};
[34m//use standard idiom to figure out number of elements in array[m
[32mstatic[m [32mconstexpr[m [32mauto[m nPoints = [38;5;130msizeof[m(points)/[38;5;130msizeof[m(points[[31m0[m]);

[32mstatic[m [32mvoid[m
outSizes(std::ostream& out) {
  out << [31m"sizeof(double) = "[m << [38;5;130msizeof[m([32mdouble[m) << std::endl;
  out << [31m"sizeof(Point) = "[m << [38;5;130msizeof[m(Point) << std::endl;
}

[34m/** output pair-wise distance between all points in points[] to out. */[m
[32mstatic[m [32mvoid[m
outDistances(std::ostream& out)
{
  [38;5;130mfor[m ([32mauto[m i = [31m0u[m; i < nPoints - [31m1[m; i++) {
    Point pi = points[i];
    [38;5;130mfor[m ([32mauto[m j = i + [31m1[m; j < nPoints; j++) {[45;7HPoint pj = points[j];[46;7Hout << [31m"distance from "[m << pi.toString()[47;11H<< [31m" to "[m << pj.toString()[48;11H<< [31m" is "[m << pi.distance(pj)[49;77H17,0-1[8CTop]2;main.cc (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.cc[17;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"point.hh"[m
[38;5;81m#include [m[95m<sstream>[m
[38;5;81m#include [m[95m<iostream>[m
[93musing[m [38;5;121mnamespace[m std;

[38;5;121mclass[m Line
{[8;9HPoint p1, p2;[9;9H[38;5;121mdouble[m length();[10;9Hstring toString();
};

[38;5;121mdouble[m Line::length()
{[15;9H[93mreturn[m p1.distance(p2);
}

string Line::toString()
{[20;9Hstring str = [95m""[m;[21;9Hstr = p1.toString() + [95m" -- "[m + p2.toString();[22;9H[93mreturn[m str;
}

[96m//declare an array of points[m
[38;5;121mstatic[m [38;5;121mconst[m Point points[] = {
  Point([95m0[m, [95m0[m), Point([95m3[m, [95m4[m), Point([95m1[m, [95m1[m), Point([95m4[m, [95m5[m),
};
[96m//use standard idiom to figure out number of elements in array[m
[38;5;121mstatic[m [38;5;121mconstexpr[m [38;5;121mauto[m nPoints = [93msizeof[m(points)/[93msizeof[m(points[[95m0[m]);

[38;5;121mstatic[m [38;5;121mvoid[m
outSizes(std::ostream& out) {
  out << [95m"sizeof(double) = "[m << [93msizeof[m([38;5;121mdouble[m) << std::endl;
  out << [95m"sizeof(Point) = "[m << [93msizeof[m(Point) << std::endl;
}

[96m/** output pair-wise distance between all points in points[] to out. */[m
[38;5;121mstatic[m [38;5;121mvoid[m
outDistances(std::ostream& out)
{
  [93mfor[m ([38;5;121mauto[m i = [95m0u[m; i < nPoints - [95m1[m; i++) {
    Point pi = points[i];
    [93mfor[m ([38;5;121mauto[m j = i + [95m1[m; j < nPoints; j++) {[45;7HPoint pj = points[j];[46;7Hout << [95m"distance from "[m << pi.toString()[47;11H<< [95m" to "[m << pj.toString()[48;11H<< [95m" is "[m << pi.distance(pj)[49;77H17,0-1[8CTop"main.cc" 64L, 1443C[17;1H[?25h[?25l[49;67Hl[17;1H[49;67H [17;1H[?25h[?25l[49;67Hs[17;1H[49;67H [17;1H[49;67Hcl[17;1H[49;67H  [17;1H[49;1H[1m-- INSERT --[m[49;13H[K[49;77H17,1[10CTop[17;1H[?25h[?25l[18;48r[18;1H[L[1;49r[49;77H[K[49;77H18,1[10CTop]2;main.cc + (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.cc[18;1H[?25h[?25lu[49;80H2[18;2H[?25h[?25lu[49;80H3[18;3H[?25h[49;1H[K[18;2H[?25l[49;67H^[[18;2H[49;67H  [18;3H[49;77H18,2[10CTop[18;2H[?25h[?25l[49;67Hu[18;2H[49;1H1 line less; before #1  2 seconds ago[49;67H[K[17;1H[17;48r[48;1H
[1;49r[17;1H[K[48;11H<< [95m" is "[m << pi.distance(pj)[49;1H[K[49;77H17,0-1[8CTop]2;main.cc (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.cc1 line less; before #1  2 seconds ago[49;77H[K[49;77H17,0-1[8CTop[17;1H[?25h[?25l[49;67Hu[17;1H[49;1HAlready at oldest change[49;25H[K[17;1H[49;77H17,0-1[8CTop[17;1H[?25h[?25l[49;67Hu[17;1H[49;67H[K[17;1H[49;77H17,0-1[8CTop[17;1H[?25h[?25l[49;67Hu[17;1H[49;67H[K[17;1H[49;77H17,0-1[8CTop[17;1H[?25h[?25l[49;67Hu[17;1H[49;67H[K[17;1H[49;77H17,0-1[8CTop[17;1H[?25h[?25l[49;67Hu[17;1H[49;67H[K[17;1H[49;77H17,0-1[8CTop[17;1H[?25h[?25l[49;67Hu[17;1H[49;67H[K[17;1H[49;77H17,0-1[8CTop[17;1H[?25h[?25l[49;67H~@k[17;1H[49;67H   [18;1H[49;78H8,1  [18;1H[?25h[?25l[49;67H~@k[18;1H[49;67H   [19;1H[46m{[23;1H}[m[49;78H9[19;1H[?25h[?25l[49;67H:[19;1H[49;1H[K[49;1H:[?2004h[?25hw[?25l[?25h[?25l"main.cc" 64L, 1443C written[19;1H[49;77H19,1[10CTop[49;77H[K[49;77H19,1[10CTop[19;1H[?25h[?25l{[23;1H}[49;77H27,41[27;41H[?25h[?25l[49;67H~@k[27;41H[49;67H   [28;2H[49;78H8,2 [28;2H[?25h[?25l[49;67H~@k[28;2H[49;67H   [29;41H[49;78H9,41[29;41H[?25h[?25l[49;67H~@k[29;41H[49;67H   [30;41H[49;77H30[30;41H[?25h[?25l[49;67H~@k[30;41H[49;67H   [31;1H[49;78H1,0-1[31;1H[?25h[?25l[49;67H~@k[31;1H[49;67H   [32;11H[49;78H2,11 [32;11H[?25h[?25l[49;67H~@k[32;11H[49;67H   [33;29H[46m{


}[m[49;78H3,29[33;29H[?25h[?25l[49;67H~@k[33;29H[49;67H   [34;41H[33;29H{


}[49;78H4,41[34;41H[?25h[?25l[49;67H~@k[34;41H[49;67H   [35;41H[49;78H5[35;41H[?25h[?25l[49;67H~@k[35;41H[49;67H   [36;1H[33;29H[46m{


}[m[49;78H6,1 [36;1H[?25h[?25l[49;67H~@k[36;1H[49;67H   [37;1H[33;29H{


}[49;78H7,0-1[37;1H[?25h[?25l[49;67H~@k[37;1H[49;67H   [38;41H[49;78H8,41 [38;41H[?25h[?25l[49;67H~@k[38;41H[49;67H   [39;11H[49;78H9,1[39;11H[?25h[?25l[49;67H~@k[39;11H[49;67H   [40;31H[40;13H[46m([17C)[m[49;77H40,3[40;31H[?25h[?25l[49;67H~@k[40;31H[49;67H   [41;1H[40;13H([17C)[49;78H1,1 [41;1H[?25h[?25l[49;67H~@k[41;1H[49;67H   [42;41H[42;7H[46m([33C)[m[49;78H2,41[42;41H[?25h[?25l[49;67H~@k[42;41H[49;67H   [43;25H[42;7H([33C)[49;78H3,25[43;25H[?25h[?25l[49;67H~@k[43;25H[49;67H   [43;41H[1;48r[48;1H
[1;49r[48;11H<< std::endl;[49;1H[K[49;77H44,41[10C6%[43;41H[?25h[?25l[49;67H~@k[43;41H[49;67H   [43;27H[1;48r[48;1H
[1;49r[48;5H}[49;77H[K[49;77H45,27[9C12%[43;27H[?25h[?25l[49;67H~@k[43;27H[49;67H   [43;41H[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H46,41[9C18%[43;41H[?25h[?25l[49;67H~@k[43;41H[49;67H   [43;36H[1;48r[48;1H
[1;49r[43;35H[46m()[m[48;1H}[49;77H[K[49;77H47,29-36      25%[43;36H[?25h[?25l[49;67H~@k[43;36H[49;67H   [43;38H[1;48r[48;1H
[1;49r[42;35H()[43;35H[46m([mpj[46m)[m[49;77H[K[49;77H48,31-38      31%[43;38H[?25h[?25l[49;67H~@k[43;38H[49;67H   [43;23H[1;48r[48;1H
[1;49r[42;35H(pj)[48;1H[38;5;121mint[m main() {[49;77H[K[49;77H49,16-23      37%[43;23H[?25h[?25l[49;67H~@k[43;23H[49;67H   [43;5H[1;48r[48;1H
[1;49r[37;44H[46m{[43;5H}[m[49;77H[K[49;77H50,5[10C43%[43;5H[?25h[?25l[49;67H~@k[43;5H[49;67H   [43;3H[1;48r[48;1H
[1;49r[34;43H[46m{[m[36;44H{[42;5H}
  [46m}[m[48;3H[96m//instead of hardcoding std::cout in functions, we pass it as a param.[m[49;77H[K[49;77H51,3[10C50%[43;3H[?25h[?25l[49;67H~@k[43;3H[49;67H   [43;1H[1;48r[48;1H
[1;49r[32;1H[46m{[m[33;43H{[42;3H}
[46m}[m[48;3H[96m//so if we wanted to output to a file, the code for the functions[m[49;77H[K[49;77H52,1[10C56%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[31;1H{[42;1H}[48;3H[96m//would not need to change (the code in this function would change).[m[49;77H[K[49;77H53,0-1[8C62%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;12H[1;48r[48;1H
[1;49r[48;3Hstd::ostream& out = std::cout;[49;77H[K[49;77H54,12[9C68%[43;12H[?25h[?25l[49;67H~@k[43;12H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H55,0-1[8C75%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;41H[1;48r[48;1H
[1;49r[48;3HoutDistances(out); out << std::endl;[49;77H[K[49;77H56,41[9C81%[43;41H[?25h[?25l[49;67H~@k[43;41H[49;67H   [43;41H[1;48r[48;1H
[1;49r[49;77H[K[49;77H57,41[9C87%[43;41H[?25h[?25l[49;67H~@k[43;41H[49;67H   [43;41H[1;48r[48;1H
[1;49r[48;3HoutSizes(out);[49;77H[K[49;77H58,41[9C93%[43;41H[?25h[?25l[49;67H~@k[43;41H[49;67H   [43;32H[1;48r[48;1H
[1;49r[48;1H}[49;77H[K[49;77H59,32[9CBot[43;32H[?25h[?25l[49;67H~@k[43;32H[49;67H   [44;1H[49;77H60,0-1[44;1H[?25h[?25l[49;67H~@k[44;1H[49;67H   [45;38H[49;78H1,38 [45;38H[?25h[?25l[49;67H~@k[45;38H[49;67H   [46;1H[49;78H2,0-1[46;1H[?25h[?25l[49;67H~@k[46;1H[49;67H   [47;16H[49;78H3,16 [47;16H[?25h[?25l[49;67H~@k[47;16H[49;67H   [46;1H[49;78H2,0-1[46;1H[?25h[?25l[49;67H~@k[46;1H[49;67H   [45;38H[49;78H1,38 [45;38H[?25h[?25l[49;67H~@k[45;38H[49;67H   [44;1H[49;78H0,0-1[44;1H[?25h[?25l[49;67H~@k[44;1H[49;67H   [43;32H[49;77H59,32 [43;32H[?25h[?25l[49;67H~@k[43;32H[49;67H   [44;1H[49;77H60,0-1[44;1H[?25h[?25l[49;67H~@k[44;1H[49;67H   [45;38H[49;78H1,38 [45;38H[?25h[?25l[49;67H~@k[45;38H[49;67H   [46;1H[49;78H2,0-1[46;1H[?25h[?25l[49;67H~@k[46;1H[49;67H   [45;38H[49;78H1,38 [45;38H[?25h[?25l[49;67H~@k[45;38H[49;67H   [44;1H[49;78H0,0-1[44;1H[?25h[?25l[49;67H~@k[44;1H[49;67H   [43;32H[49;77H59,32 [43;32H[?25h[?25l[49;67H~@k[43;32H[49;67H   [42;41H[49;78H8,41[42;41H[?25h[?25l[49;67H~@k[42;41H[49;67H   [41;41H[49;78H7[41;41H[?25h[?25l[49;67H~@k[41;41H[49;67H   [40;41H[49;78H6[40;41H[?25h[?25l[49;67H~@k[40;41H[49;67H   [39;1H[49;78H5,0-1[39;1H[?25h[?25l[49;67H~@k[39;1H[49;67H   [38;12H[46m{[48;1H}[m[49;78H4,12 [38;12H[?25h[?25l[49;67H~@k[38;12H[49;67H   [37;1H[38;12H{[48;1H}[49;78H3,0-1[37;1H[?25h[?25l[49;67H~@k[37;1H[49;67H   [36;1H[25;1H[46m{[36;1H}[m[49;78H2,1  [36;1H[?25h[?25l[49;67H~@k[36;1H[49;67H   [35;3H[25;1H{[26;43H[46m{[35;3H}[m
}[49;78H1,3[35;3H[?25h[?25l[49;67H~@k[35;3H[49;67H   [34;5H[26;43H{[28;44H[46m{[34;5H}[m
  }[49;78H0,5[34;5H[?25h[?25l[49;67H~@k[34;5H[49;67H   [33;23H[28;44H{[34;5H}[49;77H49,16-23[33;23H[?25h[?25l[49;67H~@k[33;23H[49;67H   [32;38H[46m([mpj[46m)[m[49;78H8,31-38[32;38H[?25h[?25l[49;67H~@k[32;38H[49;67H   [31;36H[46m()[m[32;35H(pj)[49;78H7,29-36[31;36H[?25h[?25l[49;67H~@k[31;36H[49;67H   [30;41H[31;35H()[49;78H6,41   [30;41H[?25h[?25l[49;67H~@k[30;41H[49;67H   [29;27H[49;78H5,27[29;27H[?25h[?25l[49;67H~@k[29;27H[49;67H   [30;41H[49;78H6,41[30;41H[?25h[?25l[49;67H~@k[30;41H[49;67H   [31;36H[46m()[m[49;78H7,29-36[31;36H[?25h[?25l[49;67H~@k[31;36H[49;67H   [32;38H[31;35H()[32;35H[46m([mpj[46m)[m[49;78H8,31-38[32;38H[?25h[?25l[49;67H~@k[32;38H[49;67H   [33;23H[32;35H(pj)[49;78H9,16-23[33;23H[?25h[?25l[49;67H~@k[33;23H[49;67H   [34;5H[28;44H[46m{[34;5H}[m[49;77H50,5    [34;5H[?25h[?25l[49;67H~@k[34;5H[49;67H   [35;3H[26;43H[46m{[m[28;44H{[34;5H}
  [46m}[m[49;78H1,3[35;3H[?25h[?25l[49;67H~@k[35;3H[49;67H   [36;1H[25;1H[46m{[m[26;43H{[35;3H}
[46m}[m[49;78H2,1[36;1H[?25h[?25l[49;67H~@k[36;1H[49;67H   [37;1H[25;1H{[36;1H}[49;78H3,0-1[37;1H[?25h[?25l[49;67H~@k[37;1H[49;67H   [38;12H[46m{[48;1H}[m[49;78H4,12 [38;12H[?25h[?25l[49;67H~@k[38;12H[49;67H   [39;1H[38;12H{[48;1H}[49;78H5,0-1[39;1H[?25h[?25l[49;67H~@k[39;1H[49;67H   [40;41H[49;78H6,41 [40;41H[?25h[?25l[49;67H~@k[40;41H[49;67H   [41;41H[49;78H7[41;41H[?25h[?25l[49;67H~@k[41;41H[49;67H   [42;41H[49;78H8[42;41H[?25h[?25l[49;67H~@k[42;41H[49;67H   [43;32H[49;78H9,32[43;32H[?25h[?25l[49;67H~@k[43;32H[49;67H   [44;1H[49;77H60,0-1[44;1H[?25h[?25l[49;67H~@k[44;1H[49;67H   [45;38H[49;78H1,38 [45;38H[?25h[?25l[49;67H~@k[45;38H[49;67H   [45;37H[49;81H7[45;37H[?25h[?25l[49;67H~@k[45;37H[49;67H   [45;36H[49;81H6[45;36H[?25h[?25l[49;67H~@k[45;36H[49;67H   [45;35H[49;81H5[45;35H[?25h[?25l[49;67H~@k[45;35H[49;67H   [45;34H[49;81H4[45;34H[?25h[?25l[49;67H~@k[45;34H[49;67H   [45;33H[49;81H3[45;33H[?25h[?25l[49;67H~@k[45;33H[49;67H   [45;32H[49;81H2[45;32H[?25h[?25l[49;67H~@k[45;32H[49;67H   [45;31H[49;81H1[45;31H[?25h[?25l[49;67H~@k[45;31H[49;67H   [45;30H[49;81H0[45;30H[?25h[?25l[49;67H~@k[45;30H[49;67H   [45;29H[49;80H29[45;29H[?25h[?25l[49;67H~@k[45;29H[49;67H   [45;28H[49;81H8[45;28H[?25h[?25l[49;67H~@k[45;28H[49;67H   [45;27H[49;81H7[45;27H[?25h[?25l[49;67H~@k[45;27H[49;67H   [45;26H[49;81H6[45;26H[?25h[?25l[49;67H~@k[45;26H[49;67H   [45;25H[49;81H5[45;25H[?25h[?25l[49;67H~@k[45;25H[49;67H   [45;24H[49;81H4[45;24H[?25h[?25l[49;67H~@k[45;24H[49;67H   [45;23H[49;81H3[45;23H[?25h[?25l[49;67H~@k[45;23H[49;67H   [45;22H[49;81H2[45;22H[?25h[?25l[49;67H~@k[45;22H[49;67H   [45;21H[49;81H1[45;21H[?25h[?25l[49;67H~@k[45;21H[49;67H   [45;20H[49;81H0[45;20H[?25h[?25l[49;67H~@k[45;20H[49;67H   [45;19H[46m([mout[46m)[m[49;80H19[45;19H[?25h[?25l[49;67H~@k[45;19H[49;67H   [45;18H(out)[49;81H8[45;18H[?25h[?25l[49;67H~@k[45;18H[49;67H   [45;17H[49;81H7[45;17H[?25h[?25l[49;67H~@k[45;17H[49;67H   [45;16H[49;81H6[45;16H[?25h[?25l[49;67H~@k[45;16H[49;67H   [45;15H[46m([mout[46m)[m[49;81H5[45;15H[?25h[?25l[49;67H~@k[45;15H[49;67H   [45;14Hs(out)[49;81H4[45;14H[?25h[?25l[49;67H~@k[45;14H[49;67H   [45;13H[49;81H3[45;13H[?25h[?25l[49;67H~@k[45;13H[49;67H   [45;12H[49;81H2[45;12H[?25h[?25l[49;67H~@k[45;12H[49;67H   [45;11H[49;81H1[45;11H[?25h[?25l[49;67H~@k[45;11H[49;67H   [45;10H[49;81H0[45;10H[?25h[?25l[49;67H~@k[45;10H[49;67H   [45;9H[49;80H9 [45;9H[?25h[?25l[49;67H~@k[45;9H[49;67H   [45;8H[49;80H8[45;8H[?25h[?25l[49;67H~@k[45;8H[49;67H   [45;7H[49;80H7[45;7H[?25h[?25l[49;67H~@k[45;7H[49;67H   [45;6H[49;80H6[45;6H[?25h[?25l[49;67H~@k[45;6H[49;67H   [45;5H[49;80H5[45;5H[?25h[?25l[49;67H~@k[45;5H[49;67H   [45;4H[49;80H4[45;4H[?25h[?25l[49;67H~@k[45;4H[49;67H   [45;3H[49;80H3[45;3H[?25h[?25l[49;67Hi[45;3H[49;67H [45;3H[49;1H[1m-- INSERT --[m[49;77H[K[49;77H61,3[10CBot[45;3H[?25h[?25l[49;78H0,1[44;1H[?25h[?25l[49;77H59,3[43;3H[?25h[?25l/std::ostream& out = std::cout;[49;80H4]2;main.cc + (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.cc[43;4H[?25h[?25l[96m//std::ostream& out = std::cout;[m[49;80H5[43;5H[?25h[?25l[49;77H60,1[44;1H[?25h[?25l[49;78H1,5[45;5H[?25h[?25l[49;80H4[45;4H[?25h[?25l[49;80H3[45;3H[?25h[?25l[49;78H0,1[44;1H[?25h[?25l[49;77H59,3[43;3H[?25h[?25l[1;48r[48;1H
[1;49r[43;48r[43;1H[L[1;49r[42;3H[K[43;3H[96m//std::ostream& out = std::cout;[m[49;77H[K[49;77H60,3[10CBot[43;3H[?25h[?25l[49;78H1,1[44;1H[?25h[?25l[49;78H2,3[45;3H[?25h[?25l/outDistances(out); out << std::endl;[49;80H4[45;4H[?25h[?25l[96m//outDistances(out); out << std::endl;[m[49;80H5[45;5H[?25h[?25l[49;78H3,1[46;1H[?25h[?25l[49;78H4,5[47;5H[?25h[?25l[49;80H4[47;4H[?25h[?25l[49;80H3[47;3H[?25h[?25l/outSizes(out);[49;80H4[47;4H[?25h[?25l[96m//outSizes(out);[m[49;80H5[47;5H[?25h[?25l[49;78H3,1[46;1H[?25h[?25l[49;78H2,5[45;5H[?25h[?25l[49;78H1,1[44;1H[?25h[?25l[49;78H0,5[43;5H[?25h[?25l[49;77H59,3[42;3H[?25h[?25l[49;78H8,5[41;5H[?25h[?25l[49;78H9,3[42;3H[?25h[?25l[49;77H60,5[43;5H[?25h[?25l[49;78H1,1[44;1H[?25h[?25l[49;78H2,5[45;5H[?25h[?25l[49;78H3,1[46;1H[?25h[?25l[49;78H4,5[47;5H[?25h[?25l[49;78H3,1[46;1H[?25h[?25l[49;78H2,5[45;5H[?25h[?25l[49;78H1,1[44;1H[?25h[?25l[49;78H2,5[45;5H[?25h[?25l[49;80H6[45;6H[?25h[?25l[49;80H7[45;7H[?25h[?25l[49;80H8[45;8H[?25h[?25l[49;80H9[45;9H[?25h[?25l[49;80H10[45;10H[?25h[?25l[49;81H1[45;11H[?25h[?25l[49;81H2[45;12H[?25h[?25l[49;81H3[45;13H[?25h[?25l[49;81H4[45;14H[?25h[?25l[49;81H5[45;15H[?25h[?25l[49;81H6[45;16H[?25h[?25l[1C[96m[46m([3C)[m[49;81H7[45;17H[?25h[?25l[49;81H8[45;18H[?25h[?25l[96m(out)[m[49;81H9[45;19H[?25h[?25l[49;80H20[45;20H[?25h[?25l[96m[46m([3C)[m[49;81H1[45;21H[?25h[?25l[49;81H2[45;22H[?25h[?25l[96m(out)[m[49;78H3,1 [46;1H[?25h[?25l[49;78H4,19[47;19H[?25h[?25l[1;48r[48;1H
[1;49r[47;1H  [96m//[m
}[49;77H[K[49;77H65,5[10CBot[47;5H[?25h[?25l/[47;4H[K[49;80H4[47;4H[?25h[?25l[47;3H[K[49;80H3[47;3H[?25h[?25lf[49;80H4[47;4H[?25h[?25lo[49;80H5[47;5H[?25h[?25l[93mfor[m[49;80H6[47;6H[?25h[?25l([49;80H7[47;7H[?25h[?25l)[46m()[m[49;80H8[47;8H[?25h[?25l[1;48r[48;1H
[1;49r[47;1H 
}[49;77H[K[49;77H66,4-11[7CBot[46;6H()[47;11H[?25h[?25l  {[46m{
}[m[49;81H   [47;4H[?25h[?25l[1;48r[48;1H
[1;49r[47;1H[46m        [m
}[49;77H[K[49;77H67,4-11[7CBot[46;3H{
          [?25h[?25l  }[46;3H[46m{
[m  [46m}[m[49;81H   [47;4H[?25h[?25l[49;78H6[46;4H[?25h[?25l{
  }[49;78H5[45;4H[?25h[?25l[49;80H5[45;5H[?25h[?25l[49;78H4[44;5H[?25h[?25l[49;80H6[44;6H[?25h[?25l[49;80H7[44;7H[?25h[?25l[49;80H8[44;8H[?25h[?25l[49;80H9[44;9H[?25h[?25l[49;80H10[44;10H[?25h[?25l[49;81H1[44;11H[?25h[?25l[49;81H2[44;12H[?25h[?25l[1C[96m[46m([3C)[m[49;81H3[44;13H[?25h[?25l[49;81H4[44;14H[?25h[?25l[96m(out)[m[49;81H5[44;15H[?25h[?25l[49;81H6[44;16H[?25h[?25l[96m[46m([3C)[m[49;81H7[44;17H[?25h[?25l[49;81H8[44;18H[?25h[?25l[96m(out)[m[49;81H9[44;19H[?25h[?25l[1;48r[48;1H
[1;49r[44;48r[44;1H[L[1;49r[44;3H[96m//[m[49;77H[K[49;77H65,5[10CBot[44;5H[?25h[?25l/[44;4H[K[49;80H4[44;4H[?25h[?25l[44;3H[K[49;80H3[44;3H[?25h[?25li[49;80H4[44;4H[?25h[?25ln[49;80H5[44;5H[?25h[?25l[38;5;121mint[m[49;80H6[44;6H[?25h[?25l[49;80H7[44;7H[?25h[?25ln[49;80H8[44;8H[?25h[?25l[49;80H9[44;9H[?25h[?25l[49;80H8[44;8H[?25h[?25l[44;7H[K[49;80H7[44;7H[?25h[?25ls[49;80H8[44;8H[?25h[?25li[49;80H9[44;9H[?25h[?25lz[49;80H10[44;10H[?25h[?25le[49;81H1[44;11H[?25h[?25l[49;81H2[44;12H[?25h[?25l=[49;81H3[44;13H[?25h[?25l[49;81H4[44;14H[?25h[?25ls[49;81H5[44;15H[?25h[?25li[49;81H6[44;16H[?25h[?25lz[49;81H7[44;17H[?25h[?25le[49;81H8[44;18H[?25h[?25lo[49;81H9[44;19H[?25h[?25l[93msizeof[m[49;80H20[44;20H[?25h[?25l([49;81H1[44;21H[?25h[?25l)[46m()[m[49;81H2[44;22H[?25h[?25l[49;81H1[44;21H[?25h[?25l[46mP[m)P[46m)[m[49;81H2[44;22H[?25h[?25l[46mo[m)o[46m)[m[49;81H3[44;23H[?25h[?25l[46mi[m)i[46m)[m[49;81H4[44;24H[?25h[?25l[46mn[m)n[46m)[m[49;81H5[44;25H[?25h[?25l[46mt[m)t[46m)[m[49;81H6[44;26H[?25h[?25l[46ms[m)s[46m)[m[49;81H7[44;27H[?25h[?25l[49;81H8[44;28H[?25h[?25l[44;27H[K[44;20H([49;81H7[44;27H[?25h[?25l[44;26H[K[49;81H6[44;26H[?25h[?25l[44;25H[K[49;81H5[44;25H[?25h[?25l[44;24H[K[49;81H4[44;24H[?25h[?25l[44;23H[K[49;81H3[44;23H[?25h[?25l[44;22H[K[49;81H2[44;22H[?25h[?25l[44;21H[K[49;81H1[44;21H[?25h[?25l[44;20H[K[49;81H0[44;20H[?25h[?25lsizeo[44;19H[K[49;80H19[44;19H[?25h[?25l[44;18H[K[49;81H8[44;18H[?25h[?25l[44;17H[K[49;81H7[44;17H[?25h[?25l[44;16H[K[49;81H6[44;16H[?25h[?25l[44;15H[K[49;81H5[44;15H[?25h[?25l[44;14H[K[49;81H4[44;14H[?25h[?25l[49;81H3[44;13H[?25h[?25l[44;12H[K[49;81H2[44;12H[?25h[?25l[49;81H1[44;11H[?25h[?25l[44;10H[K[49;81H0[44;10H[?25h[?25l[44;9H[K[49;80H9 [44;9H[?25h[?25l[44;8H[K[49;80H8[44;8H[?25h[?25l[44;7H[K[49;80H7[44;7H[?25h[?25l[49;80H6[44;6H[?25h[?25lin[44;5H[K[49;80H5[44;5H[?25h[?25l[44;4H[K[49;80H4[44;4H[?25h[?25l[44;3H[K[49;80H3[44;3H[?25h[?25li[49;80H4[44;4H[?25h[?25l[93mif[m[49;80H5[44;5H[?25h[?25lif9[49;80H6[44;6H[?25h[?25ln[49;80H7[44;7H[?25h[?25lP[49;80H8[44;8H[?25h[?25lo[49;80H9[44;9H[?25h[?25li[49;80H10[44;10H[?25h[?25ln[49;81H1[44;11H[?25h[?25lt[49;81H2[44;12H[?25h[?25ls[49;81H3[44;13H[?25h[?25l[97m[101m)[m[49;81H4[44;14H[?25h[?25l[44;13H[K[49;81H3[44;13H[?25h[?25l[44;12H[K[49;81H2[44;12H[?25h[?25l[44;11H[K[49;81H1[44;11H[?25h[?25l[44;10H[K[49;81H0[44;10H[?25h[?25l[44;9H[K[49;80H9 [44;9H[?25h[?25l[44;8H[K[49;80H8[44;8H[?25h[?25l[44;7H[K[49;80H7[44;7H[?25h[?25l[44;6H[K[49;80H6[44;6H[?25h[?25l[93mif[m[44;5H[K[49;80H5[44;5H[?25h[?25l([49;80H6[44;6H[?25h[?25ln[49;80H7[44;7H[?25h[?25lP[49;80H8[44;8H[?25h[?25lo[49;80H9[44;9H[?25h[?25li[49;80H10[44;10H[?25h[?25ln[49;81H1[44;11H[?25h[?25lt[49;81H2[44;12H[?25h[?25ls[49;81H3[44;13H[?25h[?25l[49;81H4[44;14H[?25h[?25l[49;81H3[44;13H[?25h[?25l[49;81H4[44;14H[?25h[?25l%[49;81H5[44;15H[?25h[?25l[49;81H6[44;16H[?25h[?25l[95m2[m[49;81H7[44;17H[?25h[?25l[49;81H8[44;18H[?25h[?25l![49;81H9[44;19H[?25h[?25l=[49;80H20[44;20H[?25h[?25l[49;81H1[44;21H[?25h[?25l[95m0[m[49;81H2[44;22H[?25h[?25l)[44;5H[46m([16C)[m[49;81H3[44;23H[?25h[?25l[1;48r[48;1H
[1;49r[44;48r[44;1H[L[1;49r[49;77H[K[49;77H66,4-11[7CBot[43;5H([16C)[44;11H[?25h[?25ln[49;80H5-12[44;12H[?25h[?25lP[49;80H6-13[44;13H[?25h[?25lo[49;80H7-14[44;14H[?25h[?25li[49;80H8-15[44;15H[?25h[?25ln[49;80H9-16[44;16H[?25h[?25lt[49;80H10-17[44;17H[?25h[?25ls[49;81H1-18[44;18H[?25h[?25l[49;81H2-19[44;19H[?25h[?25l=[49;81H3-20[44;20H[?25h[?25l[49;81H4-21[44;21H[?25h[?25l[49;81H3-20[44;20H[?25h[?25l[44;19H[K[49;81H2-19[44;19H[?25h[?25l[49;81H1-18[44;18H[?25h[?25l[44;17H[K[49;81H0-17[44;17H[?25h[?25l[44;16H[K[49;80H9-16 [44;16H[?25h[?25l[44;15H[K[49;80H8-15[44;15H[?25h[?25l[44;14H[K[49;80H7-14[44;14H[?25h[?25l[44;13H[K[49;80H6-13[44;13H[?25h[?25l[44;12H[K[49;80H5-12[44;12H[?25h[?25l[44;11H[K[49;80H4-11[44;11H[?25h[?25l[49;78H5,11  [43;11H[?25h[?25l[49;78H4[42;11H[?25h[?25l[49;81H2[42;12H[?25h[?25l[1C[96m[46m([3C)[m[49;81H3[42;13H[?25h[?25l[49;81H4[42;14H[?25h[?25l[96m(out)[m[49;81H5[42;15H[?25h[?25l[49;81H6[42;16H[?25h[?25l[96m[46m([3C)[m[49;81H7[42;17H[?25h[?25l[49;81H8[42;18H[?25h[?25l[96m(out)[m[49;81H9[42;19H[?25h[?25l[43;48r[43;1H[L[1;49r[43;3H[96m//[m[49;77H[K[49;77H65,5[10C95%[43;5H[?25h[?25l/[43;4H[K[49;80H4[43;4H[?25h[?25l[43;3H[K[49;80H3[43;3H[?25h[?25li[49;80H4[43;4H[?25h[?25ln[49;80H5[43;5H[?25h[?25l[38;5;121mint[m[49;80H6[43;6H[?25h[?25l[49;80H7[43;7H[?25h[?25ls[49;80H8[43;8H[?25h[?25li[49;80H9[43;9H[?25h[?25lz[49;80H10[43;10H[?25h[?25le[49;81H1[43;11H[?25h[?25l[49;81H2[43;12H[?25h[?25l=[49;81H3[43;13H[?25h[?25l[49;81H4[43;14H[?25h[?25l[95m0[m[49;81H5[43;15H[?25h[?25l;[49;81H6[43;16H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H}[49;77H[K[49;77H66,16[9CBot[43;16H[?25h[?25l[49;78H7,4-11[44;11H[?25h[?25l[49;78H6,16  [43;16H[?25h[?25l[49;78H7,4-11[44;11H[?25h[?25l[49;78H6,16  [43;16H[?25h[?25l[49;78H5[42;16H[?25h[?25l[49;81H5[42;15H[?25h[?25l;[42;15H[K[49;81H4[42;14H[?25h[?25ln;[49;81H5[42;15H[?25h[?25lP;[49;81H6[42;16H[?25h[?25lO;[49;81H7[42;17H[?25h[?25li;[49;81H8[42;18H[?25h[?25ln;[49;81H9[42;19H[?25h[?25lt;[49;80H20[42;20H[?25h[?25ls;[49;81H1[42;21H[?25h[?25l;[42;21H[K[49;81H0[42;20H[?25h[?25l;[42;20H[K[49;80H19[42;19H[?25h[?25l;[42;19H[K[49;81H8[42;18H[?25h[?25l;[42;18H[K[49;81H7[42;17H[?25h[?25l;[42;17H[K[49;81H6[42;16H[?25h[?25lo;[49;81H7[42;17H[?25h[?25li;[49;81H8[42;18H[?25h[?25ln;[49;81H9[42;19H[?25h[?25lt;[49;80H20[42;20H[?25h[?25ls;[49;81H1[42;21H[?25h[?25l[49;78H6[43;21H[?25h[?25l[49;78H7,4-11[44;11H[?25h[?25l[45;6H[46m()[m[49;78H8,8   [45;8H[?25h[?25l()[49;78H7,4-11[44;11H[?25h[?25l[49;78H6,21  [43;21H[?25h[?25l[49;78H5[42;21H[?25h[?25l[49;81H0[42;20H[?25h[?25l[49;80H19[42;19H[?25h[?25l[49;81H8[42;18H[?25h[?25l[49;81H7[42;17H[?25h[?25l[49;81H6[42;16H[?25h[?25l[49;81H5[42;15H[?25h[?25l[49;81H4[42;14H[?25h[?25l[49;81H3[42;13H[?25h[?25l[49;81H2[42;12H[?25h[?25l[49;81H1[42;11H[?25h[?25l[49;81H0[42;10H[?25h[?25l[49;80H9 [42;9H[?25h[?25l[49;80H8[42;8H[?25h[?25l[49;80H7[42;7H[?25h[?25l[49;80H6[42;6H[?25h[?25l[49;80H5[42;5H[?25h[?25l[49;80H4[42;4H[?25h[?25l[49;80H3[42;3H[?25h[?25luint size = nPoints;[49;80H4[42;4H[?25h[?25lnint size = nPoints;[49;80H5[42;5H[?25h[?25lsint size = nPoints;[49;80H6[42;6H[?25h[?25liint size = nPoints;[49;80H7[42;7H[?25h[?25lgint size = nPoints;[49;80H8[42;8H[?25h[?25lnint size = nPoints;[49;80H9[42;9H[?25h[?25ldint size = nPoints;[49;80H10[42;10H[?25h[?25lint size = nPoints;[42;28H[K[49;80H9 [42;9H[?25h[?25leint size = nPoints;[49;80H10[42;10H[?25h[?25ldint size = nPoints;[49;81H1[42;11H[?25h[?25l  [38;5;121munsigned[m [38;5;121mint[m size = nPoints;[49;81H2[42;12H[?25h[?25l[49;78H6[43;12H[?25h[?25l[49;78H7,4-11[44;11H[?25h[?25l[45;6H[46m()[m[49;78H8,8   [45;8H[?25h[?25l()[49;78H7,4-11[44;11H[?25h[?25ls[49;80H5-12[44;12H[?25h[?25li[49;80H6-13[44;13H[?25h[?25lz[49;80H7-14[44;14H[?25h[?25le[49;80H8-15[44;15H[?25h[?25l[49;80H9-16[44;16H[?25h[?25l=[49;80H10-17[44;17H[?25h[?25l[49;81H1-18[44;18H[?25h[?25ln[49;81H2-19[44;19H[?25h[?25lP[49;81H3-20[44;20H[?25h[?25lo[49;81H4-21[44;21H[?25h[?25li[49;81H5-22[44;22H[?25h[?25ln[49;81H6-23[44;23H[?25h[?25lt[49;81H7-24[44;24H[?25h[?25ls[49;81H8-25[44;25H[?25h[?25l[49;81H9-26[44;26H[?25h[?25l-[49;80H20-27[44;27H[?25h[?25l[49;81H1-28[44;28H[?25h[?25l[95m1[m[49;81H2-29[44;29H[?25h[?25l;[49;81H3-30[44;30H[?25h[?25l[45;6H[46m()[m[49;78H8,8    [45;8H[?25h[?25l[49;80H7[45;7H[?25h[?25l[46mi[m)i[46m)[m[49;80H8[45;8H[?25h[?25l[46mn[m)n[46m)[m[49;80H9[45;9H[?25h[?25l[38;5;121min[m[38;5;121m[46mt[m)[38;5;121mt[m[46m)[m[49;80H10[45;10H[?25h[?25l[46m [m) [46m)[m[49;81H1[45;11H[?25h[?25l[46mi[m)i[46m)[m[49;81H2[45;12H[?25h[?25l[46m [m) [46m)[m[49;81H3[45;13H[?25h[?25l[46m=[m)=[46m)[m[49;81H4[45;14H[?25h[?25l[46m [m) [46m)[m[49;81H5[45;15H[?25h[?25l[95m[46m0[m)[95m0[m[46m)[m[49;81H6[45;16H[?25h[?25l[46m;[m);[46m)[m[49;81H7[45;17H[?25h[?25l[46m [m) [46m)[m[49;81H8[45;18H[?25h[?25l[46mi[m)i[46m)[m[49;81H9[45;19H[?25h[?25l[46m [m) [46m)[m[49;80H20[45;20H[?25h[?25l[46m<[m)<[46m)[m[49;81H1[45;21H[?25h[?25l[46m [m) [46m)[m[49;81H2[45;22H[?25h[?25l[46mn[m)n[46m)[m[49;81H3[45;23H[?25h[?25l[46mP[m)P[46m)[m[49;81H4[45;24H[?25h[?25l)[45;24H[K[45;23H[46m)[m[49;81H3[45;23H[?25h[?25l)[45;23H[K[45;22H[46m)[m[49;81H2[45;22H[?25h[?25l[46ms[m)s[46m)[m[49;81H3[45;23H[?25h[?25l[46mi[m)i[46m)[m[49;81H4[45;24H[?25h[?25l[46mz[m)z[46m)[m[49;81H5[45;25H[?25h[?25l[46me[m)e[46m)[m[49;81H6[45;26H[?25h[?25l[46m;[m);[46m)[m[49;81H7[45;27H[?25h[?25l[46m [m) [46m)[m[49;81H8[45;28H[?25h[?25l[46mi[m)i[46m)[m[49;81H9[45;29H[?25h[?25l[46m+[m)+[46m)[m[49;80H30[45;30H[?25h[?25l[46m+[m)+[46m)[m[49;81H1[45;31H[?25h[?25l[45;6H([24C)
  [46m{
[m  [46m}[m[49;78H9,4 [46;4H[?25h[?25l[49;77H70[47;4H[?25h[?25l[31;12H[46m{[m[46;3H{
  }
[46m}[m[49;78H1,2[48;2H[?25h[?25l[31;12H{[46;3H[46m{
[m  [46m}[m
}[49;78H0,4[47;4H[?25h[?25l[49;77H69[46;4H[?25h[?25l[1;48r[48;1H
[1;49r[46;48r[46;1H[L[1;49r[46;10H[46m [m
  }[49;77H[K[49;77H70,4-11[7CBot[45;3H{[46;10H [?25h[?25lL[49;80H5-12[46;12H[?25h[?25li[49;80H6-13[46;13H[?25h[?25ln[49;80H7-14[46;14H[?25h[?25le[49;80H8-15[46;15H[?25h[?25l[49;80H9-16[46;16H[?25h[?25ll[49;80H10-17[46;17H[?25h[?25l[46;16H[K[49;80H9-16 [46;16H[?25h[?25l[49;80H8-15[46;15H[?25h[?25l[46;14H[K[49;80H7-14[46;14H[?25h[?25l[46;13H[K[49;80H6-13[46;13H[?25h[?25l[46;12H[K[49;80H5-12[46;12H[?25h[?25l[46;11H[K[49;80H4-11[46;11H[?25h[?25lL[49;80H5-12[46;12H[?25h[?25li[49;80H6-13[46;13H[?25h[?25ln[49;80H7-14[46;14H[?25h[?25le[49;80H8-15[46;15H[?25h[?25l[49;80H9-16[46;16H[?25h[?25ll[49;80H10-17[46;17H[?25h[?25l[49;81H1-18[46;18H[?25h[?25l=[49;81H2-19[46;19H[?25h[?25l[49;81H3-20[46;20H[?25h[?25l[49;81H2-19[46;19H[?25h[?25l[46;18H[K[49;81H1-18[46;18H[?25h[?25l[49;81H0-17[46;17H[?25h[49;1H[K[46;16H[?25l[49;67H^[[46;16H[49;67H  [46;17H[49;77H70,9-16[7CBot[46;16H[?25h[?25l[49;67H^U[46;16H[49;67H  [43;5H[1;48r[1;1H[24L[1;49r[1;1H[38;5;81m#include [m[95m"point.hh"[m
[38;5;81m#include [m[95m<sstream>[m
[38;5;81m#include [m[95m<iostream>[m
[93musing[m [38;5;121mnamespace[m std;

[38;5;121mclass[m Line
{[8;9HPoint p1, p2;[9;9H[38;5;121mdouble[m length();[10;9Hstring toString();
};

[38;5;121mdouble[m Line::length()
{[15;9H[93mreturn[m p1.distance(p2);
}

string Line::toString()
{[20;9Hstring str = [95m""[m;[21;9Hstr = p1.toString() + [95m" -- "[m + p2.toString();[22;9H[93mreturn[m str;
}[49;77H[K[49;77H43,5[10CTop[43;5H[?25h[?25l[49;67H^D[43;5H[49;67H  [43;11H[1;48r[1;1H[24M[1;49r[25;11H<< std::endl;
    }
  }
}

[38;5;121mint[m main() {

  [96m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [96m//so if we wanted to output to a file, the code for the functions
[m  [96m//would not need to change (the code in this function would change).

[m  [96m//std::ostream& out = std::cout;

[m  [96m//outDistances(out); out << std::endl;

[m  [96m//outSizes(out);[m
  [38;5;121munsigned[m [38;5;121mint[m size = nPoints;
  [93mif[m(nPoints % [95m2[m != [95m0[m)[43;11Hsize = nPoints - [95m1[m;
  [93mfor[m([38;5;121mint[m i = [95m0[m; i < size; i++)
  {[46;11HLine l
  }
}[49;77H[K[49;77H67,4-11[7CBot[43;11H[?25h[?25l[49;67H^D[43;11H[49;67H  [48;1H[30;12H[46m{[48;1H}[m[49;77H72,1   [48;1H[?25h[?25l[49;67Hi[48;1H[49;67H [48;1H
[1m-- INSERT --[m[49;77H[K[49;77H72,1[10CBot[48;1H[?25h[?25l[30;12H{[48;1H}[49;78H1[47;1H[?25h[?25l[49;78H0[46;1H[?25h[?25l[49;80H2-9[46;9H[?25h[?25l[49;80H3-10[46;10H[?25h[?25l[49;80H4-11[46;11H[?25h[?25l[49;80H5-12[46;12H[?25h[?25l[49;80H6-13[46;13H[?25h[?25l[49;80H7-14[46;14H[?25h[?25l[49;80H8-15[46;15H[?25h[?25l[49;80H9-16[46;16H[?25h[?25l[49;80H10-17[46;17H[?25h[?25l[49;81H1-18[46;18H[?25h[?25l=[49;81H2-19[46;19H[?25h[?25l[1;48r[48;1H
[1;49r[46;48r[46;1H[L[1;49r[49;77H[K[49;77H71,5-19[7CBot[46;19H[?25h[?25l  }[44;3H[46m{

[m  [46m}[m[49;80H4   [46;4H[?25h[?25l[1;48r[48;1H
[1;49r[46;48r[46;1H[L[1;49r[49;77H[K[49;77H72,3[10CBot[43;3H{

  }
  [?25h[?25l|[49;80H4[46;4H[?25h[?25l[46;3H[K[49;80H3[46;3H[?25h[?25l[49;80H2[46;2H[?25h[?25l[49;80H1[46;1H[?25h[?25l[45;48r[48;1H
[1;49r[45;3H}


[94m~                                                                                             [m[49;77H[K[49;77H71,4[10CBot[43;3H[46m{

[m  [46m}[?25h[?25l[m[45;3H[K[43;3H{[49;80H3[45;3H[?25h[?25l[49;80H2[45;2H[?25h[?25l[49;80H1[45;1H[?25h[?25l[44;48r[48;1H
[1;49r[44;11HLine l =[48;1H[94m~                                                                                             [m[49;77H[K[49;77H70,12-19      Bot[44;19H[?25h[?25l[28;12H[46m{[46;1H}[m[49;77H54,13   [28;13H[?25h[49;1H[K[28;12H[?25l[49;67H^[[28;12H[49;67H  [28;13H[49;77H54,12[9CBot[28;12H[?25h[?25l[49;67H^U[28;12H[49;67H  [28;1H[1;48r[1;1H[24L[1;49r[1;1H[38;5;81m#include [m[95m<iostream>[m
[93musing[m [38;5;121mnamespace[m std;

[38;5;121mclass[m Line
{[6;9HPoint p1, p2;[7;9H[38;5;121mdouble[m length();[8;9Hstring toString();
};

[38;5;121mdouble[m Line::length()
{[13;9H[93mreturn[m p1.distance(p2);
}

string Line::toString()
{[18;9Hstring str = [95m""[m;[19;9Hstr = p1.toString() + [95m" -- "[m + p2.toString();[20;9H[93mreturn[m str;
}

[96m//declare an array of points[m
[38;5;121mstatic[m [38;5;121mconst[m Point points[] = {[49;77H[K[49;77H30,1[11C8%[28;1H[?25h[?25l[49;67H^U[28;1H[49;67H  [6;1H[1;48r[1;1H[2L[1;49r[1;1H[38;5;81m#include [m[95m"point.hh"[m
[38;5;81m#include [m[95m<sstream>[m[49;77H[K[49;77H6,1[11CTop[6;1H[?25h[?25l[49;67H^U[6;1H[49;67H  [1;1H[49;77H1[1;1H[?25h[?25l[49;67Hi[1;1H[49;67H [1;1H[49;1H[1m-- INSERT --[m[49;77H[K[49;77H1,1[11CTop[1;1H[?25h[?25l[49;77H2[2;1H[?25h[?25l[49;77H3[3;1H[?25h[?25l[49;77H4[4;1H[?25h[?25l[49;77H5[5;1H[?25h[?25l[49;77H6[6;1H[?25h[?25l
[46m{[11;1H}[m[49;77H7[7;1H[?25h[?25l[49;79H2[7;2H[?25h[?25l[8;48r[8;1H[L[1;49r[11;1H[46m        [m
}[49;77H[K[49;77H8,2-9[9CTop[7;1H{[11;1H        [8;9H[?25h[?25lp[49;79H3-10[8;10H[?25h[?25lu[49;79H4-11[8;11H[?25h[?25lb[49;79H5-12[8;12H[?25h[?25ll[49;79H6-13[8;13H[?25h[?25li[49;79H7-14[8;14H[?25h[?25l[93mpublic[m[49;79H8-15[8;15H[?25h[?25l:[49;79H9-16[8;16H[?25h[?25l[49;77H9[9;16H[?25h[?25l[49;79H8-15[9;15H[?25h[?25l[49;79H7-14[9;14H[?25h[?25l[49;79H6-13[9;13H[?25h[?25l[49;79H5-12[9;12H[?25h[?25l[49;79H4-11[9;11H[?25h[?25l[49;79H3-10[9;10H[?25h[?25l[49;79H2-9 [9;9H[?25h[?25l        Point p1, p2;[49;79H3-17[9;17H[?25h[?25l[49;79H2-9 [9;9H[?25h[?25l[49;77H10,2-9[10;9H[?25h[?25l        [38;5;121mdouble[m length();[49;80H3-17[10;17H[?25h[?25l[49;80H2-9 [10;9H[?25h[?25l[49;78H1[11;9H[?25h[?25l        string toString();[49;80H3-17[11;17H[?25h[?25l[49;78H0[10;17H[?25h[?25l[49;77H9,3-17 [9;17H[?25h[?25l[49;77H8,9-16[8;16H[?25h[49;1H[K[8;15H[?25l[49;67H^[[8;15H[49;67H  [8;16H[49;77H8,8-15[8CTop[8;15H[?25h[?25l[49;67H~@k[8;15H[49;67H   [9;16H[49;77H9,2-16[9;16H[?25h[?25l[49;67H^D[9;16H[49;67H  [9;1H[1;48r[1;1H[24M[1;49r[25;11H<< [95m" is "[m << pi.distance(pj)[26;11H<< std::endl;
    }
  }
}

[38;5;121mint[m main() {

  [96m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [96m//so if we wanted to output to a file, the code for the functions
[m  [96m//would not need to change (the code in this function would change).

[m  [96m//std::ostream& out = std::cout;

[m  [96m//outDistances(out); out << std::endl;

[m  [96m//outSizes(out);[m
  [38;5;121munsigned[m [38;5;121mint[m size = nPoints;
  [93mif[m(nPoints % [95m2[m != [95m0[m)[44;11Hsize = nPoints - [95m1[m;
  [93mfor[m([38;5;121mint[m i = [95m0[m; i < size; i++)
  {[47;11HLine l =
  }[49;77H[K[49;77H33,1[10C96%[9;1H[?25h[?25l[49;67H^D[9;1H[49;67H  [32;3H[1;48r[48;1H
[1;49r[48;1H}[49;77H[K[49;77H57,3[10CBot[32;3H[?25h[?25l[49;67H^D[32;3H[49;67H  [48;1H[30;12H[46m{[48;1H}[m[49;77H73,1[48;1H[?25h[?25l[18;43H[46m{[27;3H}[m[30;12H{[48;1H}[49;77H43,43[18;43H[?25h[?25l{[27;3H}[49;77H59,47[34;47H[?25h[?25l[49;67H^U[34;47H[49;67H  [34;3H[1;48r[1;1H[24L[1;49r[1;1H[38;5;81m#include [m[95m<sstream>[m
[38;5;81m#include [m[95m<iostream>[m
[93musing[m [38;5;121mnamespace[m std;

[38;5;121mclass[m Line
{[7;9H[93mpublic[m:[8;17HPoint p1, p2;[9;17H[38;5;121mdouble[m length();[10;17Hstring toString();
};

[38;5;121mdouble[m Line::length()
{[15;9H[93mreturn[m p1.distance(p2);
}

string Line::toString()
{[20;9Hstring str = [95m""[m;[21;9Hstr = p1.toString() + [95m" -- "[m + p2.toString();[22;9H[93mreturn[m str;
}[49;77H[K[49;77H35,3[11C4%[34;3H[?25h[?25l[49;67H~@k[34;3H[49;67H   [33;3H[49;78H4[33;3H[?25h[?25l[49;67H~@k[33;3H[49;67H   [32;3H[49;78H3[32;3H[?25h[?25l[49;67H~@k[32;3H[49;67H   [31;1H[49;78H2,0-1[31;1H[?25h[?25l[49;67H~@k[31;1H[49;67H   [30;3H[49;78H1,3  [30;3H[?25h[?25l[49;67H~@k[30;3H[49;67H   [29;3H[49;78H0[29;3H[?25h[?25l[49;67H~@k[29;3H[49;67H   [28;2H[49;77H29,2[28;2H[?25h[?25l[49;67H~@k[28;2H[49;67H   [27;3H[49;78H8,3[27;3H[?25h[?25l[49;67H~@k[27;3H[49;67H   [26;3H[49;78H7[26;3H[?25h[?25l[49;67H~@k[26;3H[49;67H   [25;3H[49;78H6[25;3H[?25h[?25l[49;67H~@k[25;3H[49;67H   [24;1H[49;78H5,0-1[24;1H[?25h[?25l[49;67H~@k[24;1H[49;67H   [23;1H[19;1H[46m{[23;1H}[m[49;78H4,1  [23;1H[?25h[?25l[49;67H~@k[23;1H[49;67H   [22;8H[19;1H{[23;1H}[49;78H3,1-8[22;8H[?25h[?25l[49;67H~@k[22;8H[49;67H   [21;8H[49;78H2[21;8H[?25h[?25l[49;67H~@k[21;8H[49;67H   [20;8H[49;78H1[20;8H[?25h[?25l[49;67H~@k[20;8H[49;67H   [19;1H[46m{[23;1H}[m[49;78H0,1  [19;1H[?25h[?25l[49;67H~@k[19;1H[49;67H   [18;3H
{[23;1H}[49;77H19,3[18;3H[?25h[?25l[49;67H~@k[18;3H[49;67H   [17;1H[49;78H8,0-1[17;1H[?25h[?25l[49;67H~@k[17;1H[49;67H   [16;1H[14;1H[46m{

}[m[49;78H7,1  [16;1H[?25h[?25l[49;67H~@k[16;1H[49;67H   [15;8H[14;1H{

}[49;78H6,1-8[15;8H[?25h[?25l[49;67H~@k[15;8H[49;67H   [14;1H[46m{

}[m[49;78H5,1  [14;1H[?25h[?25l[49;67H~@k[14;1H[49;67H   [13;3H
{

}[49;78H4,3[13;3H[?25h[?25l[49;67H~@k[13;3H[49;67H   [12;1H[49;78H3,0-1[12;1H[?25h[?25l[49;67H~@k[12;1H[49;67H   [11;2H[49;78H2,2  [11;2H[?25h[?25l[49;67H~@k[11;2H[49;67H   [10;8H[49;78H1,1-8[10;8H[?25h[?25l[49;67H~@k[10;8H[49;67H   [9;8H[49;78H0[9;8H[?25h[?25l[49;67H~@k[9;8H[49;67H   [8;8H[49;77H9,1-8 [8;8H[?25h[?25l[49;67H~@k[8;8H[49;67H   [7;8H[49;77H8[7;8H[?25h[?25l[49;67H~@k[7;8H[49;67H   [7;9H[49;79H2-9[7;9H[?25h[?25l[49;67H~@k[7;9H[49;67H   [7;10H[49;79H3-10[7;10H[?25h[?25l[49;67H~@k[7;10H[49;67H   [7;11H[49;79H4-11[7;11H[?25h[?25l[49;67H~@k[7;11H[49;67H   [7;12H[49;79H5-12[7;12H[?25h[?25l[49;67H~@k[7;12H[49;67H   [7;13H[49;79H6-13[7;13H[?25h[?25l[49;67H~@k[7;13H[49;67H   [7;14H[49;79H7-14[7;14H[?25h[?25l[49;67H~@k[7;14H[49;67H   [7;15H[49;79H8-15[7;15H[?25h[?25l[49;67H~@k[7;15H[49;67H   [7;15H[?25h[?25l[49;67H~@k[7;15H[49;67H   [7;15H[?25h[?25l[49;67H~@k[7;15H[49;67H   [7;15H[?25h[?25l[49;67H~@k[7;15H[49;67H   [7;15H[?25h[?25l[49;67H~@k[7;15H[49;67H   [7;15H[?25h[?25l[49;67H~@k[7;15H[49;67H   [7;15H[?25h[?25l[49;67Hi[7;15H[49;67H [7;15H[49;1H[1m-- INSERT --[m[49;77H[K[49;77H8,8-15[9C4%[7;15H[?25h[?25l[49;79H9-16[7;16H[?25h[?25l[49;77H9,2-9 [8;9H[?25h[?25l[49;79H3-17[8;17H[?25h[?25l[49;79H4-18[8;18H[?25h[?25l[49;79H5-19[8;19H[?25h[?25l[49;79H6-20[8;20H[?25h[?25l[49;79H7-21[8;21H[?25h[?25l[49;79H8-22[8;22H[?25h[?25l[49;79H9-23[8;23H[?25h[?25l[49;79H10-24[8;24H[?25h[?25l[49;80H1-25[8;25H[?25h[?25l[49;80H2-26[8;26H[?25h[?25l[49;80H3-27[8;27H[?25h[?25l[49;80H4-28[8;28H[?25h[?25l[49;80H5-29[8;29H[?25h[?25l[49;80H6-30[8;30H[?25h[?25l[9;48r[9;1H[L[1;49r[49;77H[K[49;77H10,3-17[8C3%[9;17H[?25h[?25l[10;48r[10;1H[L[1;49r[49;77H[K[49;77H11,3-17[8C3%[10;17H[?25h[?25lO[49;80H4-18[10;18H[?25h[?25li[49;80H5-19[10;19H[?25h[?25lu[49;80H6-20[10;20H[?25h[?25lb[49;80H7-21[10;21H[?25h[?25lt[49;80H8-22[10;22H[?25h[?25l[10;21H[K[49;80H7-21[10;21H[?25h[?25l[10;20H[K[49;80H6-20[10;20H[?25h[?25l[10;19H[K[49;80H5-19[10;19H[?25h[?25l[10;18H[K[49;80H4-18[10;18H[?25h[?25l[10;17H[K[49;80H3-17[10;17H[?25h[?25lP[49;80H4-18[10;18H[?25h[?25lo[49;80H5-19[10;19H[?25h[?25li[49;80H6-20[10;20H[?25h[?25ln[49;80H7-21[10;21H[?25h[?25lt[49;80H8-22[10;22H[?25h[?25l[49;80H9-23[10;23H[?25h[?25l[49;80H8-22[10;22H[?25h[?25l[10;21H[K[49;80H7-21[10;21H[?25h[?25l[10;20H[K[49;80H6-20[10;20H[?25h[?25l[10;19H[K[49;80H5-19[10;19H[?25h[?25l[10;18H[K[49;80H4-18[10;18H[?25h[?25l[10;17H[K[49;80H3-17[10;17H[?25h[?25lL[49;80H4-18[10;18H[?25h[?25li[49;80H5-19[10;19H[?25h[?25ln[49;80H6-20[10;20H[?25h[?25le[49;80H7-21[10;21H[?25h[?25l([49;80H8-22[10;22H[?25h[?25l)[46m()[m[49;80H9-23[10;23H[?25h[?25l[49;80H8-22[10;22H[?25h[?25l[46mP[m)P[46m)[m[49;80H9-23[10;23H[?25h[?25l[46mo[m)o[46m)[m[49;80H10-24[10;24H[?25h[?25l[46mi[m)i[46m)[m[49;81H1-25[10;25H[?25h[?25l[46mn[m)n[46m)[m[49;81H2-26[10;26H[?25h[?25l[46mt[m)t[46m)[m[49;81H3-27[10;27H[?25h[?25l[46m [m) [46m)[m[49;81H4-28[10;28H[?25h[?25l[46mp[m)p[46m)[m[49;81H5-29[10;29H[?25h[?25l[46m,[m),[46m)[m[49;81H6-30[10;30H[?25h[?25l[46m [m) [46m)[m[49;81H7-31[10;31H[?25h[?25l[46mP[m)P[46m)[m[49;81H8-32[10;32H[?25h[?25l[46mo[m)o[46m)[m[49;81H9-33[10;33H[?25h[?25l[46mi[m)i[46m)[m[49;80H20-34[10;34H[?25h[?25l[46mn[m)n[46m)[m[49;81H1-35[10;35H[?25h[?25l[46mt[m)t[46m)[m[49;81H2-36[10;36H[?25h[?25l[46m [m) [46m)[m[49;81H3-37[10;37H[?25h[?25l[46mp[m)p[46m)[m[49;81H4-38[10;38H[?25h[?25l[46mp[m)p[46m)[m[49;81H5-39[10;39H[?25h[?25l[49;81H6-40[10;40H[?25h[?25l[10;21H([17C)[49;81H7-41[10;41H[?25h[?25l:[49;81H8-42[10;42H[?25h[?25l[49;81H9-43[10;43H[?25h[?25lp[49;80H30-44[10;44H[?25h[?25l1[49;81H1-45[10;45H[?25h[?25l([49;81H2-46[10;46H[?25h[?25lp[49;81H3-47[10;47H[?25h[?25l)[46m([mp[46m)[m[49;81H4-48[10;48H[?25h[?25l,(p)[49;81H5-49[10;49H[?25h[?25l[49;81H6-50[10;50H[?25h[?25lp[49;81H7-51[10;51H[?25h[?25l2[49;81H8-52[10;52H[?25h[?25l([49;81H9-53[10;53H[?25h[?25lp[49;80H40-54[10;54H[?25h[?25lp[49;81H1-55[10;55H[?25h[?25l)[46m([mpp[46m)[m[49;81H2-56[10;56H[?25h[?25l(pp)[20;22H[46m()[m[49;77H21,24   [20;24H[?25h[?25l()[49;78H0,1 [19;1H[?25h[?25l[16;1H[46m{

}[m[49;77H19,2[18;2H[?25h[?25l[16;1H{[17;27H[46m([mp2[46m)[m
}[49;78H8,24-31[17;31H[?25h[?25l[16;1H[46m{[m[17;27H(p2)
[46m}[m[49;78H7,2    [16;2H[?25h[?25l[15;20H[46m()[m
{

}[49;78H6,22[15;22H[?25h[?25l[10;52H[46m([mpp[46m)[m[15;20H()[49;78H1,42-56[10;56H[?25h[?25l(pp)[49;78H2,19-33[11;33H[?25h[?25l[10;52H[46m([mpp[46m)[m[49;78H1,42-56[10;56H[?25h[?25l(pp)[49;81H3-57[10;57H[?25h[?25l{[46m{


}[m[49;81H4-58[10;58H[?25h[?25l}[46m}[m


}[49;81H5-59[10;59H[?25h[?25l{}[49;78H2,19-33[11;33H[?25h[?25l[49;78H3,22-41[12;41H[?25h[?25l[49;78H4,3    [13;3H[?25h[?25l[49;78H5,1[14;1H[?25h[?25l[15;20H[46m()[m[49;78H6,22[15;22H[?25h[?25l()
[46m{

}[m[49;78H7,2 [16;2H[?25h[?25l[15;20H[46m()[m
{

}[49;78H6,22[15;22H[?25h[?25l()[49;78H5,1 [14;1H[?25h[?25l[49;78H4,3[13;3H[?25h[?25l[49;78H3,22-41[12;41H[?25h[?25l[49;78H2,19-33[11;33H[?25h[?25l[49;78H3,22-41[12;41H[?25h[?25l[49;78H4,3    [13;3H[?25h[?25l[49;78H5,1[14;1H[?25h[?25l[15;20H[46m()[m[49;78H6,22[15;22H[?25h[?25l()
[46m{

}[m[49;78H7,2 [16;2H[?25h[?25l{

}[49;78H8,25-32[17;32H[?25h[?25l[16;1H[46m{

}[m[49;78H9,2    [18;2H[?25h[?25l[16;1H{

}[49;77H20,1[19;1H[?25h[?25l[20;22H[46m()[m[49;78H1,24[20;24H[?25h[?25l()
[46m{[25;1H}[m[49;78H2,2 [21;2H[?25h[?25l{[25;1H}[49;78H3,18-25[22;25H[?25h[?25l[49;78H4,47-54[23;54H[?25h[?25l[49;78H5,13-20[24;20H[?25h[?25l[21;1H[46m{[25;1H}[m[49;78H6,2    [25;2H[?25h[?25l[21;1H{[25;1H}[49;78H7,1[26;1H[?25h[?25l[49;78H8,29[27;29H[?25h[?25l[28;31H[46m{

}[m[49;78H9,32[28;32H[?25h[?25l{

}[49;77H30,54[29;54H[?25h[?25l[49;78H1,3 [30;3H[?25h[?25l[49;78H2,59[31;59H[?25h[?25l[49;78H3[32;59H[?25h[?25l[49;78H4,1 [33;1H[?25h[?25l[49;78H5,12[34;12H[?25h[?25l[35;29H[46m{


}[m[49;78H6,30[35;30H[?25h[?25l{


}[49;77H23,18-25[22;25H[?25h[?25l[49;78H4,23-30[23;30H[?25h[?25l[49;78H5,13-2[24;20H[?25h[?25l[21;1H[46m{[25;1H}[m[49;78H6,2    [25;2H[?25h[?25l[21;1H{[25;1H}[49;78H7,1[26;1H[?25h[?25l[49;78H8,29[27;29H[?25h[?25l[49;78H9,30[28;30H[?25h[?25l[49;77H30[29;30H[?25h[?25l[49;78H1,3 [30;3H[?25h[?25l[49;78H2,30[31;30H[?25h[?25l[49;78H3[32;30H[?25h[?25l[49;78H4,1 [33;1H[?25h[?25l[49;78H5,12[34;12H[?25h[?25l[35;29H[46m{


}[m[49;78H6,30[35;30H[?25h[?25l{


}[49;78H7[36;30H[?25h[?25l[49;78H8[37;30H[?25h[?25l[35;29H[46m{


}[m[49;78H9,2 [38;2H[?25h[?25l[35;29H{


}[49;77H40,1[39;1H[?25h[?25l[49;78H1,30[40;30H[?25h[?25l[49;78H2,12[41;12H[?25h[?25l[49;78H3,30[42;30H[?25h[?25l[49;78H4,2 [43;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;11H<< [95m" to "[m << pj.toString()[49;77H[K[49;77H45,30[10C7%[43;30H[?25h[?25l[1;48r[48;1H
[1;49r[48;11H<< [95m" is "[m << pi.distance(pj)[49;77H[K[49;77H46,26[9C11%[43;26H[?25h[?25l[1;48r[48;1H
[1;49r[48;11H<< std::endl;[49;77H[K[49;77H47,30[9C14%[43;30H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H}[49;77H[K[49;77H48,28[9C18%[43;28H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H49,30[9C22%[43;30H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H}[49;77H[K[49;77H50,23-30      25%[43;30H[?25h[?25l[1;48r[48;1H
[1;49r[49;77H[K[49;77H51,23-30      29%[43;30H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[38;5;121mint[m main() {[49;77H[K[49;77H52,17-24      33%[43;24H[?25h[?25l[1;48r[48;1H
[1;49r[49;77H[K[49;77H53,6[10C37%[37;44H[46m{[43;5H}[?25h[?25l[1;48r[m[48;1H
[1;49r[48;3H[96m//instead of hardcoding std::cout in functions, we pass it as a param.[m[49;77H[K[49;77H54,4[10C40%[34;43H[46m{[m[36;44H{[42;5H}
  [46m}[?25h[?25l[1;48r[m[48;1H
[1;49r[48;3H[96m//so if we wanted to output to a file, the code for the functions[m[49;77H[K[49;77H55,2[10C44%[32;1H[46m{[m[33;43H{[42;3H}
[46m}[?25h[?25l[1;48r[m[48;1H
[1;49r[48;3H[96m//would not need to change (the code in this function would change).[m[49;77H[K[49;77H56,1[10C48%[31;1H{[42;1H}
[?25h[?25l[1;48r[48;1H
[1;49r[49;77H[K[49;77H57,13[9C51%[43;13H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[96m//std::ostream& out = std::cout;[m[49;77H[K[49;77H58,1[10C55%[43;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;77H[K[49;77H59,30[9C59%[43;30H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[96m//outDistances(out); out << std::endl;[m[49;77H[K[49;77H60,30[9C62%[43;30H[?25h[?25l[1;48r[48;1H
[1;49r[49;77H[K[49;77H61,30[9C66%[43;30H[96m[46m([38C)[43;30H[?25h[?25l[1;48r[m[48;1H
[1;49r[48;3H[96m//outSizes(out);[m[49;77H[K[49;77H62,3[10C70%[42;30H[96m([38C)
[m  [?25h[?25l[1;48r[48;1H
[1;49r[48;3H[38;5;121munsigned[m [38;5;121mint[m size = nPoints;[49;77H[K[49;77H63,30[9C74%[43;30H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[93mif[m(nPoints % [95m2[m != [95m0[m)[49;77H[K[49;77H64,1[10C77%[43;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;11Hsize = nPoints - [95m1[m;[49;77H[K[49;77H65,30[9C81%[43;30H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[93mfor[m([38;5;121mint[m i = [95m0[m; i < size; i++)[49;77H[K[49;77H66,1[10C85%[43;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H{[49;77H[K[49;77H67,19[9C88%[43;19H[?25h[?25l[1;48r[48;1H
[1;49r[48;11HLine l =[49;77H[K[49;77H68,30[9C92%[43;30H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H69,23[9C96%[43;5H[46m([16C)[?25h[?25l[1;48r[m[48;1H
[1;49r[48;1H}[49;77H[K[49;77H70,23-30      Bot[42;5H([16C)[43;30H[?25h[?25l[49;78H1,30   [44;30H[?25h[?25l
  [46m{

[m  [46m}[m[49;78H2,4 [45;4H[?25h[?25l{

  }[49;78H3,12-19[46;19H[?25h[?25l[45;3H[46m{

[m  [46m}[m[49;78H4,4    [47;4H[?25h[?25l[30;12H[46m{[m[45;3H{

  }
[46m}[m[49;78H5,2[48;2H[?25h[?25l[30;12H{[45;3H[46m{

[m  [46m}[m
}[49;78H4,4[47;4H[?25h[?25l[45;3H{

  }[49;78H3,12-19[46;19H[?25h[?25l[45;3H[46m{

[m  [46m}[m[49;78H2,4    [45;4H[?25h[?25l{

  }[49;78H3,12-19[46;19H[?25h[?25l[46;18H[K[49;81H1-18[46;18H[?25h[?25l[49;81H0-17[46;17H[?25h[?25l;[49;81H1-18[46;18H[?25h[?25l[1;48r[48;1H
[1;49r[46;48r[46;1H[L[1;49r[49;77H[K[49;77H74,4-11[7CBot[46;11H[?25h[?25l[49;80H3-10[46;10H[?25h[?25l[49;80H2-9 [46;9H[?25h[?25l[49;80H1  [46;1H[?25h[?25l[45;48r[48;1H
[1;49r[45;11HLine l;


[94m~                                                                                             [m[49;77H[K[49;77H73,11-18      Bot[45;18H[?25h[?25l[45;17H[K[49;81H0-17[45;17H[?25h[?25l([49;81H1-18[45;18H[?25h[?25l)[46m()[m[49;81H2-19[45;19H[?25h[?25l;()[49;81H3-20[45;20H[?25h[?25l[46m()[m[49;81H2-19[45;19H[?25h[?25l[49;81H1-18[45;18H[?25h[?25l[46mp[m);p[46m)[m[49;81H2-19[45;19H[?25h[?25l[46mo[m);o[46m)[m[49;81H3-20[45;20H[?25h[?25l[46mi[m);i[46m)[m[49;81H4-21[45;21H[?25h[?25l[46mn[m);n[46m)[m[49;81H5-22[45;22H[?25h[?25l[46mt[m);t[46m)[m[49;81H6-23[45;23H[?25h[?25l[46ms[m);s[46m)[m[49;81H7-24[45;24H[?25h[?25l[46m[[m[97m[101m);
[m  [97m[101m}
}[m[45;24H[[97m[46m)[m[49;81H8-25[45;25H[?25h[?25l[46mi[m[97m[101m);[mi[97m[46m)[m[49;81H9-26[45;26H[?25h[?25l[46m][m);
  }
}[45;26H][46m)[m[49;80H20-27[45;27H[?25h[?25l[46m,[m);,[46m)[m[49;81H1-28[45;28H[?25h[?25l[46m [m); [46m)[m[49;81H2-29[45;29H[?25h[?25l[46mp[m);p[46m)[m[49;81H3-30[45;30H[?25h[?25l[46mo[m);o[46m)[m[49;81H4-31[45;31H[?25h[?25l[46mi[m);i[46m)[m[49;81H5-32[45;32H[?25h[?25l[46mn[m);n[46m)[m[49;81H6-33[45;33H[?25h[?25l[46mt[m);t[46m)[m[49;81H7-34[45;34H[?25h[?25l[46ms[m);s[46m)[m[49;81H8-35[45;35H[?25h[?25l[46m [m); [46m)[m[49;81H9-36[45;36H[?25h[?25l)[46m;[m[45;37H[K[45;35H[46m)[m;[49;81H8-35[45;35H[?25h[?25l[46m[[m[97m[101m);
[m  [97m[101m}
}[m[45;35H[[97m[46m)[m[49;81H9-36[45;36H[?25h[?25l[46mi[m[97m[101m);[mi[97m[46m)[m[49;80H30-37[45;37H[?25h[?25l[46m+[m[97m[101m);[m+[97m[46m)[m[49;81H1-38[45;38H[?25h[?25l[95m[46m1[m[97m[101m);[m[95m1[m[97m[46m)[m[49;81H2-39[45;39H[?25h[?25l[46m][m);
  }
}[45;39H][46m)[m[49;81H3-40[45;40H[?25h[?25l[44;3H[46m{[m[45;17H([22C)
  [46m}[m[49;78H2,4    [44;4H[?25h[?25l[43;6H[46m([24C)[m
  {

  }[49;78H1,32[43;32H[?25h[?25l[49;81H1[43;31H[?25h[?25l[43;6H([24C)[49;81H0[43;30H[?25h[?25l[49;80H29[43;29H[?25h[?25l[49;81H8[43;28H[?25h[?25l[49;81H7[43;27H[?25h[?25l[49;81H6[43;26H[?25h[?25l[49;81H5[43;25H[?25h[?25l[49;81H4[43;24H[?25h[?25l[49;81H3[43;23H[?25h[?25l[49;81H2[43;22H[?25h[?25l[49;81H3[43;23H[?25h[?25l[49;81H4[43;24H[?25h[?25l[49;81H5[43;25H[?25h[?25l[49;81H6[43;26H[?25h[?25l ; i++)[49;81H7[43;27H[?25h[?25l-; i++)[49;81H8[43;28H[?25h[?25l ; i++)[49;81H9[43;29H[?25h[?25l[95m1[m; i++)[49;80H30[43;30H[?25h[?25l
  [46m{

[m  [46m}[m[49;78H2,4 [44;4H[?25h[?25l{

  }[49;78H1,30[43;30H[?25h[?25l
  [46m{

[m  [46m}[m[49;78H2,4 [44;4H[?25h[?25l{

  }[49;78H3,23-30[45;30H[?25h[?25l[44;3H[46m{

[m  [46m}[m[49;78H4,4    [46;4H[?25h[?25l[29;12H[46m{[m[44;3H{

  }
[46m}[m[49;78H5,2[47;2H[?25h[?25l[29;12H{[44;3H[46m{

[m  [46m}[m
}[49;78H4,4[46;4H[?25h[?25l[44;3H{

  }[49;78H3,23-30[45;30H[?25h[?25l[44;3H[46m{

[m  [46m}[m[49;78H2,4    [44;4H[?25h[?25l{

  }[49;78H3,23-30[45;30H[?25h[?25l[49;81H4-31[45;31H[?25h[?25l[49;81H5-32[45;32H[?25h[?25l[49;81H6-33[45;33H[?25h[?25l[49;81H7-34[45;34H[?25h[?25ls[46m[[3C][m[49;81H8-35[45;35H[?25h[?25l[49;81H9-36[45;36H[?25h[?25l[[3C][49;80H30-37[45;37H[?25h[?25l[49;81H1-38[45;38H[?25h[?25l[46m[[3C][m[49;81H2-39[45;39H[?25h[?25l[45;17H[46m([m[17C[[3C][46m)[m[49;81H3-40[45;40H[?25h[?25l[49;81H4-41[45;41H[?25h[?25l[45;17H([22C)[49;81H5-42[45;42H[?25h[?25l[46;48r[46;1H[L[1;49r[49;77H[K[49;77H74,4-11[7CBot[46;11H[?25h[?25lc[49;80H5-12[46;12H[?25h[?25lo[49;80H6-13[46;13H[?25h[?25lu[49;80H7-14[46;14H[?25h[?25lt[49;80H8-15[46;15H[?25h[?25l[49;80H9-16[46;16H[?25h[?25l<[49;80H10-17[46;17H[?25h[?25l<[49;81H1-18[46;18H[?25h[?25l[49;81H2-19[46;19H[?25h[?25lt[49;81H3-20[46;20H[?25h[?25lo[49;81H4-21[46;21H[?25h[?25lS[49;81H5-22[46;22H[?25h[?25lt[49;81H6-23[46;23H[?25h[?25lr[49;81H7-24[46;24H[?25h[?25li[49;81H8-25[46;25H[?25h[?25ln[49;81H9-26[46;26H[?25h[?25lg[49;80H20-27[46;27H[?25h[?25l[46;26H[K[49;80H19-26[46;26H[?25h[?25l[46;25H[K[49;81H8-25[46;25H[?25h[?25l[46;24H[K[49;81H7-24[46;24H[?25h[?25l[46;23H[K[49;81H6-23[46;23H[?25h[?25l[46;22H[K[49;81H5-22[46;22H[?25h[?25l[46;21H[K[49;81H4-21[46;21H[?25h[?25l[46;20H[K[49;81H3-20[46;20H[?25h[?25l[46;19H[K[49;81H2-19[46;19H[?25h[?25ll[49;81H3-20[46;20H[?25h[?25l.[49;81H4-21[46;21H[?25h[?25lt[49;81H5-22[46;22H[?25h[?25lo[49;81H6-23[46;23H[?25h[?25lS[49;81H7-24[46;24H[?25h[?25lt[49;81H8-25[46;25H[?25h[?25lr[49;81H9-26[46;26H[?25h[?25li[49;80H20-27[46;27H[?25h[?25ln[49;81H1-28[46;28H[?25h[?25lg[49;81H2-29[46;29H[?25h[49;1H[K[46;28H[?25l[49;67H^[[46;28H[49;67H  [46;29H[49;77H74,21-28      Bot[46;28H[?25h[?25l[49;67H^U[46;28H[49;67H  [43;5H[1;48r[1;1H[24L[1;49r[2;1H[38;5;121mclass[m Line
{[4;9H[93mpublic[m:[5;17HPoint p1, p2;[7;17HLine(Point p, Point pp) : p1(p), p2(pp) {}[8;17H[38;5;121mdouble[m length();[9;17Hstring toString();
};

[38;5;121mdouble[m Line::length()
{[14;9H[93mreturn[m p1.distance(p2);
}

string Line::toString()
{[19;9Hstring str = [95m""[m;[20;9Hstr = p1.toString() + [95m" -- "[m + p2.toString();[21;9H[93mreturn[m str;
}

[96m//declare an array of points[m[49;77H[K[49;77H47,5[10C14%[43;5H[?25h[?25l[49;67H^U[43;5H[49;67H  [23;9H[1;48r[1;1H[4L[1;49r[1;1H[38;5;81m#include [m[95m"point.hh"[m
[38;5;81m#include [m[95m<sstream>[m
[38;5;81m#include [m[95m<iostream>[m
[93musing[m [38;5;121mnamespace[m std;[49;77H[K[49;77H23,2-9[8CTop[23;9H[?25h[?25l[49;67H^U[23;9H[49;67H  [1;1H[49;77H1,1   [1;1H[?25h[?25l[49;67H^D[1;1H[49;67H  [6;3H[1;48r[1;1H[24M[1;49r[25;7Hout << [95m"distance from "[m << pi.toString()[26;11H<< [95m" to "[m << pj.toString()[27;11H<< [95m" is "[m << pi.distance(pj)[28;11H<< std::endl;
    }
  }
}

[38;5;121mint[m main() {

  [96m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [96m//so if we wanted to output to a file, the code for the functions
[m  [96m//would not need to change (the code in this function would change).

[m  [96m//std::ostream& out = std::cout;

[m  [96m//outDistances(out); out << std::endl;

[m  [96m//outSizes(out);[m
  [38;5;121munsigned[m [38;5;121mint[m size = nPoints;
  [93mif[m(nPoints % [95m2[m != [95m0[m)[46;11Hsize = nPoints - [95m1[m;
  [93mfor[m([38;5;121mint[m i = [95m0[m; i < size - [95m1[m; i++)
  {[49;77H[K[49;77H30,3[10C85%[6;3H[?25h[?25l[49;67H^D[6;3H[49;67H  [26;3H[1;48r[1;1H[4M[1;49r[17;43H[46m{[26;3H}[m[45;11HLine l(points[i], points[i+[95m1[m]);[46;11Hcout << l.toString
  }
}[49;77H[K[49;77H54,3[10CBot[26;3H[?25h[?25l[49;67H^D[26;3H[49;67H  [48;1H[17;43H{[26;3H}[29;12H[46m{[48;1H}[m[49;77H76,1[48;1H[?25h[?25l[49;67H~@k[48;1H[49;67H   [47;1H[29;12H{[48;1H}[49;78H5[47;1H[?25h[?25l[49;67H~@k[47;1H[49;67H   [46;8H[49;78H4,1-8[46;8H[?25h[?25l[49;67H~@k[46;8H[49;67H   [46;9H[49;80H2-9[46;9H[?25h[?25l[49;67H~@k[46;9H[49;67H   [46;10H[49;80H3-10[46;10H[?25h[?25l[49;67H~@k[46;10H[49;67H   [46;11H[49;80H4-11[46;11H[?25h[?25l[49;67H~@k[46;11H[49;67H   [46;12H[49;80H5-12[46;12H[?25h[?25l[49;67H~@k[46;12H[49;67H   [46;13H[49;80H6-13[46;13H[?25h[?25l[49;67H~@k[46;13H[49;67H   [46;14H[49;80H7-14[46;14H[?25h[?25l[49;67H~@k[46;14H[49;67H   [46;15H[49;80H8-15[46;15H[?25h[?25l[49;67H~@k[46;15H[49;67H   [46;16H[49;80H9-16[46;16H[?25h[?25l[49;67H~@k[46;16H[49;67H   [46;17H[49;80H10-17[46;17H[?25h[?25l[49;67H~@k[46;17H[49;67H   [46;18H[49;81H1-18[46;18H[?25h[?25l[49;67H~@k[46;18H[49;67H   [46;19H[49;81H2-19[46;19H[?25h[?25l[49;67H~@k[46;19H[49;67H   [46;20H[49;81H3-20[46;20H[?25h[?25l[49;67H~@k[46;20H[49;67H   [46;21H[49;81H4-21[46;21H[?25h[?25l[49;67H~@k[46;21H[49;67H   [46;22H[49;81H5-22[46;22H[?25h[?25l[49;67H~@k[46;22H[49;67H   [46;23H[49;81H6-23[46;23H[?25h[?25l[49;67H~@k[46;23H[49;67H   [46;24H[49;81H7-24[46;24H[?25h[?25l[49;67H~@k[46;24H[49;67H   [46;25H[49;81H8-25[46;25H[?25h[?25l[49;67H~@k[46;25H[49;67H   [46;26H[49;81H9-26[46;26H[?25h[?25l[49;67H~@k[46;26H[49;67H   [46;27H[49;80H20-27[46;27H[?25h[?25l[49;67Hi[46;27H[49;67H [46;27H


[1m-- INSERT --[m[49;77H[K[49;77H74,20-27      Bot[46;27H[?25h[?25l[49;81H1-28[46;28H[?25h[?25l[49;81H2-29[46;29H[?25h[?25l[49;81H3-30[46;30H[?25h[?25l<[49;81H4-31[46;31H[?25h[?25l<[49;81H5-32[46;32H[?25h[?25l[49;81H6-33[46;33H[?25h[?25l[95m"[m[49;81H7-34[46;34H[?25h[?25l[95m [m[49;81H8-35[46;35H[?25h[?25l[95m"[m[49;81H9-36[46;36H[?25h[?25l[49;80H30-37[46;37H[?25h[?25l<[49;81H1-38[46;38H[?25h[?25l<[49;81H2-39[46;39H[?25h[?25l[49;81H3-40[46;40H[?25h[?25ll[49;81H4-41[46;41H[?25h[?25l.[49;81H5-42[46;42H[?25h[?25ll[49;81H6-43[46;43H[?25h[?25le[49;81H7-44[46;44H[?25h[?25ln[49;81H8-45[46;45H[?25h[?25lt[49;81H9-46[46;46H[?25h[?25l[46;45H[K[49;81H8-45[46;45H[?25h[?25lf[49;81H9-46[46;46H[?25h[?25lt[49;80H40-47[46;47H[?25h[?25lh[49;81H1-48[46;48H[?25h[?25l[46;47H[K[49;81H0-47[46;47H[?25h[?25l[46;46H[K[49;80H39-46[46;46H[?25h[?25l[46;45H[K[49;81H8-45[46;45H[?25h[?25lg[49;81H9-46[46;46H[?25h[?25lt[49;80H40-47[46;47H[?25h[?25lh[49;81H1-48[46;48H[?25h[?25l([49;81H2-49[46;49H[?25h[?25l)[46m()[m[49;81H3-50[46;50H[?25h[?25l;()[49;81H4-51[46;51H[?25h[?25l[46;50H[K[46;48H[46m()[m[49;81H3-50[46;50H[?25h[?25l()[49;81H4-51[46;51H[?25h[?25l<[49;81H5-52[46;52H[?25h[?25l<[49;81H6-53[46;53H[?25h[?25l[49;81H7-54[46;54H[?25h[?25le[49;81H8-55[46;55H[?25h[?25ln[49;81H9-56[46;56H[?25h[?25ld[49;80H50-57[46;57H[?25h[?25ll[49;81H1-58[46;58H[?25h[?25l;[49;81H2-59[46;59H[?25h[49;1H[K[46;58H[?25l[49;67H^[[46;58H[49;67H  [46;59H[49;77H74,51-58      Bot[46;58H[?25h[?25l[49;67H~@k[46;58H[49;67H   [45;41H[49;78H3,34-41[45;41H[?25h[?25l[49;67H~@k[45;41H[49;67H   [44;3H[46m{[47;3H}[m[49;78H2,3    [44;3H[?25h[?25l[49;67H~@k[44;3H[49;67H   [43;35H[43;6H[46m([28C)[m
  {[47;3H}[49;78H1,35[43;35H[?25h[?25l[49;67Hi[43;35H[49;67H [43;35H[49;1H[1m-- INSERT --[m[49;77H[K[49;77H71,35[9CBot[43;35H[?25h[?25l)[43;35H[K[43;34H[46m)[m[49;81H4[43;34H[?25h[?25l)[43;34H[K[43;33H[46m)[m[49;81H3[43;33H[?25h[?25l[46m [m) [46m)[m[49;81H4[43;34H[?25h[?25l[46m+[m)+[46m)[m[49;81H5[43;35H[?25h[?25l[46m=[m)=[46m)[m[49;81H6[43;36H[?25h[?25l[46m [m) [46m)[m[49;81H7[43;37H[?25h[?25l[95m[46m2[m)[95m2[m[46m)[m[49;81H8[43;38H[?25h[49;1H[K[43;37H[?25l[49;67H^[[43;37H[49;67H  [43;38H[43;6H([31C)[49;77H71,37[9CBot[43;37H[?25h[?25l[49;67HZ[43;37H[?25h[?25l[49;68HZ[43;37H[?1006l[?1002l[?2004l[49;1H"main.cc"[49;67H[K[49;11H76L, 1721C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ make -f ../Makefile 
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
[01m[Kmain.cc:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[Kmain.cc:71:20:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kunsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   for(int i = 0; [01;35m[Ki < size - 1[m[K; i += 2)
                  [01;35m[K~~^~~~~~~~~~[m[K
[01m[Kmain.cc:74:9:[m[K [01;31m[Kerror: [m[Kinvalid use of non-static member function â€˜[01m[Kstd::__cxx11::string Line::toString()[m[Kâ€™
    [01;31m[Kcout << l.toString[m[K << " " << l.length() << endl;
    [01;31m[K~~~~~^~~~~~~~~~~~~[m[K
[01m[Kmain.cc:21:8:[m[K [01;36m[Knote: [m[Kdeclared here
 string [01;36m[KLine[m[K::toString()
        [01;36m[K^~~~[m[K
[01m[Kmain.cc:[m[K At global scope:
[01m[Kmain.cc:43:1:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid outDistances(std::ostream&)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
 [01;35m[KoutDistances[m[K(std::ostream& out)
 [01;35m[K^~~~~~~~~~~~[m[K
[01m[Kmain.cc:36:1:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid outSizes(std::ostream&)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
 [01;35m[KoutSizes[m[K(std::ostream& out) {
 [01;35m[K^~~~~~~~[m[K
make: *** [../Makefile:48: main.o] Error 1
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ make -f ../Makefile [8Pvim main.cc[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main.cc" 76L, 1721C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[32mstatic[m [32mconst[m Point points[] = {
  Point([31m0[m, [31m0[m), Point([31m3[m, [31m4[m), Point([31m1[m, [31m1[m), Point([31m4[m, [31m5[m),
};
[34m//use standard idiom to figure out number of elements in array[m
[32mstatic[m [32mconstexpr[m [32mauto[m nPoints = [38;5;130msizeof[m(points)/[38;5;130msizeof[m(points[[31m0[m]);

[32mstatic[m [32mvoid[m
outSizes(std::ostream& out) {
  out << [31m"sizeof(double) = "[m << [38;5;130msizeof[m([32mdouble[m) << std::endl;
  out << [31m"sizeof(Point) = "[m << [38;5;130msizeof[m(Point) << std::endl;
}

[34m/** output pair-wise distance between all points in points[] to out. */[m
[32mstatic[m [32mvoid[m
outDistances(std::ostream& out)
{
  [38;5;130mfor[m ([32mauto[m i = [31m0u[m; i < nPoints - [31m1[m; i++) {
    Point pi = points[i];
    [38;5;130mfor[m ([32mauto[m j = i + [31m1[m; j < nPoints; j++) {[20;7HPoint pj = points[j];[21;7Hout << [31m"distance from "[m << pi.toString()[22;11H<< [31m" to "[m << pj.toString()[23;11H<< [31m" is "[m << pi.distance(pj)[24;11H<< std::endl;
    }
  }
}

[32mint[m main() {

  [34m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [34m//so if we wanted to output to a file, the code for the functions
[m  [34m//would not need to change (the code in this function would change).

[m  [34m//std::ostream& out = std::cout;

[m  [34m//outDistances(out); out << std::endl;

[m  [34m//outSizes(out);[m
  [32munsigned[m [32mint[m size = nPoints;
  [38;5;130mif[m(nPoints % [31m2[m != [31m0[m)[42;11Hsize = nPoints - [31m1[m;
  [38;5;130mfor[m([32mint[m i = [31m0[m; i < size - [31m1[m; i += [31m2[m)
  {[45;11HLine l(points[i], points[i+[31m1[m]);[46;11Hcout << l.toString << [31m" "[m << l.length() << endl;
  }
}[49;77H71,37[9CBot]2;main.cc (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.cc[43;37H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;121mstatic[m [38;5;121mconst[m Point points[] = {
  Point([95m0[m, [95m0[m), Point([95m3[m, [95m4[m), Point([95m1[m, [95m1[m), Point([95m4[m, [95m5[m),
};
[96m//use standard idiom to figure out number of elements in array[m
[38;5;121mstatic[m [38;5;121mconstexpr[m [38;5;121mauto[m nPoints = [93msizeof[m(points)/[93msizeof[m(points[[95m0[m]);

[38;5;121mstatic[m [38;5;121mvoid[m
outSizes(std::ostream& out) {
  out << [95m"sizeof(double) = "[m << [93msizeof[m([38;5;121mdouble[m) << std::endl;
  out << [95m"sizeof(Point) = "[m << [93msizeof[m(Point) << std::endl;
}

[96m/** output pair-wise distance between all points in points[] to out. */[m
[38;5;121mstatic[m [38;5;121mvoid[m
outDistances(std::ostream& out)
{
  [93mfor[m ([38;5;121mauto[m i = [95m0u[m; i < nPoints - [95m1[m; i++) {
    Point pi = points[i];
    [93mfor[m ([38;5;121mauto[m j = i + [95m1[m; j < nPoints; j++) {[20;7HPoint pj = points[j];[21;7Hout << [95m"distance from "[m << pi.toString()[22;11H<< [95m" to "[m << pj.toString()[23;11H<< [95m" is "[m << pi.distance(pj)[24;11H<< std::endl;
    }
  }
}

[38;5;121mint[m main() {

  [96m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [96m//so if we wanted to output to a file, the code for the functions
[m  [96m//would not need to change (the code in this function would change).

[m  [96m//std::ostream& out = std::cout;

[m  [96m//outDistances(out); out << std::endl;

[m  [96m//outSizes(out);[m
  [38;5;121munsigned[m [38;5;121mint[m size = nPoints;
  [93mif[m(nPoints % [95m2[m != [95m0[m)[42;11Hsize = nPoints - [95m1[m;
  [93mfor[m([38;5;121mint[m i = [95m0[m; i < size - [95m1[m; i += [95m2[m)
  {[45;11HLine l(points[i], points[i+[95m1[m]);[46;11Hcout << l.toString << [95m" "[m << l.length() << endl;
  }
}[49;77H71,37[9CBot"main.cc" 76L, 1721C[43;37H[?25h[?25l[49;67H~@k[43;37H[49;67H   [44;3H[46m{[47;3H}[m[49;78H2,3 [44;3H[?25h[?25l[49;67H~@k[44;3H[49;67H   [45;8H[44;3H{[47;3H}[49;78H3,1-8[45;8H[?25h[?25l[49;67H~@k[45;8H[49;67H   [46;8H[49;78H4[46;8H[?25h[?25l[49;67H~@k[46;8H[49;67H   [46;9H[49;80H2-9[46;9H[?25h[?25l[49;67H~@k[46;9H[49;67H   [46;10H[49;80H3-10[46;10H[?25h[?25l[49;67H~@k[46;10H[49;67H   [46;11H[49;80H4-11[46;11H[?25h[?25l[49;67H~@k[46;11H[49;67H   [46;12H[49;80H5-12[46;12H[?25h[?25l[49;67H~@k[46;12H[49;67H   [46;13H[49;80H6-13[46;13H[?25h[?25l[49;67H~@k[46;13H[49;67H   [46;14H[49;80H7-14[46;14H[?25h[?25l[49;67H~@k[46;14H[49;67H   [46;15H[49;80H8-15[46;15H[?25h[?25l[49;67H~@k[46;15H[49;67H   [46;16H[49;80H9-16[46;16H[?25h[?25l[49;67H~@k[46;16H[49;67H   [46;17H[49;80H10-17[46;17H[?25h[?25l[49;67H~@k[46;17H[49;67H   [46;18H[49;81H1-18[46;18H[?25h[?25l[49;67H~@k[46;18H[49;67H   [46;19H[49;81H2-19[46;19H[?25h[?25l[49;67H~@k[46;19H[49;67H   [46;20H[49;81H3-20[46;20H[?25h[?25l[49;67H~@k[46;20H[49;67H   [46;21H[49;81H4-21[46;21H[?25h[?25l[49;67H~@k[46;21H[49;67H   [46;22H[49;81H5-22[46;22H[?25h[?25l[49;67H~@k[46;22H[49;67H   [46;23H[49;81H6-23[46;23H[?25h[?25l[49;67H~@k[46;23H[49;67H   [46;24H[49;81H7-24[46;24H[?25h[?25l[49;67H~@k[46;24H[49;67H   [46;25H[49;81H8-25[46;25H[?25h[?25l[49;67H~@k[46;25H[49;67H   [46;26H[49;81H9-26[46;26H[?25h[?25l[49;67H~@k[46;26H[49;67H   [46;27H[49;80H20-27[46;27H[?25h[?25l[49;67H~@k[46;27H[49;67H   [46;28H[49;81H1-28[46;28H[?25h[?25l[49;67H~@k[46;28H[49;67H   [46;29H[49;81H2-29[46;29H[?25h[?25l[49;67Hi[46;29H[49;67H [46;29H


[1m-- INSERT --[m[49;13H[K[49;77H74,22-29      Bot[46;29H[?25h[?25l( << [95m" "[m << l.length() << endl;[49;81H3-30]2;main.cc + (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.cc[46;30H[?25h[?25l) << [95m" "[m << l.length() << endl;[46;29H[46m()[m[49;81H4-31[46;31H[?25h[49;1H[K[46;30H[?25l[49;67H^[[46;30H[49;67H  [46;31H[49;77H74,23-30      Bot[46;30H[?25h[?25l[49;67HZ[46;30H[?25h[?25l[49;68HZ[46;30H[?1006l[?1002l[?2004l


"main.cc"[49;67H[K[49;11H76L, 1723C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ vim main.cc [8@make -f ../Makefile[C
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
[01m[Kmain.cc:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[Kmain.cc:71:20:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kunsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   for(int i = 0; [01;35m[Ki < size - 1[m[K; i += 2)
                  [01;35m[K~~^~~~~~~~~~[m[K
[01m[Kmain.cc:[m[K At global scope:
[01m[Kmain.cc:43:1:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid outDistances(std::ostream&)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
 [01;35m[KoutDistances[m[K(std::ostream& out)
 [01;35m[K^~~~~~~~~~~~[m[K
[01m[Kmain.cc:36:1:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid outSizes(std::ostream&)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
 [01;35m[KoutSizes[m[K(std::ostream& out) {
 [01;35m[K^~~~~~~~[m[K
g++ point.o main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main point.o main.o; do echo $t >>.gitignore; done
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ make -f ../Makefile [8Pvim main.cc[C[8@make -f ../Makefile[C[8Pvim main.cc[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main.cc" 76L, 1723C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[32mstatic[m [32mconst[m Point points[] = {
  Point([31m0[m, [31m0[m), Point([31m3[m, [31m4[m), Point([31m1[m, [31m1[m), Point([31m4[m, [31m5[m),
};
[34m//use standard idiom to figure out number of elements in array[m
[32mstatic[m [32mconstexpr[m [32mauto[m nPoints = [38;5;130msizeof[m(points)/[38;5;130msizeof[m(points[[31m0[m]);

[32mstatic[m [32mvoid[m
outSizes(std::ostream& out) {
  out << [31m"sizeof(double) = "[m << [38;5;130msizeof[m([32mdouble[m) << std::endl;
  out << [31m"sizeof(Point) = "[m << [38;5;130msizeof[m(Point) << std::endl;
}

[34m/** output pair-wise distance between all points in points[] to out. */[m
[32mstatic[m [32mvoid[m
outDistances(std::ostream& out)
{
  [38;5;130mfor[m ([32mauto[m i = [31m0u[m; i < nPoints - [31m1[m; i++) {
    Point pi = points[i];
    [38;5;130mfor[m ([32mauto[m j = i + [31m1[m; j < nPoints; j++) {[20;7HPoint pj = points[j];[21;7Hout << [31m"distance from "[m << pi.toString()[22;11H<< [31m" to "[m << pj.toString()[23;11H<< [31m" is "[m << pi.distance(pj)[24;11H<< std::endl;
    }
  }
}

[32mint[m main() {

  [34m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [34m//so if we wanted to output to a file, the code for the functions
[m  [34m//would not need to change (the code in this function would change).

[m  [34m//std::ostream& out = std::cout;

[m  [34m//outDistances(out); out << std::endl;

[m  [34m//outSizes(out);[m
  [32munsigned[m [32mint[m size = nPoints;
  [38;5;130mif[m(nPoints % [31m2[m != [31m0[m)[42;11Hsize = nPoints - [31m1[m;
  [38;5;130mfor[m([32mint[m i = [31m0[m; i < size - [31m1[m; i += [31m2[m)
  {[45;11HLine l(points[i], points[i+[31m1[m]);[46;11Hcout << l.toString[106m()[m << [31m" "[m << l.length() << endl;
  }
}[49;77H74,23-30      Bot]2;main.cc (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.cc[46;30H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;121mstatic[m [38;5;121mconst[m Point points[] = {
  Point([95m0[m, [95m0[m), Point([95m3[m, [95m4[m), Point([95m1[m, [95m1[m), Point([95m4[m, [95m5[m),
};
[96m//use standard idiom to figure out number of elements in array[m
[38;5;121mstatic[m [38;5;121mconstexpr[m [38;5;121mauto[m nPoints = [93msizeof[m(points)/[93msizeof[m(points[[95m0[m]);

[38;5;121mstatic[m [38;5;121mvoid[m
outSizes(std::ostream& out) {
  out << [95m"sizeof(double) = "[m << [93msizeof[m([38;5;121mdouble[m) << std::endl;
  out << [95m"sizeof(Point) = "[m << [93msizeof[m(Point) << std::endl;
}

[96m/** output pair-wise distance between all points in points[] to out. */[m
[38;5;121mstatic[m [38;5;121mvoid[m
outDistances(std::ostream& out)
{
  [93mfor[m ([38;5;121mauto[m i = [95m0u[m; i < nPoints - [95m1[m; i++) {
    Point pi = points[i];
    [93mfor[m ([38;5;121mauto[m j = i + [95m1[m; j < nPoints; j++) {[20;7HPoint pj = points[j];[21;7Hout << [95m"distance from "[m << pi.toString()[22;11H<< [95m" to "[m << pj.toString()[23;11H<< [95m" is "[m << pi.distance(pj)[24;11H<< std::endl;
    }
  }
}

[38;5;121mint[m main() {

  [96m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [96m//so if we wanted to output to a file, the code for the functions
[m  [96m//would not need to change (the code in this function would change).

[m  [96m//std::ostream& out = std::cout;

[m  [96m//outDistances(out); out << std::endl;

[m  [96m//outSizes(out);[m
  [38;5;121munsigned[m [38;5;121mint[m size = nPoints;
  [93mif[m(nPoints % [95m2[m != [95m0[m)[42;11Hsize = nPoints - [95m1[m;
  [93mfor[m([38;5;121mint[m i = [95m0[m; i < size - [95m1[m; i += [95m2[m)
  {[45;11HLine l(points[i], points[i+[95m1[m]);[46;11Hcout << l.toString[46m()[m << [95m" "[m << l.length() << endl;
  }
}[49;77H74,23-30      Bot"main.cc" 76L, 1723C[46;30H[?25h[?25l[49;67H~@k[46;30H[49;67H   [45;30H[46;29H()[49;78H3[45;30H[?25h[?25l[49;67H~@k[45;30H[49;67H   [44;3H[46m{[47;3H}[m[49;78H2,3    [44;3H[?25h[?25l[49;67H~@k[44;3H[49;67H   [43;30H
  {[47;3H}[49;78H1,30[43;30H[?25h[?25l[49;67H~@k[43;30H[49;67H   [43;29H[49;80H29[43;29H[?25h[?25l[49;67H~@k[43;29H[49;67H   [43;28H[49;81H8[43;28H[?25h[?25l[49;67H~@k[43;28H[49;67H   [43;27H[49;81H7[43;27H[?25h[?25l[49;67H~@k[43;27H[49;67H   [43;26H[49;81H6[43;26H[?25h[?25l[49;67H~@k[43;26H[49;67H   [43;25H[49;81H5[43;25H[?25h[?25l[49;67H~@k[43;25H[49;67H   [43;24H[49;81H4[43;24H[?25h[?25l[49;67H~@k[43;24H[49;67H   [43;23H[49;81H3[43;23H[?25h[?25l[49;67H~@k[43;23H[49;67H   [43;22H[49;81H2[43;22H[?25h[?25l[49;67H~@k[43;22H[49;67H   [43;21H[49;81H1[43;21H[?25h[?25l[49;67H~@k[43;21H[49;67H   [43;20H[49;81H0[43;20H[?25h[?25l[49;67H~@k[43;20H[49;67H   [43;19H[49;80H19[43;19H[?25h[?25l[49;67H~@k[43;19H[49;67H   [43;18H[49;81H8[43;18H[?25h[?25l[49;67H~@k[43;18H[49;67H   [43;17H[49;81H7[43;17H[?25h[?25l[49;67H~@k[43;17H[49;67H   [43;16H[49;81H6[43;16H[?25h[?25l[49;67H~@k[43;16H[49;67H   [43;15H[49;81H5[43;15H[?25h[?25l[49;67H~@k[43;15H[49;67H   [43;14H[49;81H4[43;14H[?25h[?25l[49;67H~@k[43;14H[49;67H   [43;13H[49;81H3[43;13H[?25h[?25l[49;67H~@k[43;13H[49;67H   [43;12H[49;81H2[43;12H[?25h[?25l[49;67H~@k[43;12H[49;67H   [43;11H[49;81H1[43;11H[?25h[?25l[49;67H~@k[43;11H[49;67H   [43;10H[49;81H0[43;10H[?25h[?25l[49;67H~@k[43;10H[49;67H   [43;9H[49;80H9 [43;9H[?25h[?25l[49;67H~@k[43;9H[49;67H   [43;8H[49;80H8[43;8H[?25h[?25l[49;67H~@k[43;8H[49;67H   [43;7H[49;80H7[43;7H[?25h[?25l[49;67Hi[43;7H[49;67H [43;7H[49;1H[1m-- INSERT --[m[49;13H[K[49;77H71,7[10CBot[43;7H[?25h[?25luint i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[49;80H8]2;main.cc + (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.cc[43;8H[?25h[?25lnint i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[49;80H9[43;9H[?25h[?25lsint i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[49;80H10[43;10H[?25h[?25liint i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[49;81H1[43;11H[?25h[?25liint i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[49;81H2[43;12H[?25h[?25lgint i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[49;81H3[43;13H[?25h[?25lnint i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[49;81H4[43;14H[?25h[?25lint i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[43;45H[K[49;81H3[43;13H[?25h[?25lint i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[43;44H[K[49;81H2[43;12H[?25h[?25lnt i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[43;43H[K[49;81H1[43;11H[?25h[?25lgint i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[49;81H2[43;12H[?25h[?25lnint i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[49;81H3[43;13H[?25h[?25leint i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[49;81H4[43;14H[?25h[?25ldint i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[49;81H5[43;15H[?25h[?25l[43;7H[38;5;121munsigned[m [38;5;121mint[m i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[49;81H6[43;16H[?25h[49;1H[K[43;15H[?25l[49;67H^[[43;15H[49;67H  [43;16H[49;77H71,15[9CBot[43;15H[?25h[?25l[49;67HZ[43;15H[?25h[?25l[49;68HZ[43;15H[?1006l[?1002l[?2004l[49;1H"main.cc"[49;67H[K[49;11H76L, 1732C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ vim main.cc [8@make -f ../Makefile[C
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
[01m[Kmain.cc:43:1:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid outDistances(std::ostream&)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
 [01;35m[KoutDistances[m[K(std::ostream& out)
 [01;35m[K^~~~~~~~~~~~[m[K
[01m[Kmain.cc:36:1:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid outSizes(std::ostream&)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
 [01;35m[KoutSizes[m[K(std::ostream& out) {
 [01;35m[K^~~~~~~~[m[K
g++ point.o main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main point.o main.o; do echo $t >>.gitignore; done
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ /.m
bash: /.m: No such file or directory
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ./
.deps/ main   
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ./
.deps/ main   
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ./
.deps/ main   
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ./main 
(0, 0) -- (3, 4) 5
(1, 1) -- (4, 5) 5
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ./main [4P/.mmake -f ../Makefile [8Pvim main.cc[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main.cc" 76L, 1732C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[32mstatic[m [32mconst[m Point points[] = {
  Point([31m0[m, [31m0[m), Point([31m3[m, [31m4[m), Point([31m1[m, [31m1[m), Point([31m4[m, [31m5[m),
};
[34m//use standard idiom to figure out number of elements in array[m
[32mstatic[m [32mconstexpr[m [32mauto[m nPoints = [38;5;130msizeof[m(points)/[38;5;130msizeof[m(points[[31m0[m]);

[32mstatic[m [32mvoid[m
outSizes(std::ostream& out) {
  out << [31m"sizeof(double) = "[m << [38;5;130msizeof[m([32mdouble[m) << std::endl;
  out << [31m"sizeof(Point) = "[m << [38;5;130msizeof[m(Point) << std::endl;
}

[34m/** output pair-wise distance between all points in points[] to out. */[m
[32mstatic[m [32mvoid[m
outDistances(std::ostream& out)
{
  [38;5;130mfor[m ([32mauto[m i = [31m0u[m; i < nPoints - [31m1[m; i++) {
    Point pi = points[i];
    [38;5;130mfor[m ([32mauto[m j = i + [31m1[m; j < nPoints; j++) {[20;7HPoint pj = points[j];[21;7Hout << [31m"distance from "[m << pi.toString()[22;11H<< [31m" to "[m << pj.toString()[23;11H<< [31m" is "[m << pi.distance(pj)[24;11H<< std::endl;
    }
  }
}

[32mint[m main() {

  [34m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [34m//so if we wanted to output to a file, the code for the functions
[m  [34m//would not need to change (the code in this function would change).

[m  [34m//std::ostream& out = std::cout;

[m  [34m//outDistances(out); out << std::endl;

[m  [34m//outSizes(out);[m
  [32munsigned[m [32mint[m size = nPoints;
  [38;5;130mif[m(nPoints % [31m2[m != [31m0[m)[42;11Hsize = nPoints - [31m1[m;
  [38;5;130mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < size - [31m1[m; i += [31m2[m)
  {[45;11HLine l(points[i], points[i+[31m1[m]);[46;11Hcout << l.toString() << [31m" "[m << l.length() << endl;
  }
}[49;77H71,15[9CBot]2;main.cc (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.cc[43;15H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;121mstatic[m [38;5;121mconst[m Point points[] = {
  Point([95m0[m, [95m0[m), Point([95m3[m, [95m4[m), Point([95m1[m, [95m1[m), Point([95m4[m, [95m5[m),
};
[96m//use standard idiom to figure out number of elements in array[m
[38;5;121mstatic[m [38;5;121mconstexpr[m [38;5;121mauto[m nPoints = [93msizeof[m(points)/[93msizeof[m(points[[95m0[m]);

[38;5;121mstatic[m [38;5;121mvoid[m
outSizes(std::ostream& out) {
  out << [95m"sizeof(double) = "[m << [93msizeof[m([38;5;121mdouble[m) << std::endl;
  out << [95m"sizeof(Point) = "[m << [93msizeof[m(Point) << std::endl;
}

[96m/** output pair-wise distance between all points in points[] to out. */[m
[38;5;121mstatic[m [38;5;121mvoid[m
outDistances(std::ostream& out)
{
  [93mfor[m ([38;5;121mauto[m i = [95m0u[m; i < nPoints - [95m1[m; i++) {
    Point pi = points[i];
    [93mfor[m ([38;5;121mauto[m j = i + [95m1[m; j < nPoints; j++) {[20;7HPoint pj = points[j];[21;7Hout << [95m"distance from "[m << pi.toString()[22;11H<< [95m" to "[m << pj.toString()[23;11H<< [95m" is "[m << pi.distance(pj)[24;11H<< std::endl;
    }
  }
}

[38;5;121mint[m main() {

  [96m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [96m//so if we wanted to output to a file, the code for the functions
[m  [96m//would not need to change (the code in this function would change).

[m  [96m//std::ostream& out = std::cout;

[m  [96m//outDistances(out); out << std::endl;

[m  [96m//outSizes(out);[m
  [38;5;121munsigned[m [38;5;121mint[m size = nPoints;
  [93mif[m(nPoints % [95m2[m != [95m0[m)[42;11Hsize = nPoints - [95m1[m;
  [93mfor[m([38;5;121munsigned[m [38;5;121mint[m i = [95m0[m; i < size - [95m1[m; i += [95m2[m)
  {[45;11HLine l(points[i], points[i+[95m1[m]);[46;11Hcout << l.toString() << [95m" "[m << l.length() << endl;
  }
}[49;77H71,15[9CBot"main.cc" 76L, 1732C[43;15H[?25h[?25l[49;67H~@k[43;15H[49;67H   [44;3H[46m{[47;3H}[m[49;78H2,3 [44;3H[?25h[?25l[49;67H~@k[44;3H[49;67H   [45;8H[44;3H{[47;3H}[49;78H3,1-8[45;8H[?25h[?25l[49;67H~@k[45;8H[49;67H   [45;9H[49;80H2-9[45;9H[?25h[?25l[49;67H~@k[45;9H[49;67H   [46;9H[49;78H4[46;9H[?25h[?25l[49;67H~@k[46;9H[49;67H   [46;10H[49;80H3-10[46;10H[?25h[?25l[49;67H~@k[46;10H[49;67H   [46;11H[49;80H4-11[46;11H[?25h[?25l[49;67H~@k[46;11H[49;67H   [46;12H[49;80H5-12[46;12H[?25h[?25l[49;67H~@k[46;12H[49;67H   [46;13H[49;80H6-13[46;13H[?25h[?25l[49;67H~@k[46;13H[49;67H   [46;14H[49;80H7-14[46;14H[?25h[?25l[49;67H~@k[46;14H[49;67H   [46;15H[49;80H8-15[46;15H[?25h[?25l[49;67H~@k[46;15H[49;67H   [46;16H[49;80H9-16[46;16H[?25h[?25l[49;67H~@k[46;16H[49;67H   [46;17H[49;80H10-17[46;17H[?25h[?25l[49;67H~@k[46;17H[49;67H   [46;18H[49;81H1-18[46;18H[?25h[?25l[49;67H~@k[46;18H[49;67H   [46;19H[49;81H2-19[46;19H[?25h[?25l[49;67H~@k[46;19H[49;67H   [46;20H[49;81H3-20[46;20H[?25h[?25l[49;67H~@k[46;20H[49;67H   [46;21H[49;81H4-21[46;21H[?25h[?25l[49;67H~@k[46;21H[49;67H   [46;22H[49;81H5-22[46;22H[?25h[?25l[49;67H~@k[46;22H[49;67H   [46;23H[49;81H6-23[46;23H[?25h[?25l[49;67H~@k[46;23H[49;67H   [46;24H[49;81H7-24[46;24H[?25h[?25l[49;67H~@k[46;24H[49;67H   [46;25H[49;81H8-25[46;25H[?25h[?25l[49;67H~@k[46;25H[49;67H   [46;26H[49;81H9-26[46;26H[?25h[?25l[49;67H~@k[46;26H[49;67H   [46;27H[49;80H20-27[46;27H[?25h[?25l[49;67H~@k[46;27H[49;67H   [46;28H[49;81H1-28[46;28H[?25h[?25l[49;67H~@k[46;28H[49;67H   [46;29H[46m()[m[49;81H2-29[46;29H[?25h[?25l[49;67H~@k[46;29H[49;67H   [46;30H[49;81H3-30[46;30H[?25h[?25l[49;67H~@k[46;30H[49;67H   [46;31H()[49;81H4-31[46;31H[?25h[?25l[49;67H~@k[46;31H[49;67H   [46;32H[49;81H5-32[46;32H[?25h[?25l[49;67H~@k[46;32H[49;67H   [46;33H[49;81H6-33[46;33H[?25h[?25l[49;67H~@k[46;33H[49;67H   [46;34H[49;81H7-34[46;34H[?25h[?25l[49;67H~@k[46;34H[49;67H   [46;35H[49;81H8-35[46;35H[?25h[?25l[49;67H~@k[46;35H[49;67H   [46;36H[49;81H9-36[46;36H[?25h[?25l[49;67H~@k[46;36H[49;67H   [46;37H[49;80H30-37[46;37H[?25h[?25l[49;67H~@k[46;37H[49;67H   [46;38H[49;81H1-38[46;38H[?25h[?25l[49;67H~@k[46;38H[49;67H   [46;39H[49;81H2-39[46;39H[?25h[?25l[49;67H~@k[46;39H[49;67H   [46;40H[49;81H3-40[46;40H[?25h[?25l[49;67H~@k[46;40H[49;67H   [46;41H[49;81H4-41[46;41H[?25h[?25l[49;67Hi[46;41H[49;67H [46;41H


[1m-- INSERT --[m[49;13H[K[49;77H74,34-41      Bot[46;41H[?25h[?25l[49;81H3-40[46;40H[?25h[?25l[49;81H2-39[46;39H[?25h[?25l[49;81H1-38[46;38H[?25h[?25l[49;81H0-37[46;37H[?25h[?25l[95ml"[m << l.length() << endl;[49;81H1-38]2;main.cc + (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.cc[46;38H[?25h[?25l[95me"[m << l.length() << endl;[49;81H2-39[46;39H[?25h[?25l[95mn"[m << l.length() << endl;[49;81H3-40[46;40H[?25h[?25l[95mg"[m << l.length() << endl;[49;81H4-41[46;41H[?25h[?25l[95mt"[m << l.length() << endl;[49;81H5-42[46;42H[?25h[?25l[95mh"[m << l.length() << endl;[49;81H6-43[46;43H[?25h[?25l[95m "[m << l.length() << endl;[49;81H7-44[46;44H[?25h[?25l[95m="[m << l.length() << endl;[49;81H8-45[46;45H[?25h[?25l[95m "[m << l.length() << endl;[49;81H9-46[46;46H[?25h[49;1H[K[46;45H[?25l[49;67H^[[46;45H[49;67H  [46;46H[49;77H74,38-45      Bot[46;45H[?25h[?25l[49;67HZ[46;45H[?25h[?25l[49;68HZ[46;45H[?1006l[?1002l[?2004l


"main.cc"[49;67H[K[49;11H76L, 1741C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ vim main.cc [5P./main[C[4P/.mmake -f ../Makefile 
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
[01m[Kmain.cc:43:1:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid outDistances(std::ostream&)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
 [01;35m[KoutDistances[m[K(std::ostream& out)
 [01;35m[K^~~~~~~~~~~~[m[K
[01m[Kmain.cc:36:1:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid outSizes(std::ostream&)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
 [01;35m[KoutSizes[m[K(std::ostream& out) {
 [01;35m[K^~~~~~~~[m[K
g++ point.o main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main point.o main.o; do echo $t >>.gitignore; done
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ make -f ../Makefile [8Pvim main.cc[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main.cc" 76L, 1741C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[32mstatic[m [32mconst[m Point points[] = {
  Point([31m0[m, [31m0[m), Point([31m3[m, [31m4[m), Point([31m1[m, [31m1[m), Point([31m4[m, [31m5[m),
};
[34m//use standard idiom to figure out number of elements in array[m
[32mstatic[m [32mconstexpr[m [32mauto[m nPoints = [38;5;130msizeof[m(points)/[38;5;130msizeof[m(points[[31m0[m]);

[32mstatic[m [32mvoid[m
outSizes(std::ostream& out) {
  out << [31m"sizeof(double) = "[m << [38;5;130msizeof[m([32mdouble[m) << std::endl;
  out << [31m"sizeof(Point) = "[m << [38;5;130msizeof[m(Point) << std::endl;
}

[34m/** output pair-wise distance between all points in points[] to out. */[m
[32mstatic[m [32mvoid[m
outDistances(std::ostream& out)
{
  [38;5;130mfor[m ([32mauto[m i = [31m0u[m; i < nPoints - [31m1[m; i++) {
    Point pi = points[i];
    [38;5;130mfor[m ([32mauto[m j = i + [31m1[m; j < nPoints; j++) {[20;7HPoint pj = points[j];[21;7Hout << [31m"distance from "[m << pi.toString()[22;11H<< [31m" to "[m << pj.toString()[23;11H<< [31m" is "[m << pi.distance(pj)[24;11H<< std::endl;
    }
  }
}

[32mint[m main() {

  [34m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [34m//so if we wanted to output to a file, the code for the functions
[m  [34m//would not need to change (the code in this function would change).

[m  [34m//std::ostream& out = std::cout;

[m  [34m//outDistances(out); out << std::endl;

[m  [34m//outSizes(out);[m
  [32munsigned[m [32mint[m size = nPoints;
  [38;5;130mif[m(nPoints % [31m2[m != [31m0[m)[42;11Hsize = nPoints - [31m1[m;
  [38;5;130mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < size - [31m1[m; i += [31m2[m)
  {[45;11HLine l(points[i], points[i+[31m1[m]);[46;11Hcout << l.toString() << [31m" length = "[m << l.length() << endl;
  }
}[49;77H74,38-45      Bot]2;main.cc (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.cc[46;45H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;121mstatic[m [38;5;121mconst[m Point points[] = {
  Point([95m0[m, [95m0[m), Point([95m3[m, [95m4[m), Point([95m1[m, [95m1[m), Point([95m4[m, [95m5[m),
};
[96m//use standard idiom to figure out number of elements in array[m
[38;5;121mstatic[m [38;5;121mconstexpr[m [38;5;121mauto[m nPoints = [93msizeof[m(points)/[93msizeof[m(points[[95m0[m]);

[38;5;121mstatic[m [38;5;121mvoid[m
outSizes(std::ostream& out) {
  out << [95m"sizeof(double) = "[m << [93msizeof[m([38;5;121mdouble[m) << std::endl;
  out << [95m"sizeof(Point) = "[m << [93msizeof[m(Point) << std::endl;
}

[96m/** output pair-wise distance between all points in points[] to out. */[m
[38;5;121mstatic[m [38;5;121mvoid[m
outDistances(std::ostream& out)
{
  [93mfor[m ([38;5;121mauto[m i = [95m0u[m; i < nPoints - [95m1[m; i++) {
    Point pi = points[i];
    [93mfor[m ([38;5;121mauto[m j = i + [95m1[m; j < nPoints; j++) {[20;7HPoint pj = points[j];[21;7Hout << [95m"distance from "[m << pi.toString()[22;11H<< [95m" to "[m << pj.toString()[23;11H<< [95m" is "[m << pi.distance(pj)[24;11H<< std::endl;
    }
  }
}

[38;5;121mint[m main() {

  [96m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [96m//so if we wanted to output to a file, the code for the functions
[m  [96m//would not need to change (the code in this function would change).

[m  [96m//std::ostream& out = std::cout;

[m  [96m//outDistances(out); out << std::endl;

[m  [96m//outSizes(out);[m
  [38;5;121munsigned[m [38;5;121mint[m size = nPoints;
  [93mif[m(nPoints % [95m2[m != [95m0[m)[42;11Hsize = nPoints - [95m1[m;
  [93mfor[m([38;5;121munsigned[m [38;5;121mint[m i = [95m0[m; i < size - [95m1[m; i += [95m2[m)
  {[45;11HLine l(points[i], points[i+[95m1[m]);[46;11Hcout << l.toString() << [95m" length = "[m << l.length() << endl;
  }
}[49;77H74,38-45      Bot"main.cc" 76L, 1741C[46;45H[?25h[?25l[49;67HZ[46;45H[?25h[?25l[49;68HZ[46;45H


[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ vim main.cc [8@make -f ../Makefile[C[8Pvim main.cc[C[8@make -f ../Makefile[C
make: Nothing to be done for 'all'.
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ make -f ../Makefile [8Pvim main.cc[C[8@make -f ../Makefile[C[8Pvim main.cc[C[5P./main[C
(0, 0) -- (3, 4) length = 5
(1, 1) -- (4, 5) length = 5
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ./main [13@make -f ../Makefile[C[8Pvim main.cc[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main.cc" 76L, 1741C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[32mstatic[m [32mconst[m Point points[] = {
  Point([31m0[m, [31m0[m), Point([31m3[m, [31m4[m), Point([31m1[m, [31m1[m), Point([31m4[m, [31m5[m),
};
[34m//use standard idiom to figure out number of elements in array[m
[32mstatic[m [32mconstexpr[m [32mauto[m nPoints = [38;5;130msizeof[m(points)/[38;5;130msizeof[m(points[[31m0[m]);

[32mstatic[m [32mvoid[m
outSizes(std::ostream& out) {
  out << [31m"sizeof(double) = "[m << [38;5;130msizeof[m([32mdouble[m) << std::endl;
  out << [31m"sizeof(Point) = "[m << [38;5;130msizeof[m(Point) << std::endl;
}

[34m/** output pair-wise distance between all points in points[] to out. */[m
[32mstatic[m [32mvoid[m
outDistances(std::ostream& out)
{
  [38;5;130mfor[m ([32mauto[m i = [31m0u[m; i < nPoints - [31m1[m; i++) {
    Point pi = points[i];
    [38;5;130mfor[m ([32mauto[m j = i + [31m1[m; j < nPoints; j++) {[20;7HPoint pj = points[j];[21;7Hout << [31m"distance from "[m << pi.toString()[22;11H<< [31m" to "[m << pj.toString()[23;11H<< [31m" is "[m << pi.distance(pj)[24;11H<< std::endl;
    }
  }
}

[32mint[m main() {

  [34m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [34m//so if we wanted to output to a file, the code for the functions
[m  [34m//would not need to change (the code in this function would change).

[m  [34m//std::ostream& out = std::cout;

[m  [34m//outDistances(out); out << std::endl;

[m  [34m//outSizes(out);[m
  [32munsigned[m [32mint[m size = nPoints;
  [38;5;130mif[m(nPoints % [31m2[m != [31m0[m)[42;11Hsize = nPoints - [31m1[m;
  [38;5;130mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < size - [31m1[m; i += [31m2[m)
  {[45;11HLine l(points[i], points[i+[31m1[m]);[46;11Hcout << l.toString() << [31m" length = "[m << l.length() << endl;
  }
}[49;77H74,38-45      Bot]2;main.cc (~/projects/i240b/submit/lab4/exercises/1-point) - VIM]1;main.cc[46;45H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;121mstatic[m [38;5;121mconst[m Point points[] = {
  Point([95m0[m, [95m0[m), Point([95m3[m, [95m4[m), Point([95m1[m, [95m1[m), Point([95m4[m, [95m5[m),
};
[96m//use standard idiom to figure out number of elements in array[m
[38;5;121mstatic[m [38;5;121mconstexpr[m [38;5;121mauto[m nPoints = [93msizeof[m(points)/[93msizeof[m(points[[95m0[m]);

[38;5;121mstatic[m [38;5;121mvoid[m
outSizes(std::ostream& out) {
  out << [95m"sizeof(double) = "[m << [93msizeof[m([38;5;121mdouble[m) << std::endl;
  out << [95m"sizeof(Point) = "[m << [93msizeof[m(Point) << std::endl;
}

[96m/** output pair-wise distance between all points in points[] to out. */[m
[38;5;121mstatic[m [38;5;121mvoid[m
outDistances(std::ostream& out)
{
  [93mfor[m ([38;5;121mauto[m i = [95m0u[m; i < nPoints - [95m1[m; i++) {
    Point pi = points[i];
    [93mfor[m ([38;5;121mauto[m j = i + [95m1[m; j < nPoints; j++) {[20;7HPoint pj = points[j];[21;7Hout << [95m"distance from "[m << pi.toString()[22;11H<< [95m" to "[m << pj.toString()[23;11H<< [95m" is "[m << pi.distance(pj)[24;11H<< std::endl;
    }
  }
}

[38;5;121mint[m main() {

  [96m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [96m//so if we wanted to output to a file, the code for the functions
[m  [96m//would not need to change (the code in this function would change).

[m  [96m//std::ostream& out = std::cout;

[m  [96m//outDistances(out); out << std::endl;

[m  [96m//outSizes(out);[m
  [38;5;121munsigned[m [38;5;121mint[m size = nPoints;
  [93mif[m(nPoints % [95m2[m != [95m0[m)[42;11Hsize = nPoints - [95m1[m;
  [93mfor[m([38;5;121munsigned[m [38;5;121mint[m i = [95m0[m; i < size - [95m1[m; i += [95m2[m)
  {[45;11HLine l(points[i], points[i+[95m1[m]);[46;11Hcout << l.toString() << [95m" length = "[m << l.length() << endl;
  }
}[49;77H74,38-45      Bot"main.cc" 76L, 1741C[46;45H[?25h[?25l[49;67H^U[46;45H[49;67H  [43;5H[1;48r[1;1H[24L[1;49r[2;1H[38;5;121mclass[m Line
{[4;9H[93mpublic[m:[5;17HPoint p1, p2;[7;17HLine(Point p, Point pp) : p1(p), p2(pp) {}[8;17H[38;5;121mdouble[m length();[9;17Hstring toString();
};

[38;5;121mdouble[m Line::length()
{[14;9H[93mreturn[m p1.distance(p2);
}

string Line::toString()
{[19;9Hstring str = [95m""[m;[20;9Hstr = p1.toString() + [95m" -- "[m + p2.toString();[21;9H[93mreturn[m str;
}

[96m//declare an array of points[m[49;1H[K[49;77H47,5[10C14%[43;5H[?25h[?25l[49;67H^U[43;5H[49;67H  [23;9H[1;48r[1;1H[4L[1;49r[1;1H[38;5;81m#include [m[95m"point.hh"[m
[38;5;81m#include [m[95m<sstream>[m
[38;5;81m#include [m[95m<iostream>[m
[93musing[m [38;5;121mnamespace[m std;[49;77H[K[49;77H23,2-9[8CTop[23;9H[?25h[?25l[49;67H^U[23;9H[49;67H  [1;1H[49;77H1,1   [1;1H[?25h[?25l[49;67H^U[1;1H[49;67H  [1;1H[?25h[?25l[49;77H27,0-1[27;1H[?25h[?25l[49;67H2[26;2H
[48;5;242m [m[49;1H[1m-- VISUAL --[m[49;67H[K[49;67H2[26;2H[49;77H26,2[10CTop[26;2H[?25h[?25l[49;67H3[25;1H [48;5;242m       [m[93m[48;5;242mreturn[m[48;5;242m str; 
} [m[49;78H5,1[25;1H[?25h[?25l[?25h[?25l[49;67H4[24;1H [48;5;242m       str = p1.toString() + [m[95m[48;5;242m" -- "[m[48;5;242m + p2.toString(); 
 [m[49;78H4[24;1H[?25h[?25l[49;67H6[22;2H
[48;5;242m        string str = [m[95m[48;5;242m""[m[48;5;242m; 
 [m[49;78H2,2[22;2H[?25h[?25l[49;67H7[21;3Hr[48;5;242ming Line::toString() 
{ [m[49;78H1,3[21;3H[?25h[?25l[49;67H8[20;1H
[48;5;242mstr[m[49;78H0,0-1[20;1H[?25h[?25l[49;67H9[19;2H
[48;5;242m [m[49;77H19,2  [19;2H[?25h[?25l[49;67H10[18;1H [48;5;242m       [m[93m[48;5;242mreturn[m[48;5;242m p1.distance(p2); 
} [m[49;78H8,1[18;1H[?25h[?25l[49;68H1[17;1H[46m{[m[48;5;242m 
 [m[49;78H7[17;1H[?25h[?25l[49;68H4[14;1H[7;1H[46m{[14;1H}[m[48;5;242m; 
 [m
[38;5;121m[48;5;242mdouble[m[48;5;242m Line::length() 
{[m[49;78H4[14;1H[?25h[?25l[49;68H5[13;1H[7;1H{[13;2H[48;5;242m               string toString();       
}[m[49;78H3[13;1H[?25h[?25l[49;68H7[11;1H [48;5;242m               Line(Point p, Point pp) : p1(p), p2(pp) {} 
                [m[38;5;121m[48;5;242mdouble[m[48;5;242m length(); 
 [m[49;78H1[11;1H[?25h[?25l[49;68H8[10;1H
[48;5;242m [m[49;78H0,0-1[10;1H[?25h[?25l[49;68H9[9;1H [48;5;242m               Point p1, p2; 
 [m[49;77H9,1   [9;1H[?25h[?25l[49;67H20[8;1H [48;5;242m       [m[93m[48;5;242mpublic[m[48;5;242m: 
 [m[49;77H8[8;1H[?25h[?25l[49;68H1[7;1H[46m{[m[48;5;242m 
 [m[49;77H7[7;1H[?25h[?25l[49;68H3[5;1H
[38;5;121m[48;5;242mclass[m[48;5;242m Line 
{[m[49;77H5,0-1[5;1H[?25h[?25l[49;68H4[4;1H[1C[93m[48;5;242msing[m[48;5;242m [m[38;5;121m[48;5;242mnamespace[m[48;5;242m std; 
 [m[49;77H4,1  [4;1H[?25h[?25l[49;68H5[3;1H[1C[38;5;81m[48;5;242minclude [m[95m[48;5;242m<iostream>[m[48;5;242m [m
[93m[48;5;242mu[m[49;77H3[3;1H[?25h[?25l[49;68H6[2;1H[1C[38;5;81m[48;5;242minclude [m[95m[48;5;242m<sstream>[m[48;5;242m [m
[38;5;81m[48;5;242m#[m[49;77H2[2;1H[?25h[?25l[49;68H7[1;1H[1C[38;5;81m[48;5;242minclude [m[95m[48;5;242m"point.hh"[m[48;5;242m [m
[38;5;81m[48;5;242m#[m[49;77H1[1;1H[?25h[?25l[49;68H6[2;1H[1;2H[38;5;81minclude [m[95m"point.hh"[m[1;20H[K[2;1H[38;5;81m#[m[49;77H2[2;1H[?25h[?25l[49;68H5[3;1H[2;2H[38;5;81minclude [m[95m<sstream>[m[2;19H[K[3;1H[38;5;81m#[m[49;77H3[3;1H[?25h[?25l[49;68H4[4;1H[3;2H[38;5;81minclude [m[95m<iostream>[m[3;20H[K[4;1H[93mu[m[49;77H4[4;1H[?25h[?25l[49;68H3[5;1H[4;2H[93msing[m [38;5;121mnamespace[m std;[4;21H[K[5;1H[K[49;77H5,0-1[5;1H[?25h[?25l[?25h[?25l[49;67H  [26;1H[6;1H[38;5;121mclass[m Line[6;11H[K[7;1H{[7;2H[K[8;1H        [93mpublic[m:[8;16H[K[9;1H                Point p1, p2;[9;30H[K[10;1H[K[11;1H                Line(Point p, Point pp) : p1(p), p2(pp) {}[11;59H[K[12;1H                [38;5;121mdouble[m length();[12;33H[K[13;1H                string toString();      [13;41H[K[14;1H};[14;3H[K[15;1H[K[16;1H[38;5;121mdouble[m Line::length()[16;22H[K[17;1H{[17;2H[K[18;1H        [93mreturn[m p1.distance(p2);[18;32H[K[19;1H}[19;2H[K[20;1H[K[21;1Hstring Line::toString()[21;24H[K[22;1H[46m{[m[22;2H[K[23;1H        string str = [95m""[m;[23;25H[K[24;1H        str = p1.toString() + [95m" -- "[m + p2.toString();[24;54H[K[25;1H        [93mreturn[m str;[25;20H[K[26;1H[46m}[m[26;2H[K[27;1H[K[49;1H[K[49;77H26,1[10CTop[26;1H[?25h[?25l[49;67H^D[26;1H[49;67H  [26;11H[1;48r[1;1H[24M[1;49r[2;1H}[25;7Hout << [95m"distance from "[m << pi.toString()[26;11H<< [95m" to "[m << pj.toString()[27;11H<< [95m" is "[m << pi.distance(pj)[28;11H<< std::endl;
    }
  }
}

[38;5;121mint[m main() {

  [96m//instead of hardcoding std::cout in functions, we pass it as a param.
[m  [96m//so if we wanted to output to a file, the code for the functions
[m  [96m//would not need to change (the code in this function would change).

[m  [96m//std::ostream& out = std::cout;

[m  [96m//outDistances(out); out << std::endl;

[m  [96m//outSizes(out);[m
  [38;5;121munsigned[m [38;5;121mint[m size = nPoints;
  [93mif[m(nPoints % [95m2[m != [95m0[m)[46;11Hsize = nPoints - [95m1[m;
  [93mfor[m([38;5;121munsigned[m [38;5;121mint[m i = [95m0[m; i < size - [95m1[m; i += [95m2[m)
  {[49;77H[K[49;77H50,4-11[7C85%[26;11H[?25h[?25l[49;67H^D[26;11H[49;67H  [46;11H[1;48r[1;1H[4M[1;49r[45;11HLine l(points[i], points[i+[95m1[m]);[46;11Hcout << l.toString() << [95m" length = "[m << l.length() << endl;
  }
}[49;77H[K[49;77H74,4-11[7CBot[46;11H[?25h[?25l[49;67H^D[46;11H[49;67H  [48;1H[29;12H[46m{[48;1H}[m[49;78H6,1   [48;1H[?25h[?25l[49;67H28[21;19H[1C[95m[48;5;242mnce from "[m[48;5;242m << pi.toString() 
          << [m[95m[48;5;242m" to "[m[48;5;242m << pj.toString() 
          << [m[95m[48;5;242m" is "[m[48;5;242m << pi.distance(pj) 
          << std::endl; 
    } 
  } 
} 
 [m
[38;5;121m[48;5;242mint[m[48;5;242m main() { 
 
  [m[96m[48;5;242m//instead of hardcoding std::cout in functions, we pass it as a param.[m[48;5;242m 
  [m[96m[48;5;242m//so if we wanted to output to a file, the code for the functions[m[48;5;242m 
  [m[96m[48;5;242m//would not need to change (the code in this function would change).[m[48;5;242m 
   
  [m[96m[48;5;242m//std::ostream& out = std::cout;[m[48;5;242m 
 
  [m[96m[48;5;242m//outDistances(out); out << std::endl;[m[48;5;242m 
 
  [m[96m[48;5;242m//outSizes(out);[m[48;5;242m 
  [m[38;5;121m[48;5;242munsigned[m[48;5;242m [m[38;5;121m[48;5;242mint[m[48;5;242m size = nPoints; 
  [m[93m[48;5;242mif[m[48;5;242m(nPoints % [m[95m[48;5;242m2[m[48;5;242m != [m[95m[48;5;242m0[m[48;5;242m) 
          size = nPoints - [m[95m[48;5;242m1[m[48;5;242m; 
  [m[93m[48;5;242mfor[m[48;5;242m([m[38;5;121m[48;5;242munsigned[m[48;5;242m [m[38;5;121m[48;5;242mint[m[48;5;242m i = [m[95m[48;5;242m0[m[48;5;242m; i < size - [m[95m[48;5;242m1[m[48;5;242m; i += [m[95m[48;5;242m2[m[48;5;242m) 
  { 
          Line l(points[i], points[i+[m[95m[48;5;242m1[m[48;5;242m]); 
          cout << l.toString() << [m[95m[48;5;242m" length = "[m[48;5;242m << l.length() << endl; 
  } 
}[m
[1m-- VISUAL --[m[49;67H[K[49;67H28[21;19H[49;77H49,19[9CBot[21;19H[?25h[?25l[49;68H7[22;20H[21;20H[95mnce from "[m << pi.toString()[21;47H[K[22;1H          << [95m" to "[m [49;77H50,13-20[22;20H[?25h[?25l <[49;81H4-21[22;21H[?25h[?25l[?25h[?25l[49;67H  [28;1H[22;22H< pj.toString()[22;37H[K[23;1H          << [95m" is "[m << pi.distance(pj)[23;39H[K[24;1H          << std::endl;[24;24H[K[25;1H    }[25;6H[K[26;1H  }[26;4H[K[27;1H}[27;2H[K[28;1H[K[29;1H[38;5;121mint[m main() {[29;13H[K[30;1H[K[31;1H  [96m//instead of hardcoding std::cout in functions, we pass it as a param.[m[31;73H[K[32;1H  [96m//so if we wanted to output to a file, the code for the functions[m[32;68H[K[33;1H  [96m//would not need to change (the code in this function would change).[m[33;71H[K[34;1H  [34;3H[K[35;1H  [96m//std::ostream& out = std::cout;[m[35;35H[K[36;1H[K[37;1H  [96m//outDistances(out); out << std::endl;[m[37;41H[K[38;1H[K[39;1H  [96m//outSizes(out);[m[39;19H[K[40;1H  [38;5;121munsigned[m [38;5;121mint[m size = nPoints;[40;31H[K[41;1H  [93mif[m(nPoints % [95m2[m != [95m0[m)[41;23H[K[42;1H          size = nPoints - [95m1[m;[42;30H[K[43;1H  [93mfor[m([38;5;121munsigned[m [38;5;121mint[m i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[43;48H[K[44;1H  {[44;4H[K[45;1H          Line l(points[i], points[i+[95m1[m]);[45;42H[K[46;1H          cout << l.toString() << [95m" length = "[m << l.length() << endl;[46;70H[K[47;1H  }[47;4H[K[48;1H}[49;1H[K[49;77H56,0-1[8CBot[28;1H[?25h[?25l[29;12H[46m{[48;1H}[m[49;77H76,1  [48;1H[?25h[?25l[49;67H2[47;4H[29;12H{[48;1H[48;5;242m}[m
[1m-- VISUAL --[m[49;67H[K[47;4H[49;77H75,4[10CBot[47;4H[?25h[?25l[49;67H2[47;4H[?25h[?25l[49;67H3[46;1H [48;5;242m         cout << l.toString() << [m[95m[48;5;242m" length = "[m[48;5;242m << l.length() << endl; 
  } [m[49;78H4,1[46;1H[?25h[?25l[49;67H4[45;1H [48;5;242m         Line l(points[i], points[i+[m[95m[48;5;242m1[m[48;5;242m]); 
 [m[49;78H3[45;1H[?25h[?25l[?25h[?25l[49;67H5[44;4H
[48;5;242m [m[49;78H2,4[44;4H[?25h[?25l[49;67H6[43;5H[1C[48;5;242m([m[38;5;121m[48;5;242munsigned[m[48;5;242m [m[38;5;121m[48;5;242mint[m[48;5;242m i = [m[95m[48;5;242m0[m[48;5;242m; i < size - [m[95m[48;5;242m1[m[48;5;242m; i += [m[95m[48;5;242m2[m[48;5;242m) 
  { [m[49;78H1,5[43;5H[?25h[?25l[49;67H7[42;1H [48;5;242m         size = nPoints - [m[95m[48;5;242m1[m[48;5;242m; 
  [m[93m[48;5;242mfor[m[49;78H0,1[42;1H[?25h[?25l[49;67H8[41;4H[1C[48;5;242m(nPoints % [m[95m[48;5;242m2[m[48;5;242m != [m[95m[48;5;242m0[m[48;5;242m) 
 [m[49;77H69,4[41;4H[?25h[?25l[49;67H9[40;4H[1C[38;5;121m[48;5;242msigned[m[48;5;242m [m[38;5;121m[48;5;242mint[m[48;5;242m size = nPoints; 
  [m[93m[48;5;242mif[m[49;78H8[40;4H[?25h[?25l[1C[38;5;121m[48;5;242mn[m[49;80H3[40;3H[?25h[?25l[49;67H10[39;3H[1C[96m[48;5;242m/outSizes(out);[m[48;5;242m 
  [m[38;5;121m[48;5;242mu[m[49;78H7[39;3H[?25h[?25l[49;68H1[38;1H
[48;5;242m  [m[96m[48;5;242m/[m[49;78H6,0-1[38;1H[?25h[?25l[?25h[?25l[?25h[?25l[49;67H  [47;3H[39;1H  [96m//outSizes(out);[m[39;19H[K[40;1H  [38;5;121munsigned[m [38;5;121mint[m size = nPoints;[40;31H[K[41;1H  [93mif[m(nPoints % [95m2[m != [95m0[m)[41;23H[K[42;1H          size = nPoints - [95m1[m;[42;30H[K[43;1H  [93mfor[m([38;5;121munsigned[m [38;5;121mint[m i = [95m0[m; i < size - [95m1[m; i += [95m2[m)[43;48H[K[44;1H  [46m{[m[44;4H[K[45;1H          Line l(points[i], points[i+[95m1[m]);[45;42H[K[46;1H          cout << l.toString() << [95m" length = "[m << l.length() << endl;[46;70H[K[47;1H  [46m}[m[47;4H[K[48;1H}[49;1H[K[49;77H75,3[10CBot[47;3H[?25h[?25l[49;67HZ[47;3H[?25h[?25l[49;68HZ[47;3H

[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;67H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ls
main  main.cc  main.o  point.cc  point.hh  point.o
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ cd [K[K[Kmake [K[K[K[K[Kam[K[Kamk[K[K[Kmake clea [Kn -m[Kf ../Makefile 
rm -rf *.o *~ main .deps .gitignore
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ls
main.cc  point.cc  point.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ make ..[K[K0[K-f ../Makefile 
g++ -MT point.o -MMD -MP -MF .deps/point.d -g -Wall -std=c++17 -c point.cc
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
[01m[Kmain.cc:43:1:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid outDistances(std::ostream&)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
 [01;35m[KoutDistances[m[K(std::ostream& out)
 [01;35m[K^~~~~~~~~~~~[m[K
[01m[Kmain.cc:36:1:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid outSizes(std::ostream&)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
 [01;35m[KoutSizes[m[K(std::ostream& out) {
 [01;35m[K^~~~~~~~[m[K
g++ point.o main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main point.o main.o; do echo $t >>.gitignore; done
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ ./make[K[Kin 
(0, 0) -- (3, 4) length = 5
(1, 1) -- (4, 5) length = 5
tman1@g7-19:~/i240b/submit/lab4/exercises/1-point$ cd ..
tman1@g7-19:~/i240b/submit/lab4/exercises$ ls
1-point  2-shape  3-expr  Makefile
tman1@g7-19:~/i240b/submit/lab4/exercises$ c [K[Kcd 2-shape/
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ ls
main.cc  point.cc  point.hh  shapes.hh	tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cd [K[K[Kvu[K[Kcat tostring.
cat: tostring.: No such file or directory
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cat tostring.cc [K[K[Khh 
#ifndef TO_STRING_HH_
#define TO_STRING_HH_

#include <iostream>
#include <string>

/*
This specification file sets up a class `ToString` which should
contain a method called `toString()`.  This method is declared
virtual, which means that this method can be overridden by any classes
which inherit from `ToString`.  The `= 0` means that the `ToString`
class does not provide any implementation for the `toString()` method;
this makes `toString()` a *pure virtual method*.  Since there is no
implementation for `toString()` it is impossible to create an instance
of `ToString` and it is referred to as an *abstract class*.
*/

//Inheriting from this abstract class and defining a toString
//method allows a class to use << on an ostream.
struct ToString {
  virtual std::string toString() const = 0;
};

/*
This declaration provides the raison d'etre for the `ToString` class.
The declaration overloads the `<<` operator to allow output of
`ToString` objects.  The `tostring.cc` implementation file provides a
trivial implementation.
*/
std::ostream& operator<<(std::ostream& out, const ToString& obj);
  
#endif //ifndef TO_STRING_HH_
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ ls
main.cc  point.cc  point.hh  shapes.hh	tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cat [K[K[K[Kcat ti[Kostring.cc 
#include "tostring.hh"

#include <iostream>
#include <string>


std::ostream&
operator<<(std::ostream& out, const ToString& obj)
{
  return out << obj.toString();
}
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ ls
main.cc  point.cc  point.hh  shapes.hh	tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cat point.hh 
#ifndef POINT_HH_
#define POINT_HH_

#include <string>

#include "tostring.hh"

//similar to Point from previous exercise, but this definition extends
//ToString.
struct Point : public ToString {
  const double x, y;
  Point(double x=0, double y=0) : x(x), y(y) { }
  double distance(const Point& other) const;
  std::string toString() const;
};



#endif //ifndef POINT_HH_
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cat point.cc 
#include "point.hh"

#include <cmath>
#include <string>
#include <sstream>

double Point::distance(const Point& other) const {
  const auto dx = x - other.x;
  const auto dy = y - other.y;
  return sqrt(dx*dx + dy*dy);
}

std::string Point::toString() const {
  std::stringstream s;
  s << "(" << x << ", " << y << ")";
  return s.str();
}
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ ls
main.cc  point.cc  point.hh  shapes.hh	tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cd [K[K[Kcat shapes.hh 
#ifndef SHAPES_HH_
#define SHAPES_HH_

#include "point.hh"
#include "tostring.hh"

#define _USE_MATH_DEFINES 1
#include <cmath>
#include <string>
#include <sstream>

/* A Shape will implement a toString() as well as a perimeter()
 * method.  Since both methods are pure virtual, Shape is an
 * abstract class and cannot be instantiated.
 */
class Shape : public ToString {
public:
  virtual double perimeter() const = 0;
};

/* A Circle is a concrete Shape */
struct Circle : public Shape {
  const double radius;
  const Point origin;

  /** constructor: default will build unit circle */
  Circle(double radius=1, const Point& point=Point())
    : radius(radius), origin(point)
  {}

  /** return perimeter of this circle */
  double perimeter() const { return 2 * M_PI * radius; }

  /** return string representation of this circle */
  std::string toString() const {
    std::stringstream s;
    s << "Circle[" << origin << ", " << radius << "]";
    return s.str();
  }
  
};

/* A Rectangle is another concrete Shape */
struct Rectangle : public Shape {
  const Point topLeft, bottomRight;

  /** constructor: no default value for parameters */
  Rectangle(Point p1, Point p2) : topLeft(p1), bottomRight(p2) {}

  /** return perimeter of this rectangle */
  double perimeter() const {
    double width = bottomRight.x - topLeft.x;
    if (width < 0) width = -width;
    double height = bottomRight.y - topLeft.y;
    if (height < 0) height = -height;
    return 2 * (width + height);
  }

  /** return string representation of this rectangle */
  std::string toString() const {
    std::stringstream s;
    s << "Rectangle[" << topLeft.toString() << ", "
      << bottomRight.toString() << "]";
    return s.str();
  }
  
};
#endif //ifndef SHAPES_HH_
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ ls
main.cc  point.cc  point.hh  shapes.hh	tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cat main.cc 
#include "point.hh"
#include "shapes.hh"
#include "tostring.hh"

#include <iostream>

static const Circle circles[] = {
  Circle(1, Point()),
  Circle(2, Point(1, 1)),
};
static const Rectangle rectangles[] = {
  Rectangle(Point(1, 1), Point(4, 5)),
  Rectangle(Point(0, 0), Point(5, 4)),
};

static const Shape* shapes[] = {
  &circles[0], &rectangles[0], &circles[1], &rectangles[1],
};
constexpr auto nShapes = sizeof(shapes)/sizeof(shapes[0]);


static void
outSizes(std::ostream& out)
{
  out << "sizeof(double) = " << sizeof(double) << std::endl;
  out << "sizeof(Point) = " << sizeof(Point) << std::endl << std::endl;
  
  out << "sizeof(ToString) = " << sizeof(ToString) << std::endl;
  out << "sizeof(Shape) = " << sizeof(Shape) << std::endl;
  out << "sizeof(Circle) = " << sizeof(Circle) << std::endl;
  out << "sizeof(Rectangle) = " << sizeof(Rectangle) << std::endl;
}

static void
outShapes(std::ostream& out)
{
  for (auto i = 0u; i < nShapes; i++) {

    //pointed to Shape could be either a Circle or Rectangle.
    auto shapeP = shapes[i];

    //if shapeP points to a Circle, then call Circle::perimeter();
    //if shapeP points to a Rectangle, then call Rectangle::perimeter();
    //choosing the code at runtime is referred to as *runtime polymorphism*.
    auto perim = shapeP->perimeter();
    
    out << *shapeP << " perimeter: " << perim << std::endl;
  }
}

int main() {
  std::ostream& out = std::cout;
  outShapes(out); out << std::endl;
  outSizes(out); out << std::endl;
}
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ ls
main.cc  point.cc  point.hh  shapes.hh	tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cd [K[K[Kmake ..[K[K0f [K[K[K-f ../Makefile 
g++ -MT tostring.o -MMD -MP -MF .deps/tostring.d -g -Wall -std=c++17 -c tostring.cc
g++ -MT point.o -MMD -MP -MF .deps/point.d -g -Wall -std=c++17 -c point.cc
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ tostring.o point.o main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main tostring.o point.o main.o; do echo $t >>.gitignore; done
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ ./m[K
.deps/ main   
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ ./
.deps/ main   
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ ./main 
Circle[(0, 0), 1] perimeter: 6.28319
Rectangle[(1, 1), (4, 5)] perimeter: 14
Circle[(1, 1), 2] perimeter: 12.5664
Rectangle[(0, 0), (5, 4)] perimeter: 18

sizeof(double) = 8
sizeof(Point) = 24

sizeof(ToString) = 8
sizeof(Shape) = 8
sizeof(Circle) = 40
sizeof(Rectangle) = 56

tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ ls
main	 main.o    point.hh  shapes.hh	  tostring.hh
main.cc  point.cc  point.o   tostring.cc  tostring.o
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cat tostring.hh 
#ifndef TO_STRING_HH_
#define TO_STRING_HH_

#include <iostream>
#include <string>

/*
This specification file sets up a class `ToString` which should
contain a method called `toString()`.  This method is declared
virtual, which means that this method can be overridden by any classes
which inherit from `ToString`.  The `= 0` means that the `ToString`
class does not provide any implementation for the `toString()` method;
this makes `toString()` a *pure virtual method*.  Since there is no
implementation for `toString()` it is impossible to create an instance
of `ToString` and it is referred to as an *abstract class*.
*/

//Inheriting from this abstract class and defining a toString
//method allows a class to use << on an ostream.
struct ToString {
  virtual std::string toString() const = 0;
};

/*
This declaration provides the raison d'etre for the `ToString` class.
The declaration overloads the `<<` operator to allow output of
`ToString` objects.  The `tostring.cc` implementation file provides a
trivial implementation.
*/
std::ostream& operator<<(std::ostream& out, const ToString& obj);
  
#endif //ifndef TO_STRING_HH_
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cat main.cc 
#include "point.hh"
#include "shapes.hh"
#include "tostring.hh"

#include <iostream>

static const Circle circles[] = {
  Circle(1, Point()),
  Circle(2, Point(1, 1)),
};
static const Rectangle rectangles[] = {
  Rectangle(Point(1, 1), Point(4, 5)),
  Rectangle(Point(0, 0), Point(5, 4)),
};

static const Shape* shapes[] = {
  &circles[0], &rectangles[0], &circles[1], &rectangles[1],
};
constexpr auto nShapes = sizeof(shapes)/sizeof(shapes[0]);


static void
outSizes(std::ostream& out)
{
  out << "sizeof(double) = " << sizeof(double) << std::endl;
  out << "sizeof(Point) = " << sizeof(Point) << std::endl << std::endl;
  
  out << "sizeof(ToString) = " << sizeof(ToString) << std::endl;
  out << "sizeof(Shape) = " << sizeof(Shape) << std::endl;
  out << "sizeof(Circle) = " << sizeof(Circle) << std::endl;
  out << "sizeof(Rectangle) = " << sizeof(Rectangle) << std::endl;
}

static void
outShapes(std::ostream& out)
{
  for (auto i = 0u; i < nShapes; i++) {

    //pointed to Shape could be either a Circle or Rectangle.
    auto shapeP = shapes[i];

    //if shapeP points to a Circle, then call Circle::perimeter();
    //if shapeP points to a Rectangle, then call Rectangle::perimeter();
    //choosing the code at runtime is referred to as *runtime polymorphism*.
    auto perim = shapeP->perimeter();
    
    out << *shapeP << " perimeter: " << perim << std::endl;
  }
}

int main() {
  std::ostream& out = std::cout;
  outShapes(out); out << std::endl;
  outSizes(out); out << std::endl;
}
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cat shapes.hh 
#ifndef SHAPES_HH_
#define SHAPES_HH_

#include "point.hh"
#include "tostring.hh"

#define _USE_MATH_DEFINES 1
#include <cmath>
#include <string>
#include <sstream>

/* A Shape will implement a toString() as well as a perimeter()
 * method.  Since both methods are pure virtual, Shape is an
 * abstract class and cannot be instantiated.
 */
class Shape : public ToString {
public:
  virtual double perimeter() const = 0;
};

/* A Circle is a concrete Shape */
struct Circle : public Shape {
  const double radius;
  const Point origin;

  /** constructor: default will build unit circle */
  Circle(double radius=1, const Point& point=Point())
    : radius(radius), origin(point)
  {}

  /** return perimeter of this circle */
  double perimeter() const { return 2 * M_PI * radius; }

  /** return string representation of this circle */
  std::string toString() const {
    std::stringstream s;
    s << "Circle[" << origin << ", " << radius << "]";
    return s.str();
  }
  
};

/* A Rectangle is another concrete Shape */
struct Rectangle : public Shape {
  const Point topLeft, bottomRight;

  /** constructor: no default value for parameters */
  Rectangle(Point p1, Point p2) : topLeft(p1), bottomRight(p2) {}

  /** return perimeter of this rectangle */
  double perimeter() const {
    double width = bottomRight.x - topLeft.x;
    if (width < 0) width = -width;
    double height = bottomRight.y - topLeft.y;
    if (height < 0) height = -height;
    return 2 * (width + height);
  }

  /** return string representation of this rectangle */
  std::string toString() const {
    std::stringstream s;
    s << "Rectangle[" << topLeft.toString() << ", "
      << bottomRight.toString() << "]";
    return s.str();
  }
  
};
#endif //ifndef SHAPES_HH_
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ ./main 
Circle[(0, 0), 1] perimeter: 6.28319
Rectangle[(1, 1), (4, 5)] perimeter: 14
Circle[(1, 1), 2] perimeter: 12.5664
Rectangle[(0, 0), (5, 4)] perimeter: 18

sizeof(double) = 8
sizeof(Point) = 24

sizeof(ToString) = 8
sizeof(Shape) = 8
sizeof(Circle) = 40
sizeof(Rectangle) = 56

tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ d[Kls
main	 main.o    point.hh  shapes.hh	  tostring.hh
main.cc  point.cc  point.o   tostring.cc  tostring.o
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cat shapes.hh 
#ifndef SHAPES_HH_
#define SHAPES_HH_

#include "point.hh"
#include "tostring.hh"

#define _USE_MATH_DEFINES 1
#include <cmath>
#include <string>
#include <sstream>

/* A Shape will implement a toString() as well as a perimeter()
 * method.  Since both methods are pure virtual, Shape is an
 * abstract class and cannot be instantiated.
 */
class Shape : public ToString {
public:
  virtual double perimeter() const = 0;
};

/* A Circle is a concrete Shape */
struct Circle : public Shape {
  const double radius;
  const Point origin;

  /** constructor: default will build unit circle */
  Circle(double radius=1, const Point& point=Point())
    : radius(radius), origin(point)
  {}

  /** return perimeter of this circle */
  double perimeter() const { return 2 * M_PI * radius; }

  /** return string representation of this circle */
  std::string toString() const {
    std::stringstream s;
    s << "Circle[" << origin << ", " << radius << "]";
    return s.str();
  }
  
};

/* A Rectangle is another concrete Shape */
struct Rectangle : public Shape {
  const Point topLeft, bottomRight;

  /** constructor: no default value for parameters */
  Rectangle(Point p1, Point p2) : topLeft(p1), bottomRight(p2) {}

  /** return perimeter of this rectangle */
  double perimeter() const {
    double width = bottomRight.x - topLeft.x;
    if (width < 0) width = -width;
    double height = bottomRight.y - topLeft.y;
    if (height < 0) height = -height;
    return 2 * (width + height);
  }

  /** return string representation of this rectangle */
  std::string toString() const {
    std::stringstream s;
    s << "Rectangle[" << topLeft.toString() << ", "
      << bottomRight.toString() << "]";
    return s.str();
  }
  
};
#endif //ifndef SHAPES_HH_
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ a[Kls
main	 main.o    point.hh  shapes.hh	  tostring.hh
main.cc  point.cc  point.o   tostring.cc  tostring.o
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cat main.cc 
#include "point.hh"
#include "shapes.hh"
#include "tostring.hh"

#include <iostream>

static const Circle circles[] = {
  Circle(1, Point()),
  Circle(2, Point(1, 1)),
};
static const Rectangle rectangles[] = {
  Rectangle(Point(1, 1), Point(4, 5)),
  Rectangle(Point(0, 0), Point(5, 4)),
};

static const Shape* shapes[] = {
  &circles[0], &rectangles[0], &circles[1], &rectangles[1],
};
constexpr auto nShapes = sizeof(shapes)/sizeof(shapes[0]);


static void
outSizes(std::ostream& out)
{
  out << "sizeof(double) = " << sizeof(double) << std::endl;
  out << "sizeof(Point) = " << sizeof(Point) << std::endl << std::endl;
  
  out << "sizeof(ToString) = " << sizeof(ToString) << std::endl;
  out << "sizeof(Shape) = " << sizeof(Shape) << std::endl;
  out << "sizeof(Circle) = " << sizeof(Circle) << std::endl;
  out << "sizeof(Rectangle) = " << sizeof(Rectangle) << std::endl;
}

static void
outShapes(std::ostream& out)
{
  for (auto i = 0u; i < nShapes; i++) {

    //pointed to Shape could be either a Circle or Rectangle.
    auto shapeP = shapes[i];

    //if shapeP points to a Circle, then call Circle::perimeter();
    //if shapeP points to a Rectangle, then call Rectangle::perimeter();
    //choosing the code at runtime is referred to as *runtime polymorphism*.
    auto perim = shapeP->perimeter();
    
    out << *shapeP << " perimeter: " << perim << std::endl;
  }
}

int main() {
  std::ostream& out = std::cout;
  outShapes(out); out << std::endl;
  outSizes(out); out << std::endl;
}
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cat [K[K[K[Kvim shapes.hh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"shapes.hh" 68L, 1758C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef SHAPES_HH_
#define SHAPES_HH_

#include [m[31m"point.hh"[m
[35m#include [m[31m"tostring.hh"[m

[35m#define _USE_MATH_DEFINES [m[31m1[m
[35m#include [m[31m<cmath>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<sstream>[m

[34m/* A Shape will implement a toString() as well as a perimeter()
 * method.  Since both methods are pure virtual, Shape is an
 * abstract class and cannot be instantiated.
 */[m
[32mclass[m Shape : [38;5;130mpublic[m ToString {
[38;5;130mpublic[m:
  [32mvirtual[m [32mdouble[m perimeter() [32mconst[m = [31m0[m;
};

[34m/* A Circle is a concrete Shape */[m
[32mstruct[m Circle : [38;5;130mpublic[m Shape {
  [32mconst[m [32mdouble[m radius;
  [32mconst[m Point origin;

  [34m/** constructor: default will build unit circle */[m
  Circle([32mdouble[m radius=[31m1[m, [32mconst[m Point& point=Point())
    : radius(radius), origin(point)
  {}

  [34m/** return perimeter of this circle */[m
  [32mdouble[m perimeter() [32mconst[m { [38;5;130mreturn[m [31m2[m * [31mM_PI[m * radius; }

  [34m/** return string representation of this circle */[m
  std::string toString() [32mconst[m {
    std::stringstream s;
    s << [31m"Circle["[m << origin << [31m", "[m << radius << [31m"]"[m;
    [38;5;130mreturn[m s.str();
  }

};

[34m/* A Rectangle is another concrete Shape */[m
[32mstruct[m Rectangle : [38;5;130mpublic[m Shape {
  [32mconst[m Point topLeft, bottomRight;

  [34m/** constructor: no default value for parameters */[m
  Rectangle(Point p1, Point p2) : topLeft(p1), bottomRight(p2) {}[49;77H1,1[11CTop]2;shapes.hh (~/projects/i240b/submit/lab4/exercises/2-shape) - VIM]1;shapes.hh[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#ifndef SHAPES_HH_
#define SHAPES_HH_

#include [m[95m"point.hh"[m
[38;5;81m#include [m[95m"tostring.hh"[m

[38;5;81m#define _USE_MATH_DEFINES [m[95m1[m
[38;5;81m#include [m[95m<cmath>[m
[38;5;81m#include [m[95m<string>[m
[38;5;81m#include [m[95m<sstream>[m

[96m/* A Shape will implement a toString() as well as a perimeter()
 * method.  Since both methods are pure virtual, Shape is an
 * abstract class and cannot be instantiated.
 */[m
[38;5;121mclass[m Shape : [93mpublic[m ToString {
[93mpublic[m:
  [38;5;121mvirtual[m [38;5;121mdouble[m perimeter() [38;5;121mconst[m = [95m0[m;
};

[96m/* A Circle is a concrete Shape */[m
[38;5;121mstruct[m Circle : [93mpublic[m Shape {
  [38;5;121mconst[m [38;5;121mdouble[m radius;
  [38;5;121mconst[m Point origin;

  [96m/** constructor: default will build unit circle */[m
  Circle([38;5;121mdouble[m radius=[95m1[m, [38;5;121mconst[m Point& point=Point())
    : radius(radius), origin(point)
  {}

  [96m/** return perimeter of this circle */[m
  [38;5;121mdouble[m perimeter() [38;5;121mconst[m { [93mreturn[m [95m2[m * [95mM_PI[m * radius; }

  [96m/** return string representation of this circle */[m
  std::string toString() [38;5;121mconst[m {
    std::stringstream s;
    s << [95m"Circle["[m << origin << [95m", "[m << radius << [95m"]"[m;
    [93mreturn[m s.str();
  }

};

[96m/* A Rectangle is another concrete Shape */[m
[38;5;121mstruct[m Rectangle : [93mpublic[m Shape {
  [38;5;121mconst[m Point topLeft, bottomRight;

  [96m/** constructor: no default value for parameters */[m
  Rectangle(Point p1, Point p2) : topLeft(p1), bottomRight(p2) {}[49;77H1,1[11CTop"shapes.hh" 68L, 1758C[1;1H[?25h[?25l[49;67H~@k[1;1H[49;67H   [2;1H[49;77H2[2;1H[?25h[?25l[49;67Hi[2;1H[49;67H [2;1H[49;1H[1m-- INSERT --[m[49;13H[K[49;77H2,1[11CTop[2;1H[?25h[?25l[49;77H3[3;1H[?25h[?25l[49;77H4[4;1H[?25h[?25l[49;77H5[5;1H[?25h[?25l[49;77H6[6;1H[?25h[?25l[49;77H7[7;1H[?25h[?25l[49;77H8[8;1H[?25h[?25l[49;77H9[9;1H[?25h[?25l[49;77H10,1[10;1H[?25h[?25l[49;78H1[11;1H[?25h[?25l[49;78H2[12;1H[?25h[?25l[49;78H3[13;1H[?25h[?25l[49;78H4[14;1H[?25h[?25l[49;78H5[15;1H[?25h[?25l[49;78H6[16;1H[?25h[?25l[49;78H7[17;1H[?25h[?25l[49;78H8[18;1H[?25h[?25l[16;31H[46m{


}[m[49;78H9[19;1H[?25h[?25l[16;31H{


}[49;77H20[20;1H[?25h[49;1H[K[20;1H[?25l[49;67H^[[20;1H[49;67H  [20;1H[49;77H20,0-1[8CTop[20;1H[?25h[?25l[49;67HZ[20;1H[?25h[?25l[49;68HZ[20;1H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;67H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ emacs shapes.hh 
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ emacs shapes.hh [2Pvim[C[C[C[C[C[C[C[C[C[C[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"shapes.hh" 68L, 1758C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef SHAPES_HH_
#define SHAPES_HH_

#include [m[31m"point.hh"[m
[35m#include [m[31m"tostring.hh"[m

[35m#define _USE_MATH_DEFINES [m[31m1[m
[35m#include [m[31m<cmath>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<sstream>[m

[34m/* A Shape will implement a toString() as well as a perimeter()
 * method.  Since both methods are pure virtual, Shape is an
 * abstract class and cannot be instantiated.
 */[m
[32mclass[m Shape : [38;5;130mpublic[m ToString {
[38;5;130mpublic[m:
  [32mvirtual[m [32mdouble[m perimeter() [32mconst[m = [31m0[m;
};

[34m/* A Circle is a concrete Shape */[m
[32mstruct[m Circle : [38;5;130mpublic[m Shape {
  [32mconst[m [32mdouble[m radius;
  [32mconst[m Point origin;

  [34m/** constructor: default will build unit circle */[m
  Circle([32mdouble[m radius=[31m1[m, [32mconst[m Point& point=Point())
    : radius(radius), origin(point)
  {}

  [34m/** return perimeter of this circle */[m
  [32mdouble[m perimeter() [32mconst[m { [38;5;130mreturn[m [31m2[m * [31mM_PI[m * radius; }

  [34m/** return string representation of this circle */[m
  std::string toString() [32mconst[m {
    std::stringstream s;
    s << [31m"Circle["[m << origin << [31m", "[m << radius << [31m"]"[m;
    [38;5;130mreturn[m s.str();
  }

};

[34m/* A Rectangle is another concrete Shape */[m
[32mstruct[m Rectangle : [38;5;130mpublic[m Shape {
  [32mconst[m Point topLeft, bottomRight;

  [34m/** constructor: no default value for parameters */[m
  Rectangle(Point p1, Point p2) : topLeft(p1), bottomRight(p2) {}[49;77H20,0-1[8CTop]2;shapes.hh (~/projects/i240b/submit/lab4/exercises/2-shape) - VIM]1;shapes.hh[20;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#ifndef SHAPES_HH_
#define SHAPES_HH_

#include [m[95m"point.hh"[m
[38;5;81m#include [m[95m"tostring.hh"[m

[38;5;81m#define _USE_MATH_DEFINES [m[95m1[m
[38;5;81m#include [m[95m<cmath>[m
[38;5;81m#include [m[95m<string>[m
[38;5;81m#include [m[95m<sstream>[m

[96m/* A Shape will implement a toString() as well as a perimeter()
 * method.  Since both methods are pure virtual, Shape is an
 * abstract class and cannot be instantiated.
 */[m
[38;5;121mclass[m Shape : [93mpublic[m ToString {
[93mpublic[m:
  [38;5;121mvirtual[m [38;5;121mdouble[m perimeter() [38;5;121mconst[m = [95m0[m;
};

[96m/* A Circle is a concrete Shape */[m
[38;5;121mstruct[m Circle : [93mpublic[m Shape {
  [38;5;121mconst[m [38;5;121mdouble[m radius;
  [38;5;121mconst[m Point origin;

  [96m/** constructor: default will build unit circle */[m
  Circle([38;5;121mdouble[m radius=[95m1[m, [38;5;121mconst[m Point& point=Point())
    : radius(radius), origin(point)
  {}

  [96m/** return perimeter of this circle */[m
  [38;5;121mdouble[m perimeter() [38;5;121mconst[m { [93mreturn[m [95m2[m * [95mM_PI[m * radius; }

  [96m/** return string representation of this circle */[m
  std::string toString() [38;5;121mconst[m {
    std::stringstream s;
    s << [95m"Circle["[m << origin << [95m", "[m << radius << [95m"]"[m;
    [93mreturn[m s.str();
  }

};

[96m/* A Rectangle is another concrete Shape */[m
[38;5;121mstruct[m Rectangle : [93mpublic[m Shape {
  [38;5;121mconst[m Point topLeft, bottomRight;

  [96m/** constructor: no default value for parameters */[m
  Rectangle(Point p1, Point p2) : topLeft(p1), bottomRight(p2) {}[49;77H20,0-1[8CTop"shapes.hh" 68L, 1758C[20;1H[?25h[?25l[49;67H~@k[20;1H[49;67H   [21;1H[49;78H1,1  [21;1H[?25h[?25l[49;67H~@k[21;1H[49;67H   [22;1H[49;78H2[22;1H[?25h[?25l[49;67H~@k[22;1H[49;67H   [23;1H[49;78H3[23;1H[?25h[?25l[49;67H~@k[23;1H[49;67H   [24;1H[49;78H4[24;1H[?25h[?25l[49;67H~@k[24;1H[49;67H   [25;1H[49;78H5,0-1[25;1H[?25h[?25l[49;67H~@k[25;1H[49;67H   [26;1H[49;78H6,1  [26;1H[?25h[?25l[49;67H~@k[26;1H[49;67H   [27;1H[49;78H7[27;1H[?25h[?25l[49;67H~@k[27;1H[49;67H   [28;1H[49;78H8[28;1H[?25h[?25l[49;67H~@k[28;1H[49;67H   [29;1H[49;78H9[29;1H[?25h[?25l[49;67H~@k[29;1H[49;67H   [28;1H[49;78H8[28;1H[?25h[?25l[49;67H~@k[28;1H[49;67H   [27;1H[49;78H7[27;1H[?25h[?25l[49;67H~@k[27;1H[49;67H   [26;1H[49;78H6[26;1H[?25h[?25l[49;67H~@k[26;1H[49;67H   [27;1H[49;78H7[27;1H[?25h[?25l[49;67H~@k[27;1H[49;67H   [28;1H[49;78H8[28;1H[?25h[?25l[49;67H~@k[28;1H[49;67H   [29;1H[49;78H9[29;1H[?25h[?25l[49;67H~@k[29;1H[49;67H   [30;1H[49;77H30,0-1[30;1H[?25h[?25l[49;67H~@k[30;1H[49;67H   [31;1H[49;78H1,1  [31;1H[?25h[?25l[49;67H~@k[31;1H[49;67H   [32;1H[49;78H2[32;1H[?25h[?25l[49;67H~@k[32;1H[49;67H   [33;1H[49;78H3,0-1[33;1H[?25h[?25l[49;67H~@k[33;1H[49;67H   [34;1H[49;78H4,1  [34;1H[?25h[?25l[49;67H~@k[34;1H[49;67H   [35;1H[49;78H5[35;1H[?25h[?25l[49;67H~@k[35;1H[49;67H   [36;1H[49;78H6[36;1H[?25h[?25l[49;67H~@k[36;1H[49;67H   [35;1H[49;78H5[35;1H[?25h[?25l[49;67H~@k[35;1H[49;67H   [34;1H[49;78H4[34;1H[?25h[?25l[49;67H~@k[34;1H[49;67H   [33;1H[49;78H3,0-1[33;1H[?25h[?25l[49;67Hi[33;1H[49;67H [33;1H[49;1H[1m-- INSERT --[m[49;13H[K[49;77H33,1[10CTop[33;1H[?25h[?25l[49;80H2-9]2;shapes.hh + (~/projects/i240b/submit/lab4/exercises/2-shape) - VIM]1;shapes.hh[33;9H[?25h[?25l[49;80H1  [33;1H[?25h[?25l[32;48r[48;1H
[1;49r[32;3H[38;5;121mdouble[m perimeter() [38;5;121mconst[m { [93mreturn[m [95m2[m * [95mM_PI[m * radius; }[49;77H[K[49;77H32,57[9CTop[32;28H[46m{[27C}[?25h[?25l[33;48r[m[33;1H[L[1;49r[49;77H[K[49;77H33,3[10CTop[32;28H{[27C}
  [?25h[?25l[34;48r[34;1H[L[1;49r[49;77H[K[49;77H34,3[10CTop[34;3H[?25h[?25ld[49;80H4[34;4H[?25h[?25l[93mdo[m[49;80H5[34;5H[?25h[?25ldou[49;80H6[34;6H[?25h[?25lb[49;80H7[34;7H[?25h[?25ll[49;80H8[34;8H[?25h[?25l  [38;5;121mdouble[m[49;80H9[34;9H[?25h[?25l[49;80H10[34;10H[?25h[?25la[49;81H1[34;11H[?25h[?25lr[49;81H2[34;12H[?25h[?25le[49;81H3[34;13H[?25h[?25la[49;81H4[34;14H[?25h[?25l([49;81H5[34;15H[?25h[?25l)[46m()[m[49;81H6[34;16H[?25h[?25l()[49;81H7[34;17H[?25h[?25lc[49;81H8[34;18H[?25h[?25lo[49;81H9[34;19H[?25h[?25ln[49;80H20[34;20H[?25h[?25ls[49;81H1[34;21H[?25h[?25l[38;5;121mconst[m[49;81H2[34;22H[?25h[?25l[49;81H3[34;23H[?25h[?25l{[46m{[42;1H}[m[49;81H4[34;24H[?25h[?25l}[46m}[m[42;1H}[49;81H5[34;25H[?25h[?25l[49;81H4[34;24H[?25h[?25l[46m [m} [46m}[m[49;81H5[34;25H[?25h[?25l[46mr[m}r[46m}[m[49;81H6[34;26H[?25h[?25l[46me[m}e[46m}[m[49;81H7[34;27H[?25h[?25l[46mt[m}t[46m}[m[49;81H8[34;28H[?25h[?25l}[34;28H[K[34;27H[46m}[m[49;81H7[34;27H[?25h[?25l}[34;27H[K[34;26H[46m}[m[49;81H6[34;26H[?25h[?25l}[34;26H[K[34;25H[46m}[m[49;81H5[34;25H[?25h[?25l[46mr[m}r[46m}[m[49;81H6[34;26H[?25h[?25l[46me[m}e[46m}[m[49;81H7[34;27H[?25h[?25l[46mt[m}t[46m}[m[49;81H8[34;28H[?25h[?25l[46mr[m}r[46m}[m[49;81H9[34;29H[?25h[?25l[46mu[m}u[46m}[m[49;80H30[34;30H[?25h[?25l[46mr[m}r[46m}[m[49;81H1[34;31H[?25h[?25l[46mn[m}n[46m}[m[49;81H2[34;32H[?25h[?25l}[34;32H[K[34;31H[46m}[m[49;81H1[34;31H[?25h[?25l}[34;31H[K[34;30H[46m}[m[49;81H0[34;30H[?25h[?25l}[34;30H[K[34;29H[46m}[m[49;80H29[34;29H[?25h[?25l}[34;29H[K[34;28H[46m}[m[49;81H8[34;28H[?25h[?25l[46mu[m}u[46m}[m[49;81H9[34;29H[?25h[?25l[46mn[m}n[46m}[m[49;80H30[34;30H[?25h[?25l}[34;30H[K[34;29H[46m}[m[49;80H29[34;29H[?25h[?25l[46mr[m}r[46m}[m[49;80H30[34;30H[?25h[?25l[93mretur[m[93m[46mn[m}[93mn[m[46m}[m[49;81H1[34;31H[?25h[?25l[46m [m} [46m}[m[49;81H2[34;32H[?25h[?25l[22;30H[46m{[m[34;23H{[8C}[42;1H[46m}[m[49;77H22,31[22;31H[?25h[?25l{[42;1H}[49;78H3,23[23;23H[?25h[?25l[49;78H4,22[24;22H[?25h[?25l[49;78H5,1 [25;1H[?25h[?25l[49;78H6,53[26;53H[?25h[?25l[27;9H[46m([43C)[m[49;78H7,54[27;54H[?25h[?25l[27;9H([43C)[28;29H[46m([mpoint[46m)[m[49;78H8,36[28;36H[?25h[?25l[28;29H(point)
  [46m{}[m[49;78H9,5 [29;5H[?25h[?25l{}[49;77H30,1[30;1H[?25h[?25l[49;78H1,41[31;41H[?25h[?25l[32;28H[46m{[27C}[m[49;78H2,57[32;57H[?25h[?25l[32;28H{[27C}[49;78H3,1 [33;1H[?25h[?25l[34;23H[46m{[8C}[m[49;78H4,33[34;33H[?25h[?25l[49;81H2[34;32H[?25h[?25l[46mM[m}M[46m}[m[49;81H3[34;33H[?25h[?25l[46m_[m}_[46m}[m[49;81H4[34;34H[?25h[?25l[46mP[m}P[46m}[m[49;81H5[34;35H[?25h[?25l[95mM_P[m[95m[46mI[m}[95mI[m[46m}[m[49;81H6[34;36H[?25h[?25l[46m [m} [46m}[m[49;81H7[34;37H[?25h[?25l[46m*[m}*[46m}[m[49;81H8[34;38H[?25h[?25l[46m [m} [46m}[m[49;81H9[34;39H[?25h[?25l[46mr[m}r[46m}[m[49;80H40[34;40H[?25h[?25l[46m [m} [46m}[m[49;81H1[34;41H[?25h[?25l}[34;41H[K[34;40H[46m}[m[49;81H0[34;40H[?25h[?25l}[34;40H[K[34;39H[46m}[m[49;80H39[34;39H[?25h[?25l[46mr[m}r[46m}[m[49;80H40[34;40H[?25h[?25l[46ma[m}a[46m}[m[49;81H1[34;41H[?25h[?25l[46md[m}d[46m}[m[49;81H2[34;42H[?25h[?25l[46mi[m}i[46m}[m[49;81H3[34;43H[?25h[?25l[46mu[m}u[46m}[m[49;81H4[34;44H[?25h[?25l[46ms[m}s[46m}[m[49;81H5[34;45H[?25h[?25l[46m [m} [46m}[m[49;81H6[34;46H[?25h[?25l[46m*[m}*[46m}[m[49;81H7[34;47H[?25h[?25l[46m [m} [46m}[m[49;81H8[34;48H[?25h[?25l[46mr[m}r[46m}[m[49;81H9[34;49H[?25h[?25l[46ma[m}a[46m}[m[49;80H50[34;50H[?25h[?25l[46md[m}d[46m}[m[49;81H1[34;51H[?25h[?25l[46mi[m}i[46m}[m[49;81H2[34;52H[?25h[?25l[46mu[m}u[46m}[m[49;81H3[34;53H[?25h[?25l[46ms[m}s[46m}[m[49;81H4[34;54H[?25h[?25l[46m;[m};[46m}[m[49;81H5[34;55H[?25h[?25l[46m [m} [46m}[m[49;81H6[34;56H[?25h[?25l[34;23H{[32C}[49;78H5,53[35;53H[?25h[?25l[36;32H[46m{[40;3H}[m[49;78H6,3[36;33H[?25h[?25l{[40;3H}[49;78H7,25[37;25H[?25h[?25l[36;32H[46m{[40;3H}[m[49;78H6,33[36;33H[?25h[?25l{[40;3H}[49;78H7,25[37;25H[?25h[?25l[49;78H8,5[38;55H[?25h[?25l[49;78H9,20[39;20H[?25h[?25l[36;32H[46m{[40;3H}[m[49;77H40,4 [40;4H[?25h[?25l[36;32H{[40;3H}[49;78H1,3[41;3H[?25h[?25l[49;78H2[42;3H[?25h[?25l[49;78H3,1[43;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HRectangle(Point p1, Point p2) : topLeft(p1), bottomRight(p2) {}[49;77H[K[49;77H44,44[10C4%[43;44H[?25h[?25l[1;48r[48;1H
[1;49r[49;77H[K[49;77H45,34[10C9%[43;34H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[96m/** return perimeter of this rectangle */[m[49;77H[K[49;77H46,36[9C14%[43;36H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[38;5;121mdouble[m perimeter() [38;5;121mconst[m {[49;77H[K[49;77H47,1[10C19%[43;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[38;5;121mdouble[m width = bottomRight.x - topLeft.x;[49;77H[K[49;77H48,54[9C23%[43;54H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[93mif[m (width < [95m0[m) width = -width;[49;77H[K[49;77H49,56[9C28%[43;56H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[38;5;121mdouble[m height = bottomRight.y - topLeft.y;[49;77H[K[49;77H50,1[10C33%[43;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[93mif[m (height < [95m0[m) height = -height;[49;77H[K[49;77H51,44[9C38%[43;44H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[93mreturn[m [95m2[m * (width + height);[49;77H[K[49;77H52,29[9C42%[43;29H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H53,46[9C47%[43;46H[?25h[?25l[1;48r[48;1H
[1;49r[49;77H[K[49;77H54,35[9C52%[43;35H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[96m/** return string representation of this rectangle */[m[49;77H[K[49;77H55,47[9C57%[43;47H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hstd::string toString() [38;5;121mconst[m {[49;77H[K[49;77H56,38[9C61%[43;38H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hstd::stringstream s;[49;77H[K[49;77H57,33[9C66%[43;33H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hs << [95m"Rectangle["[m << topLeft.toString() << [95m", "[m[49;77H[K[49;77H58,4[10C71%[37;28H[46m{[43;3H}[?25h[?25l[1;48r[m[48;1H
[1;49r[48;7H<< bottomRight.toString() << [95m"]"[m;[49;77H[K[49;77H59,1[10C76%[36;28H{[42;3H}
[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[93mreturn[m s.str();[49;77H[K[49;77H60,56[9C80%[43;56H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H61,33[9C85%[43;32H[46m{[48;3H}[43;33H[?25h[?25l[1;48r[m[48;1H
[1;49r[49;77H[K[49;77H62,25[9C90%[42;32H{[47;3H}[43;25H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H};[49;77H[K[49;77H63,52[9C95%[43;52H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[38;5;81m#endif[m [96m//ifndef SHAPES_HH_[m[49;77H[K[49;77H64,40[9CBot[43;40H[?25h[?25l[49;78H5,2[44;20H[?25h[?25l[49;78H4,4[43;40H[?25h[?25l[49;78H3,52[42;52H[?25h[?25l[49;78H2,25[41;25H[?25h[?25l[40;32H[46m{[45;3H}[m[49;78H1,33[40;33H[?25h[?25l{[45;3H}[49;78H0,56[39;56H[?25h[?25l[49;77H59,1 [38;1H[?25h[?25l[31;28H[46m{[37;3H}[m[49;78H8,4[37;4H[?25h[?25l[31;28H{[37;3H}[49;78H7,33[36;33H[?25h[?25l[31;28H[46m{[37;3H}[m[49;78H8,4 [37;4H[?25h[?25l[38;48r[38;1H[L[1;49r[49;77H[K[49;77H59,3[10C95%[31;28H{[37;3H}
  [?25h[?25l[39;48r[39;1H[L[1;49r[49;77H[K[49;77H60,3[10C91%[39;3H[?25h[?25ld[49;80H4[39;4H[?25h[?25l[93mdo[m[49;80H5[39;5H[?25h[?25ldou[49;80H6[39;6H[?25h[?25lb[49;80H7[39;7H[?25h[?25ll[49;80H8[39;8H[?25h[?25l  [38;5;121mdouble[m[49;80H9[39;9H[?25h[?25l[49;80H10[39;10H[?25h[?25la[49;81H1[39;11H[?25h[?25lr[49;81H2[39;12H[?25h[?25le[49;81H3[39;13H[?25h[?25la[49;81H4[39;14H[?25h[?25l([49;81H5[39;15H[?25h[?25l)[46m()[m[49;81H6[39;16H[?25h[?25l()[49;81H7[39;17H[?25h[?25lc[49;81H8[39;18H[?25h[?25lo[49;81H9[39;19H[?25h[?25ln[49;80H20[39;20H[?25h[?25ls[49;81H1[39;21H[?25h[?25l[38;5;121mconst[m[49;81H2[39;22H[?25h[?25l[49;81H3[39;23H[?25h[?25l{[49;81H4[39;24H[?25h[?25l}[46m{}[m[49;81H5[39;25H[?25h[?25l[49;81H4[39;24H[?25h[?25l[46m [m} [46m}[m[49;81H5[39;25H[?25h[?25l[46mr[m}r[46m}[m[49;81H6[39;26H[?25h[?25l[46me[m}e[46m}[m[49;81H7[39;27H[?25h[?25l[46mt[m}t[46m}[m[49;81H8[39;28H[?25h[?25l[46mr[m}r[46m}[m[49;81H9[39;29H[?25h[?25l[46mu[m}u[46m}[m[49;80H30[39;30H[?25h[?25l}[39;30H[K[39;29H[46m}[m[49;80H29[39;29H[?25h[?25l}[39;29H[K[39;28H[46m}[m[49;81H8[39;28H[?25h[?25l[46mu[m}u[46m}[m[49;81H9[39;29H[?25h[?25l[46mr[m}r[46m}[m[49;80H30[39;30H[?25h[?25l[93mretur[m[93m[46mn[m}[93mn[m[46m}[m[49;81H1[39;31H[?25h[?25l[46m [m} [46m}[m[49;81H2[39;32H[?25h[?25l[39;23H{[8C}[49;77H57,33[36;33H[?25h[?25l[49;4H[1m(insert)- VISUAL --[m[49;77H[K[49;67H2[36;32H[49;77H57,32[9C91%[36;32H;[48;5;242m [?25h[?25l[m[49;67H3[36;31H[36;16H[46m([14C)[m[48;5;242m;[m[49;81H1[36;31H[?25h[?25l[49;67H4[36;30H[36;16H([14C[48;5;242m)[m[49;81H0[36;30H[?25h[?25l[49;67H2[35;28H=[48;5;242m -height; 
    [m[93m[48;5;242mreturn[m[48;5;242m [m[95m[48;5;242m2[m[48;5;242m * (width + height[m[49;78H6,28[35;28H[?25h[?25lh[48;5;242mt =[m[49;81H5[35;25H[?25h[?25li[48;5;242mgh[m[49;81H3[35;23H[?25h[?25le[48;5;242mi[m[49;81H2[35;22H[?25h[?25lh[48;5;242me[m[49;81H1[35;21H[?25h[?25l [48;5;242mh[m[49;81H0[35;20H[?25h[?25l[35;8H[46m([10C)[m[48;5;242m [m[49;80H19[35;19H[?25h[?25l[49;67H3[34;18H [48;5;242m= bottomRight.y - topLeft.y; 
    [m[93m[48;5;242mif[m[48;5;242m (height < [m[95m[48;5;242m0[m[48;5;242m)[m[49;78H5,18[34;18H[?25h[?25lt[48;5;242m [m[49;81H7[34;17H[?25h[?25lh[48;5;242mt[m[49;81H6[34;16H[?25h[?25lg[48;5;242mh[m[49;81H5[34;15H[?25h[?25le[48;5;242mig[m[49;81H3[34;13H[?25h[?25lh[48;5;242me[m[49;81H2[34;12H[?25h[?25l[1C[48;5;242m h[m[49;81H0[34;10H[?25h[?25l[1C[38;5;121m[48;5;242mble[m[49;80H7 [34;7H[?25h[?25l[1C[38;5;121m[48;5;242mu[m[49;80H6[34;6H[?25h[?25l[1C[38;5;121m[48;5;242mo[m[49;80H5[34;5H[?25h[?25l [38;5;121m[48;5;242md[m[49;80H4[34;4H[?25h[?25l [48;5;242m [m[49;80H3[34;3H[?25h[?25l [48;5;242m [m[49;80H2[34;2H[?25h[?25l [48;5;242m [m[49;80H1[34;1H[?25h[?25l[49;67H4[33;1H [48;5;242m   [m[93m[48;5;242mif[m[48;5;242m (width < [m[95m[48;5;242m0[m[48;5;242m) width = -width; 
 [m[49;78H4[33;1H[?25h[?25l[49;67H5[32;1H [48;5;242m   [m[38;5;121m[48;5;242mdouble[m[48;5;242m width = bottomRight.x - topLeft.x; 
 [m[49;78H3[32;1H[?25h[?25l[?25h[?25l[49;67H^[[32;1H[49;67H5 [32;1H[49;68H^[[32;1H[49;67H   [32;1H[49;4H[1mINSERTt --[m[49;13H[K[49;77H53,1[10C91%[32;2H   [38;5;121mdouble[m width = bottomRight.x - topLeft.x;[32;46H[K[33;1H    [93mif[m (width < [95m0[m) width = -width;[33;35H[K[34;1H    [38;5;121mdouble[m height = bottomRight.y - topLeft.y;[34;47H[K[35;1H    [93mif[m (height < [95m0[m) height = -height;[35;38H[K[36;1H    [93mreturn[m [95m2[m * (width + height);[36;33H[K[32;1H[?25h[?25l[49;78H7,33[36;33H[?25h[?25l[49;4H[1m(insert)- VISUAL --[m[49;77H[K[49;67H1[36;33H[49;77H57,33[9C91%[36;33H[?25h[?25l[?25h[?25l[49;67H2[36;32H;[48;5;242m [m[49;81H2[36;32H[?25h[?25l[35;28H=[48;5;242m -height; 
    [m[93m[48;5;242mreturn[m[48;5;242m [m[95m[48;5;242m2[m[48;5;242m * (width + height);[m[49;78H6,28[35;28H[?25h[?25l [48;5;242m=[m[49;81H7[35;27H[?25h[?25lh[48;5;242mt [m[49;81H5[35;25H[?25h[?25li[48;5;242mgh[m[49;81H3[35;23H[?25h[?25l[49;67H3[34;22Ho[48;5;242mttomRight.y - topLeft.y; 
    [m[93m[48;5;242mif[m[48;5;242m (height < [m[95m[48;5;242m0[m[48;5;242m) hei[m[49;78H5,22[34;22H[?25h[?25l [48;5;242mbo[m[49;81H0[34;20H[?25h[?25lt[48;5;242m = [m[49;80H17[34;17H[?25h[?25lh[48;5;242mt[m[49;81H6[34;16H[?25h[?25l[49;67H4[33;15H<[48;5;242m [m[95m[48;5;242m0[m[48;5;242m) width = -width; 
    [m[38;5;121m[48;5;242mdouble[m[48;5;242m heigh[m[49;78H4,15[33;15H[?25h[?25l [48;5;242m<[m[49;81H4[33;14H[?25h[?25lh[48;5;242m [m[49;81H3[33;13H[?25h[?25lt[48;5;242mh[m[49;81H2[33;12H[?25h[?25ld[48;5;242mt[m[49;81H1[33;11H[?25h[?25li[48;5;242md[m[49;81H0[33;10H[?25h[?25l[49;67H5[32;10H[1C[48;5;242m width = bottomRight.x - topLeft.x; 
    [m[93m[48;5;242mif[m[48;5;242m (wi[m[49;78H3[32;10H[?25h[?25l[1C[38;5;121m[48;5;242me[m[49;80H9 [32;9H[?25h[?25l[1C[38;5;121m[48;5;242ml[m[49;80H8[32;8H[?25h[?25l[1C[38;5;121m[48;5;242mb[m[49;80H7[32;7H[?25h[?25l[1C[38;5;121m[48;5;242mu[m[49;80H6[32;6H[?25h[?25l[1C[38;5;121m[48;5;242mo[m[49;80H5[32;5H[?25h[?25l [38;5;121m[48;5;242md[m[49;80H4[32;4H[?25h[?25l [48;5;242m [m[49;80H3[32;3H[?25h[?25l [48;5;242m [m[49;80H2[32;2H[?25h[?25l [48;5;242m [m[49;80H1[32;1H[?25h[?25l[?25h[?25l[49;67H [37;4H[49;4H[1mINSERTt --[m[49;13H[K[49;77H58,4[10C91%[32;2H   [38;5;121mdouble[m width = bottomRight.x - topLeft.x;[32;46H[K[33;1H    [93mif[m (width < [95m0[m) width = -width;[33;35H[K[34;1H    [38;5;121mdouble[m height = bottomRight.y - topLeft.y;[34;47H[K[35;1H    [93mif[m (height < [95m0[m) height = -height;[35;38H[K[36;1H    [93mreturn[m [95m2[m * (width + height);[36;33H[K[31;28H[46m{[37;3H}[?25h[?25l[m[31;28H{[37;3H}[49;78H7,33[36;33H[?25h[?25lV[49;81H4[36;34H[?25h[?25l[49;78H6[35;34H[?25h[?25l[49;78H5[34;34H[?25h[?25l[49;78H4[33;34H[?25h[?25l[49;78H5[34;34H[?25h[?25l[49;78H6[35;34H[?25h[49;1H[K[35;33H[?25l[49;67H^[[35;33H[49;67H  [35;34H[49;77H56,33[9C91%[35;33H[?25h[?25l[49;67Hu[35;33H[49;1H1 change; before #6  2 seconds ago[49;67H[K[36;32H[36;33H[K[49;77H57,32[9C91%[49;77H[K[49;77H57,32[9C91%[36;32H[?25h[?25l[49;67HV[36;32H[49;67H1[36;32H[48;5;242m    [m[93m[48;5;242mreturn[m[48;5;242m [m[95m[48;5;242m2[m[48;5;242m * (width + height)[m;[48;5;242m [m[49;1H[1m-- VISUAL LINE --[m[49;18H[K[49;67H1[36;32H[49;77H57,32[9C91%[36;32H[?25h[?25l[49;67H~@k[36;32H[49;67H2  [35;32H[48;5;242m    [m[93m[48;5;242mif[m[48;5;242m (height < [m[95m[48;5;242m0[m[48;5;242m) height = -h[me[48;5;242might; [36;32H;[m[49;78H6[35;32H[?25h[?25l[49;67H~@k[35;32H[49;67H3  [34;32H[48;5;242m    [m[38;5;121m[48;5;242mdouble[m[48;5;242m height = bottomRight[m.[48;5;242my - topLeft.y; [35;32He[m[49;78H5[34;32H[?25h[?25l[49;67H~@k[34;32H[49;67H4  [33;32H[48;5;242m    [m[93m[48;5;242mif[m[48;5;242m (width < [m[95m[48;5;242m0[m[48;5;242m) width = -wid[mt[48;5;242mh; [34;32H.[m[49;78H4[33;32H[?25h[?25l[49;67H~@k[33;32H[49;67H5  [32;32H[48;5;242m    [m[38;5;121m[48;5;242mdouble[m[48;5;242m width = bottomRight.[mx[48;5;242m - topLeft.x; [33;32Ht[m[49;78H3[32;32H[?25h[?25l[49;67Hy[32;32H    [38;5;121mdouble[m width = bottomRight.x - topLeft.x;[32;46H[K[33;1H    [93mif[m (width < [95m0[m) width = -width;[33;35H[K[34;1H    [38;5;121mdouble[m height = bottomRight.y - topLeft.y;[34;47H[K[35;1H    [93mif[m (height < [95m0[m) height = -height;[35;38H[K[36;1H    [93mreturn[m [95m2[m * (width + height);[36;33H[K[49;1H[K[49;77H53,32[9C91%5 lines yanked[49;77H[K[32;32H[49;77H53,32[9C91%[32;32H[?25h[?25l[49;67H~@k[32;32H[49;67H   [33;32H[49;78H4[33;32H[?25h[?25l[49;67H~@k[33;32H[49;67H   [34;32H[49;78H5[34;32H[?25h[?25l[49;67H~@k[34;32H[49;67H   [35;32H[49;78H6[35;32H[?25h[?25l[49;67H~@k[35;32H[49;67H   [36;32H[49;78H7[36;32H[?25h[?25l[49;67H~@k[36;32H[49;67H   [37;3H[31;28H[46m{[37;3H}[m[49;78H8,3 [37;3H[?25h[?25l[49;67H~@k[37;3H[49;67H   [38;1H[31;28H{[37;3H}[49;78H9,0-1[38;1H[?25h[?25l[49;67H~@k[38;1H[49;67H   [39;32H[39;23H[46m{[8C}[m[49;77H60,32 [39;32H[?25h[?25l[49;67H~@k[39;32H[49;67H   [40;1H[39;23H{[8C}[49;78H1,0-1[40;1H[?25h[?25l[49;67H~@k[40;1H[49;67H   [39;32H[39;23H[46m{[8C}[m[49;78H0,32 [39;32H[?25h[?25l[49;67Hi[39;32H[49;67H [39;32H[49;1H[1m-- INSERT --[m[49;13H[K[49;77H60,32[9C91%[39;32H[?25h[?25l[39;23H{[8C}[49;81H1[39;31H[?25h[?25l[39;23H[46m{[8C}[m[49;81H2[39;32H[?25h[?25l}[39;32H[K[39;31H[46m}[m[49;81H1[39;31H[?25h[?25lretur}[39;31H[K[39;30H[46m}[m[49;81H0[39;30H[?25h[?25l}[39;30H[K[39;29H[46m}[m[49;80H29[39;29H[?25h[?25l}[39;29H[K[39;28H[46m}[m[49;81H8[39;28H[?25h[?25l}[39;28H[K[39;27H[46m}[m[49;81H7[39;27H[?25h[?25l}[39;27H[K[39;26H[46m}[m[49;81H6[39;26H[?25h[?25l}[39;26H[K[39;25H[46m}[m[49;81H5[39;25H[?25h[?25l[40;48r[40;1H[L[1;49r[39;25H[K[40;3H}[49;77H[K[49;77H61,3[10C87%[40;3H[46m}[?25h[m[49;1H[K[40;2H[?25l[49;67H^[[40;2H[49;67H  [40;3H[39;23H{
  }[49;77H61,2[10C87%[40;2H[?25h[?25l[49;67Hp[40;2H[49;1H5 more lines[49;67H[K[41;5H[41;48r[41;1H[5L[1;49r[41;5H[38;5;121mdouble[m width = bottomRight.x - topLeft.x;
    [93mif[m (width < [95m0[m) width = -width;
    [38;5;121mdouble[m height = bottomRight.y - topLeft.y;
    [93mif[m (height < [95m0[m) height = -height;
    [93mreturn[m [95m2[m * (width + height);[49;1H[K[49;77H62,5[10C72%5 more lines[49;77H[K[49;77H62,5[10C72%[41;5H[?25h[?25l[49;67Hu[41;5H[49;3Hfewer lines; before #8  2 seconds ago[49;67H[K[40;2H[41;48r[41;1H[5M[1;49r[44;5Hstd::stringstream s;
    s << [95m"Rectangle["[m << topLeft.toString() << [95m", "[m[46;7H<< bottomRight.toString() << [95m"]"[m;
    [93mreturn[m s.str();
  }[49;1H[K[49;77H61,2[10C87%5 fewer lines; before #8  2 seconds ago[49;77H[K[49;77H61,2[10C87%[40;2H[?25h[?25l[49;67H~@k[40;2H[49;67H   [39;2H[49;78H0[39;2H[?25h[?25l[49;67H~@k[39;2H[49;67H   [39;3H[49;80H3[39;3H[?25h[?25l[49;67H~@k[39;3H[49;67H   [39;4H[49;80H4[39;4H[?25h[?25l[49;67H~@k[39;4H[49;67H   [39;5H[49;80H5[39;5H[?25h[?25l[49;67H~@k[39;5H[49;67H   [39;6H[49;80H6[39;6H[?25h[?25l[49;67H~@k[39;6H[49;67H   [39;7H[49;80H7[39;7H[?25h[?25l[49;67H~@k[39;7H[49;67H   [39;8H[49;80H8[39;8H[?25h[?25l[49;67H~@k[39;8H[49;67H   [39;9H[49;80H9[39;9H[?25h[?25l[49;67H~@k[39;9H[49;67H   [39;10H[49;80H10[39;10H[?25h[?25l[49;67H~@k[39;10H[49;67H   [39;11H[49;81H1[39;11H[?25h[?25l[49;67H~@k[39;11H[49;67H   [39;12H[49;81H2[39;12H[?25h[?25l[49;67H~@k[39;12H[49;67H   [39;13H[49;81H3[39;13H[?25h[?25l[49;67H~@k[39;13H[49;67H   [39;14H[46m()[m[49;81H4[39;14H[?25h[?25l[49;67H~@k[39;14H[49;67H   [39;15H[49;81H5[39;15H[?25h[?25l[49;67H~@k[39;15H[49;67H   [39;16H()[49;81H6[39;16H[?25h[?25l[49;67H~@k[39;16H[49;67H   [39;17H[49;81H7[39;17H[?25h[?25l[49;67H~@k[39;17H[49;67H   [39;18H[49;81H8[39;18H[?25h[?25l[49;67H~@k[39;18H[49;67H   [39;19H[49;81H9[39;19H[?25h[?25l[49;67H~@k[39;19H[49;67H   [39;20H[49;80H20[39;20H[?25h[?25l[49;67H~@k[39;20H[49;67H   [39;21H[49;81H1[39;21H[?25h[?25l[49;67H~@k[39;21H[49;67H   [39;22H[49;81H2[39;22H[?25h[?25l[49;67H~@k[39;22H[49;67H   [39;23H[46m{
[m  [46m}[m[49;81H3[39;23H[?25h[?25l[49;67H~@k[39;23H[49;67H   [39;24H{
  }[49;81H4[39;24H[?25h[?25l[49;67H~@k[39;24H[49;67H   [39;24H[?25h[?25l[49;67H~@k[39;24H[49;67H   [39;24H[?25h[?25l[49;67H~@k[39;24H[49;67H   [39;24H[?25h[?25l[49;67H~@k[39;24H[49;67H   [39;24H[?25h[?25l[49;67H~@k[39;24H[49;67H   [39;24H[?25h[?25l[49;67H~@k[39;24H[49;67H   [39;24H[?25h[?25l[49;67Hp[39;24H[49;3Hmore lines[49;13H[K[40;5H[40;48r[40;1H[5L[1;49r[40;5H[38;5;121mdouble[m width = bottomRight.x - topLeft.x;
    [93mif[m (width < [95m0[m) width = -width;
    [38;5;121mdouble[m height = bottomRight.y - topLeft.y;
    [93mif[m (height < [95m0[m) height = -height;
    [93mreturn[m [95m2[m * (width + height);[49;1H[K[49;77H61,5[10C72%5 more lines[49;77H[K[49;77H61,5[10C72%[40;5H[?25h[?25l[49;67Hi[40;5H[49;67H [40;5H[49;1H[1m-- INSERT --[m[49;77H[K[49;77H61,5[10C72%[40;5H[?25h[?25l[49;78H2[41;5H[?25h[?25l[49;78H3[42;5H[?25h[?25l[49;78H4[43;5H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hstd::stringstream s;[49;77H[K[49;77H65,5[10C75%[43;5H[?25h[?25l[49;80H6[43;6H[?25h[?25l[49;80H7[43;7H[?25h[?25l[49;80H8[43;8H[?25h[?25l[49;80H9[43;9H[?25h[?25l[49;80H10[43;10H[?25h[?25l[49;81H1[43;11H[?25h[?25l[49;81H2[43;12H[?25h[?25l[49;81H3[43;13H[?25h[?25l[49;81H4[43;14H[?25h[?25l[49;81H5[43;15H[?25h[?25l [46m([14C)[m[49;81H6[43;16H[?25h[?25l[49;81H7[43;17H[?25h[?25l([14C)[49;81H8[43;18H[?25h[?25l[49;81H9[43;19H[?25h[?25l[49;80H20[43;20H[?25h[?25l[49;81H1[43;21H[?25h[?25l[49;81H2[43;22H[?25h[?25l[49;81H3[43;23H[?25h[?25l[49;81H4[43;24H[?25h[?25l[49;81H5[43;25H[?25h[?25l[49;81H6[43;26H[?25h[?25l[49;81H7[43;27H[?25h[?25l[49;81H8[43;28H[?25h[?25l[49;81H9[43;29H[?25h[?25l[49;80H30[43;30H[?25h[?25l[43;16H[46m([14C)[m[49;81H1[43;31H[?25h[?25l[49;81H2[43;32H[?25h[?25l[43;16H([14C)[49;81H3[43;33H[?25h[?25l[43;16H[46m([14C)[m[49;81H2[43;32H[?25h[?25l[46m;[m[43;32H[K[43;16H([14C;[49;81H1[43;31H[?25h[?25l;[43;31H[K[49;81H0[43;30H[?25h[?25l;[43;30H[K[49;80H29[43;29H[?25h[?25l;[43;29H[K[49;81H8[43;28H[?25h[?25l;[43;28H[K[49;81H7[43;27H[?25h[?25l;[43;27H[K[49;81H6[43;26H[?25h[?25l;[43;26H[K[49;81H5[43;25H[?25h[?25l;[43;25H[K[49;81H4[43;24H[?25h[?25l;[43;24H[K[49;81H3[43;23H[?25h[?25l;[43;23H[K[49;81H2[43;22H[?25h[?25l;[43;22H[K[49;81H1[43;21H[?25h[?25l;[43;21H[K[49;81H0[43;20H[?25h[?25l;[43;20H[K[49;80H19[43;19H[?25h[?25l;[43;19H[K[49;81H8[43;18H[?25h[?25l;[43;18H[K[49;81H7[43;17H[?25h[?25l;[43;17H[K[49;81H6[43;16H[?25h[?25l;[43;16H[K[49;81H5[43;15H[?25h[?25l;[43;15H[K[49;81H4[43;14H[?25h[?25l;[43;14H[K[49;81H3[43;13H[?25h[?25l;[43;13H[K[49;81H2[43;12H[?25h[?25lw;[49;81H3[43;13H[?25h[?25li;[49;81H4[43;14H[?25h[?25ld;[49;81H5[43;15H[?25h[?25lt;[49;81H6[43;16H[?25h[?25lh;[49;81H7[43;17H[?25h[?25l ;[49;81H8[43;18H[?25h[?25l*;[49;81H9[43;19H[?25h[?25l ;[49;80H20[43;20H[?25h[?25lh;[49;81H1[43;21H[?25h[?25le;[49;81H2[43;22H[?25h[?25li;[49;81H3[43;23H[?25h[?25lg;[49;81H4[43;24H[?25h[?25lh;[49;81H5[43;25H[?25h[?25lt;[49;81H6[43;26H[?25h[?25l;;[49;81H7[43;27H[?25h[?25l[43;27H[K[49;81H6[43;26H[?25h[?25l[49;78H4[42;26H[?25h[?25l[49;78H5[43;26H[?25h[?25l[49;81H7[43;27H[?25h[?25l[49;78H4[42;27H[?25h[?25l[49;78H3[41;27H[?25h[?25l[49;78H2[40;27H[?25h[?25l[49;78H1[39;27H[?25h[?25l[49;78H0,25[38;25H[?25h[?25l[49;77H59,1 [37;1H[?25h[?25l[30;28H[46m{[36;3H}[m[49;78H8,4[36;4H[?25h[?25l[30;28H{[36;3H}[49;78H7,27[35;27H[?25h[?25l[49;78H6[34;27H[?25h[?25l[49;78H5[33;27H[?25h[?25l[49;78H4[32;27H[?25h[?25l[49;78H3[31;27H[?25h[?25l[49;78H2[30;27H[?25h[?25l[49;78H1[29;27H[?25h[?25l[49;78H0,1 [28;1H[?25h[49;1H[K[28;1H[?25l[49;67H^[[28;1H[49;67H  [28;1H[49;77H50,0-1[8C75%[28;1H[?25h[?25l[49;67H~@k[28;1H[49;67H   [29;1H[49;78H1,1  [29;1H[?25h[?25l[49;67H~@k[29;1H[49;67H   [30;1H[49;78H2[30;1H[?25h[?25l[49;67H~@k[30;1H[49;67H   [31;1H[49;78H3[31;1H[?25h[?25l[49;67H~@k[31;1H[49;67H   [32;1H[49;78H4[32;1H[?25h[?25l[49;67H~@k[32;1H[49;67H   [33;1H[49;78H5[33;1H[?25h[?25l[49;67H~@k[33;1H[49;67H   [34;1H[49;78H6[34;1H[?25h[?25l[49;67H~@k[34;1H[49;67H   [35;1H[49;78H7[35;1H[?25h[?25l[49;67H~@k[35;1H[49;67H   [36;1H[49;78H8[36;1H[?25h[?25l[49;67H~@k[36;1H[49;67H   [37;1H[49;78H9,0-1[37;1H[?25h[?25l[49;67H~@k[37;1H[49;67H   [38;1H[49;77H60,1  [38;1H[?25h[?25l[49;67H~@k[38;1H[49;67H   [39;1H[49;78H1[39;1H[?25h[?25l[49;67H~@k[39;1H[49;67H   [40;1H[49;78H2[40;1H[?25h[?25l[49;67H~@k[40;1H[49;67H   [41;1H[49;78H3[41;1H[?25h[?25l[49;67H~@k[41;1H[49;67H   [42;1H[49;78H4[42;1H[?25h[?25l[49;67H~@k[42;1H[49;67H   [43;1H[49;78H5[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;5Hs << [95m"Rectangle["[m << topLeft.toString() << [95m", "[m[49;77H[K[49;77H66,1[10C79%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;7H<< bottomRight.toString() << [95m"]"[m;[49;77H[K[49;77H67,0-1[8C82%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;5H[93mreturn[m s.str();[49;77H[K[49;77H68,1[10C86%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H69,1[10C89%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H70,1[10C93%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;1H};[49;77H[K[49;77H71,1[10C96%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;1H[38;5;81m#endif[m [96m//ifndef SHAPES_HH_[m[49;77H[K[49;77H72,1[10CBot[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [44;1H[49;78H3[44;1H[?25h[?25l[49;67H~@k[44;1H[49;67H   [45;1H[49;78H4[45;1H[?25h[?25l[49;67H~@k[45;1H[49;67H   [46;1H[49;78H5[46;1H[?25h[?25l[49;67H~@k[46;1H[49;67H   [47;1H[16;33H[46m{[47;1H}[m[49;78H6[47;1H[?25h[?25l[49;67H~@k[47;1H[49;67H   [48;1H[16;33H{[47;1H}[49;78H7[48;1H[?25h[?25l[49;67H~@k[48;1H[49;67H   [48;1H[?25h[?25l[49;67H~@k[48;1H[49;67H   [48;1H[?25h[?25l[49;67H~@k[48;1H[49;67H   [48;1H[?25h[?25l[49;67H~@k[48;1H[49;67H   [48;1H[?25h[?25l[49;67H~@k[48;1H[49;67H   [48;1H[?25h[?25l[49;67H~@k[48;1H[49;67H   [48;1H[?25h[?25l[49;67HZ[48;1H[?25h[?25l[49;68HZ[48;1H[?1006l[?1002l[?2004l
"shapes.hh"[49;67H[K[49;13H77L, 2038C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ vim shapes.hh [2@emacs[C[C[C[C[C[C[C[C[C[C[C[2Pvim[C[C[C[C[C[C[C[C[C[C[C[2Pcat main.cc[Cls[Kcat shapes.hh ls[K./main [7@cat shapes.hh[C[2Pmain.cc[C[4@tostring.hh[Cls[K./main [13@make -f ../Makefile[Cls[Kmake -f ../Makefile 
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ tostring.o point.o main.o -o main
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ make -f ../Makefile [6Pvim shapes.hh[C[2@emacs[C[C[C[C[C[C[C[C[C[C[C[2Pvim[C[C[C[C[C[C[C[C[C[C[C[2@emacs[C[C[C[C[C[C[C[C[C[C[C[2Pvim[C[C[C[C[C[C[C[C[C[C[C[6@make -f ../Makefile[C[Kvim main`[K.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main.cc" 55L, 1505C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"point.hh"[m
[35m#include [m[31m"shapes.hh"[m
[35m#include [m[31m"tostring.hh"[m

[35m#include [m[31m<iostream>[m

[32mstatic[m [32mconst[m Circle circles[] = {
  Circle([31m1[m, Point()),
  Circle([31m2[m, Point([31m1[m, [31m1[m)),
};
[32mstatic[m [32mconst[m Rectangle rectangles[] = {
  Rectangle(Point([31m1[m, [31m1[m), Point([31m4[m, [31m5[m)),
  Rectangle(Point([31m0[m, [31m0[m), Point([31m5[m, [31m4[m)),
};

[32mstatic[m [32mconst[m Shape* shapes[] = {
  &circles[[31m0[m], &rectangles[[31m0[m], &circles[[31m1[m], &rectangles[[31m1[m],
};
[32mconstexpr[m [32mauto[m nShapes = [38;5;130msizeof[m(shapes)/[38;5;130msizeof[m(shapes[[31m0[m]);


[32mstatic[m [32mvoid[m
outSizes(std::ostream& out)
{
  out << [31m"sizeof(double) = "[m << [38;5;130msizeof[m([32mdouble[m) << std::endl;
  out << [31m"sizeof(Point) = "[m << [38;5;130msizeof[m(Point) << std::endl << std::endl;

  out << [31m"sizeof(ToString) = "[m << [38;5;130msizeof[m(ToString) << std::endl;
  out << [31m"sizeof(Shape) = "[m << [38;5;130msizeof[m(Shape) << std::endl;
  out << [31m"sizeof(Circle) = "[m << [38;5;130msizeof[m(Circle) << std::endl;
  out << [31m"sizeof(Rectangle) = "[m << [38;5;130msizeof[m(Rectangle) << std::endl;
}

[32mstatic[m [32mvoid[m
outShapes(std::ostream& out)
{
  [38;5;130mfor[m ([32mauto[m i = [31m0u[m; i < nShapes; i++) {[39;5H[34m//pointed to Shape could be either a Circle or Rectangle.[m
    [32mauto[m shapeP = shapes[i];[42;5H[34m//if shapeP points to a Circle, then call Circle::perimeter();
[m    [34m//if shapeP points to a Rectangle, then call Rectangle::perimeter();
[m    [34m//choosing the code at runtime is referred to as *runtime polymorphism*.[m
    [32mauto[m perim = shapeP->perimeter();[47;5Hout << *shapeP << [31m" perimeter: "[m << perim << std::endl;
  }[49;77H1,1[11CTop]2;main.cc (~/projects/i240b/submit/lab4/exercises/2-shape) - VIM]1;main.cc[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"point.hh"[m
[38;5;81m#include [m[95m"shapes.hh"[m
[38;5;81m#include [m[95m"tostring.hh"[m

[38;5;81m#include [m[95m<iostream>[m

[38;5;121mstatic[m [38;5;121mconst[m Circle circles[] = {
  Circle([95m1[m, Point()),
  Circle([95m2[m, Point([95m1[m, [95m1[m)),
};
[38;5;121mstatic[m [38;5;121mconst[m Rectangle rectangles[] = {
  Rectangle(Point([95m1[m, [95m1[m), Point([95m4[m, [95m5[m)),
  Rectangle(Point([95m0[m, [95m0[m), Point([95m5[m, [95m4[m)),
};

[38;5;121mstatic[m [38;5;121mconst[m Shape* shapes[] = {
  &circles[[95m0[m], &rectangles[[95m0[m], &circles[[95m1[m], &rectangles[[95m1[m],
};
[38;5;121mconstexpr[m [38;5;121mauto[m nShapes = [93msizeof[m(shapes)/[93msizeof[m(shapes[[95m0[m]);


[38;5;121mstatic[m [38;5;121mvoid[m
outSizes(std::ostream& out)
{
  out << [95m"sizeof(double) = "[m << [93msizeof[m([38;5;121mdouble[m) << std::endl;
  out << [95m"sizeof(Point) = "[m << [93msizeof[m(Point) << std::endl << std::endl;

  out << [95m"sizeof(ToString) = "[m << [93msizeof[m(ToString) << std::endl;
  out << [95m"sizeof(Shape) = "[m << [93msizeof[m(Shape) << std::endl;
  out << [95m"sizeof(Circle) = "[m << [93msizeof[m(Circle) << std::endl;
  out << [95m"sizeof(Rectangle) = "[m << [93msizeof[m(Rectangle) << std::endl;
}

[38;5;121mstatic[m [38;5;121mvoid[m
outShapes(std::ostream& out)
{
  [93mfor[m ([38;5;121mauto[m i = [95m0u[m; i < nShapes; i++) {[39;5H[96m//pointed to Shape could be either a Circle or Rectangle.[m
    [38;5;121mauto[m shapeP = shapes[i];[42;5H[96m//if shapeP points to a Circle, then call Circle::perimeter();
[m    [96m//if shapeP points to a Rectangle, then call Rectangle::perimeter();
[m    [96m//choosing the code at runtime is referred to as *runtime polymorphism*.[m
    [38;5;121mauto[m perim = shapeP->perimeter();[47;5Hout << *shapeP << [95m" perimeter: "[m << perim << std::endl;
  }[49;77H1,1[11CTop"main.cc" 55L, 1505C[1;1H[?25h[?25l[49;67H~@k[1;1H[49;67H   [2;1H[49;77H2[2;1H[?25h[?25l[49;67H~@k[2;1H[49;67H   [3;1H[49;77H3[3;1H[?25h[?25l[49;67H~@k[3;1H[49;67H   [4;1H[49;77H4,0-1[4;1H[?25h[?25l[49;67H~@k[4;1H[49;67H   [5;1H[49;77H5,1  [5;1H[?25h[?25l[49;67H~@k[5;1H[49;67H   [6;1H[49;77H6,0-1[6;1H[?25h[?25l[49;67H~@k[6;1H[49;67H   [7;1H[49;77H7,1  [7;1H[?25h[?25l[49;67H~@k[7;1H[49;67H   [8;1H[49;77H8[8;1H[?25h[?25l[49;67H~@k[8;1H[49;67H   [9;1H[49;77H9[9;1H[?25h[?25l[49;67H~@k[9;1H[49;67H   [10;1H[7;33H[46m{


}[m[49;77H10,1[10;1H[?25h[?25l[49;67H~@k[10;1H[49;67H   [11;1H[7;33H{


}[49;78H1[11;1H[?25h[?25l[49;67H~@k[11;1H[49;67H   [12;1H[49;78H2[12;1H[?25h[?25l[49;67H~@k[12;1H[49;67H   [13;1H[49;78H3[13;1H[?25h[?25l[49;67H~@k[13;1H[49;67H   [14;1H[11;39H[46m{


}[m[49;78H4[14;1H[?25h[?25l[49;67H~@k[14;1H[49;67H   [15;1H[11;39H{


}[49;78H5,0-1[15;1H[?25h[?25l[49;67H~@k[15;1H[49;67H   [16;1H[49;78H6,1  [16;1H[?25h[?25l[49;67H~@k[16;1H[49;67H   [17;1H[49;78H7[17;1H[?25h[?25l[49;67H~@k[17;1H[49;67H   [18;1H[16;32H[46m{

}[m[49;78H8[18;1H[?25h[?25l[49;67H~@k[18;1H[49;67H   [19;1H[16;32H{

}[49;78H9[19;1H[?25h[?25l[49;67H~@k[19;1H[49;67H   [20;1H[49;77H20,0-1[20;1H[?25h[?25l[49;67H~@k[20;1H[49;67H   [21;1H[49;78H1[21;1H[?25h[?25l[49;67H~@k[21;1H[49;67H   [22;1H[49;78H2,1  [22;1H[?25h[?25l[49;67H~@k[22;1H[49;67H   [23;1H[49;78H3[23;1H[?25h[?25l[49;67H~@k[23;1H[49;67H   [24;1H[46m{[32;1H}[m[49;78H4[24;1H[?25h[?25l[49;67H~@k[24;1H[49;67H   [25;1H[24;1H{[32;1H}[49;78H5[25;1H[?25h[?25l[49;67H~@k[25;1H[49;67H   [26;1H[49;78H6[26;1H[?25h[?25l[49;67H~@k[26;1H[49;67H   [27;1H[49;78H7[27;1H[?25h[?25l[49;67H~@k[27;1H[49;67H   [28;1H[49;78H8[28;1H[?25h[?25l[49;67H~@k[28;1H[49;67H   [29;1H[49;78H9[29;1H[?25h[?25l[49;67H~@k[29;1H[49;67H   [30;1H[49;77H30[30;1H[?25h[?25l[49;67H~@k[30;1H[49;67H   [31;1H[49;78H1[31;1H[?25h[?25l[49;67H~@k[31;1H[49;67H   [32;1H[24;1H[46m{[32;1H}[m[49;78H2[32;1H[?25h[?25l[49;67H~@k[32;1H[49;67H   [33;1H[24;1H{[32;1H}[49;78H3,0-1[33;1H[?25h[?25l[49;67H~@k[33;1H[49;67H   [34;1H[49;78H4,1  [34;1H[?25h[?25l[49;67H~@k[34;1H[49;67H   [35;1H[49;78H5[35;1H[?25h[?25l[49;67H~@k[35;1H[49;67H   [36;1H[49;78H6[36;1H[?25h[?25l[49;67H~@k[36;1H[49;67H   [37;1H[49;78H7[37;1H[?25h[?25l[49;67H~@k[37;1H[49;67H   [38;1H[49;78H8,0-1[38;1H[?25h[?25l[49;67H~@k[38;1H[49;67H   [39;1H[49;78H9,1  [39;1H[?25h[?25l[49;67H~@k[39;1H[49;67H   [40;1H[49;77H40[40;1H[?25h[?25l[49;67H~@k[40;1H[49;67H   [41;1H[49;78H1,0-1[41;1H[?25h[?25l[49;67H~@k[41;1H[49;67H   [42;1H[49;78H2,1  [42;1H[?25h[?25l[49;67H~@k[42;1H[49;67H   [43;1H[49;78H3[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;1H}[49;1H[K[49;77H44,1[10C14%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H45,1[10C28%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;1H[38;5;121mint[m main() {[49;77H[K[49;77H46,1[10C42%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3Hstd::ostream& out = std::cout;[49;77H[K[49;77H47,1[10C57%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3HoutShapes(out); out << std::endl;[49;77H[K[49;77H48,1[10C71%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[30;1H[46m{[43;1H}[m[48;3HoutSizes(out); out << std::endl;[49;77H[K[49;77H49,1[10C85%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[29;1H{[42;1H}[48;1H}[49;77H[K[49;77H50,0-1[8CBot[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [44;1H[49;78H1,1  [44;1H[?25h[?25l[49;67H~@k[44;1H[49;67H   [45;1H[49;78H2[45;1H[?25h[?25l[49;67H~@k[45;1H[49;67H   [46;1H[49;78H3[46;1H[?25h[?25l[49;67H~@k[46;1H[49;67H   [47;1H[49;78H4[47;1H[?25h[?25l[49;67H~@k[47;1H[49;67H   [48;1H[44;12H[46m{[48;1H}[m[49;78H5[48;1H[?25h[?25l[49;67H~@k[48;1H[49;67H   [48;1H[?25h[?25l[49;67H~@k[48;1H[49;67H   [48;1H[?25h[?25l[49;67H~@k[48;1H[49;67H   [48;1H[?25h[?25l[49;67H~@k[48;1H[49;67H   [48;1H[?25h[?25l[49;67H~@k[48;1H[49;67H   [47;1H[44;12H{[48;1H}[49;78H4[47;1H[?25h[?25l[49;67H~@k[47;1H[49;67H   [46;1H[49;78H3[46;1H[?25h[?25l[49;67H~@k[46;1H[49;67H   [45;1H[49;78H2[45;1H[?25h[?25l[49;67H~@k[45;1H[49;67H   [44;1H[49;78H1[44;1H[?25h[?25l[49;67H~@k[44;1H[49;67H   [43;1H[49;78H0,0-1[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [42;1H[29;1H[46m{[42;1H}[m[49;77H49,1  [42;1H[?25h[?25l[49;67H~@k[42;1H[49;67H   [41;1H[29;1H{[42;1H}[49;78H8[41;1H[?25h[?25l[49;67H~@k[41;1H[49;67H   [40;1H[49;78H7[40;1H[?25h[?25l[49;67H~@k[40;1H[49;67H   [39;1H[49;78H6[39;1H[?25h[?25l[49;67H~@k[39;1H[49;67H   [38;1H[49;78H5[38;1H[?25h[?25l[49;67H~@k[38;1H[49;67H   [37;1H[49;78H4[37;1H[?25h[?25l[49;67H~@k[37;1H[49;67H   [36;1H[49;78H3[36;1H[?25h[?25l[49;67H~@k[36;1H[49;67H   [35;1H[49;78H2[35;1H[?25h[?25l[49;67H~@k[35;1H[49;67H   [34;1H[49;78H1,0-1[34;1H[?25h[?25l[49;67H~@k[34;1H[49;67H   [33;1H[49;78H0,1  [33;1H[?25h[?25l[49;67H~@k[33;1H[49;67H   [32;1H[49;77H39[32;1H[?25h[?25l[49;67H~@k[32;1H[49;67H   [31;1H[49;78H8,0-1[31;1H[?25h[?25l[49;67H~@k[31;1H[49;67H   [30;1H[49;78H7,1  [30;1H[?25h[?25l[49;67H~@k[30;1H[49;67H   [29;1H[46m{[42;1H}[m[49;78H6[29;1H[?25h[?25l[49;67H~@k[29;1H[49;67H   [28;1H
{[42;1H}[49;78H5[28;1H[?25h[?25l[49;67H~@k[28;1H[49;67H   [27;1H[49;78H4[27;1H[?25h[?25l[49;67H~@k[27;1H[49;67H   [26;1H[49;78H3,0-1[26;1H[?25h[?25l[49;67H~@k[26;1H[49;67H   [25;1H[17;1H[46m{[25;1H}[m[49;78H2,1  [25;1H[?25h[?25l[49;67H~@k[25;1H[49;67H   [24;1H[17;1H{[25;1H}[49;78H1[24;1H[?25h[?25l[49;67H~@k[24;1H[49;67H   [23;1H[49;78H0[23;1H[?25h[?25l[49;67H~@k[23;1H[49;67H   [22;1H[49;77H29[22;1H[?25h[?25l[49;67H~@k[22;1H[49;67H   [21;1H[49;78H8[21;1H[?25h[?25l[49;67H~@k[21;1H[49;67H   [20;1H[49;78H7[20;1H[?25h[?25l[49;67H~@k[20;1H[49;67H   [19;1H[49;78H6[19;1H[?25h[?25l[49;67H~@k[19;1H[49;67H   [18;1H[49;78H5[18;1H[?25h[?25l[49;67H~@k[18;1H[49;67H   [17;1H[46m{[25;1H}[m[49;78H4[17;1H[?25h[?25l[49;67H~@k[17;1H[49;67H   [16;1H
{[25;1H}[49;78H3[16;1H[?25h[?25l[49;67H~@k[16;1H[49;67H   [15;1H[49;78H2[15;1H[?25h[?25l[49;67H~@k[15;1H[49;67H   [14;1H[49;78H1,0-1[14;1H[?25h[?25l[49;67H~@k[14;1H[49;67H   [13;1H[49;78H0[13;1H[?25h[?25l[49;67H~@k[13;1H[49;67H   [14;1H[49;78H1[14;1H[?25h[?25l[49;67H~@k[14;1H[49;67H   [15;1H[49;78H2,1  [15;1H[?25h[?25l[49;67H~@k[15;1H[49;67H   [16;1H[49;78H3[16;1H[?25h[?25l[49;67H~@k[16;1H[49;67H   [17;1H[46m{[25;1H}[m[49;78H4[17;1H[?25h[?25l[49;67H~@k[17;1H[49;67H   [18;1H[17;1H{[25;1H}[49;78H5[18;1H[?25h[?25l[49;67H~@k[18;1H[49;67H   [19;1H[49;78H6[19;1H[?25h[?25l[49;67H~@k[19;1H[49;67H   [20;1H[49;78H7[20;1H[?25h[?25l[49;67H~@k[20;1H[49;67H   [21;1H[49;78H8[21;1H[?25h[?25l[49;67H~@k[21;1H[49;67H   [22;1H[49;78H9[22;1H[?25h[?25l[49;67H~@k[22;1H[49;67H   [23;1H[49;77H30[23;1H[?25h[?25l[49;67H~@k[23;1H[49;67H   [24;1H[49;78H1[24;1H[?25h[?25l[49;67H~@k[24;1H[49;67H   [25;1H[17;1H[46m{[25;1H}[m[49;78H2[25;1H[?25h[?25l[49;67H~@k[25;1H[49;67H   [26;1H[17;1H{[25;1H}[49;78H3,0-1[26;1H[?25h[?25l[49;67H~@k[26;1H[49;67H   [27;1H[49;78H4,1  [27;1H[?25h[?25l[49;67H~@k[27;1H[49;67H   [28;1H[49;78H5[28;1H[?25h[?25l[49;67H~@k[28;1H[49;67H   [29;1H[46m{[42;1H}[m[49;78H6[29;1H[?25h[?25l[49;67H~@k[29;1H[49;67H   [30;1H[29;1H{[42;1H}[49;78H7[30;1H[?25h[?25l[49;67H~@k[30;1H[49;67H   [31;1H[49;78H8,0-1[31;1H[?25h[?25l[49;67H~@k[31;1H[49;67H   [32;1H[49;78H9,1  [32;1H[?25h[?25l[49;67H~@k[32;1H[49;67H   [33;1H[49;77H40[33;1H[?25h[?25l[49;67H~@k[33;1H[49;67H   [34;1H[49;78H1,0-1[34;1H[?25h[?25l[49;67H~@k[34;1H[49;67H   [35;1H[49;78H2,1  [35;1H[?25h[?25l[49;67H~@k[35;1H[49;67H   [36;1H[49;78H3[36;1H[?25h[?25l[49;67H~@k[36;1H[49;67H   [37;1H[49;78H4[37;1H[?25h[?25l[49;67H~@k[37;1H[49;67H   [38;1H[49;78H5[38;1H[?25h[?25l[49;67H~@k[38;1H[49;67H   [39;1H[49;78H6[39;1H[?25h[?25l[49;67H~@k[39;1H[49;67H   [40;1H[49;78H7[40;1H[?25h[?25l[49;67H~@k[40;1H[49;67H   [41;1H[49;78H8[41;1H[?25h[?25l[49;67H~@k[41;1H[49;67H   [40;1H[49;78H7[40;1H[?25h[?25l[49;67Hi[40;1H[49;67H [40;1H[49;1H[1m-- INSERT --[m[49;77H[K[49;77H47,1[10CBot[40;1H[?25h[?25l[49;80H2[40;2H[?25h[?25l[49;80H3[40;3H[?25h[?25l[49;80H4[40;4H[?25h[49;1H[K[40;3H[?25l[49;67H^[[40;3H[49;67H  [40;4H[49;77H47,3[10CBot[40;3H[?25h[?25l[49;67H~@k[40;3H[49;67H   [41;3H[30;39H[46m{[41;3H}[m[49;78H8[41;3H[?25h[?25l[49;67H~@k[41;3H[49;67H   [40;3H[30;39H{[41;3H}[49;78H7[40;3H[?25h[?25l[49;67H0[40;3H[49;67H [40;1H[49;80H1[40;1H[?25h[?25l[49;67H~@k[40;1H[49;67H   [40;2H[49;80H2[40;2H[?25h[?25l[49;67H~@k[40;2H[49;67H   [40;3H[49;80H3[40;3H[?25h[?25l[49;67H~@k[40;3H[49;67H   [40;4H[49;80H4[40;4H[?25h[?25l[49;67H$[40;4H[49;67H [40;59H[49;80H59[40;59H[?25h[?25l[49;67Hi[40;59H[49;67H [40;59H[49;1H[1m-- INSERT --[m[49;77H[K[49;77H47,59[9CBot[40;59H[?25h[?25l[49;80H60[40;60H[?25h[?25l[41;48r[41;1H[L[1;49r[49;77H[K[49;77H48,5[10C87%]2;main.cc + (~/projects/i240b/submit/lab4/exercises/2-shape) - VIM]1;main.cc[41;5H[?25h[?25lo[49;80H6[41;6H[?25h[?25lu[49;80H7[41;7H[?25h[?25lt[49;80H8[41;8H[?25h[?25l[49;80H9[41;9H[?25h[?25l<[49;80H10[41;10H[?25h[?25l<[49;81H1[41;11H[?25h[?25l[49;81H2[41;12H[?25h[?25l*[49;81H3[41;13H[?25h[?25ls[49;81H4[41;14H[?25h[?25lh[49;81H5[41;15H[?25h[?25la[49;81H6[41;16H[?25h[?25lp[49;81H7[41;17H[?25h[?25le[49;81H8[41;18H[?25h[?25lP[49;81H9[41;19H[?25h[?25l[49;80H20[41;20H[?25h[?25l<[49;81H1[41;21H[?25h[?25l<[49;81H2[41;22H[?25h[?25l[49;81H3[41;23H[?25h[?25l[95m"[m[49;81H4[41;24H[?25h[?25l[95m [m[49;81H5[41;25H[?25h[?25l[95ma[m[49;81H6[41;26H[?25h[?25l[95mr[m[49;81H7[41;27H[?25h[?25l[95me[m[49;81H8[41;28H[?25h[?25l[95ma[m[49;81H9[41;29H[?25h[?25l[95m:[m[49;80H30[41;30H[?25h[?25l[95m [m[49;81H1[41;31H[?25h[?25l[95m"[m[49;81H2[41;32H[?25h[?25l[49;81H3[41;33H[?25h[?25l[49;78H7[40;33H[?25h[?25l[49;81H4[40;34H[?25h[?25l[49;81H5[40;35H[?25h[?25l[49;81H6[40;36H[?25h[?25l[49;81H7[40;37H[?25h[?25l[49;81H8[40;38H[?25h[?25l[49;81H9[40;39H[?25h[?25l[49;80H40[40;40H[?25h[?25l[49;81H1[40;41H[?25h[?25l[49;81H2[40;42H[?25h[?25l[49;81H3[40;43H[?25h[?25l[49;81H4[40;44H[?25h[?25l[49;81H5[40;45H[?25h[?25l[49;81H6[40;46H[?25h[?25l[49;81H7[40;47H[?25h[?25l[49;81H8[40;48H[?25h[?25l[49;81H9[40;49H[?25h[?25l[49;80H50[40;50H[?25h[?25l[49;81H1[40;51H[?25h[?25l[49;81H2[40;52H[?25h[?25l[49;81H3[40;53H[?25h[?25l[49;81H4[40;54H[?25h[?25l[49;81H5[40;55H[?25h[?25l[49;81H6[40;56H[?25h[?25l[49;81H7[40;57H[?25h[?25l[49;81H8[40;58H[?25h[?25l[49;81H9[40;59H[?25h[?25l[49;80H60[40;60H[?25h[?25l[49;80H59[40;59H[?25h[?25l;[40;59H[K[49;81H8[40;58H[?25h[?25l;[40;58H[K[49;81H7[40;57H[?25h[?25l;[40;57H[K[49;81H6[40;56H[?25h[?25l;[40;56H[K[49;81H5[40;55H[?25h[?25l;[40;55H[K[49;81H4[40;54H[?25h[?25l;[40;54H[K[49;81H3[40;53H[?25h[?25l;[40;53H[K[49;81H2[40;52H[?25h[?25l;[40;52H[K[49;81H1[40;51H[?25h[?25l;[40;51H[K[49;81H0[40;50H[?25h[?25l;[40;50H[K[49;80H49[40;49H[?25h[?25l;[40;49H[K[49;81H8[40;48H[?25h[?25l;[40;48H[K[49;81H7[40;47H[?25h[?25l;[40;47H[K[49;81H6[40;46H[?25h[?25l[49;78H8,33[41;33H[?25h[?25l[49;81H2[41;32H[?25h[?25l[49;81H3[41;33H[?25h[?25l[49;81H2[41;32H[?25h[?25l[49;81H3[41;33H[?25h[?25l<[49;81H4[41;34H[?25h[?25l<[49;81H5[41;35H[?25h[?25l[49;81H6[41;36H[?25h[?25l[49;78H7[40;36H[?25h[?25l[49;78H6,5 [39;5H[?25h[?25l[38;35H[46m()[m[49;78H5,36[38;36H[?25h[?25l[49;81H7[38;37H[?25h[?25l()[49;81H8[38;38H[?25h[?25l[39;48r[39;1H[L[1;49r[49;77H[K[49;77H46,5[10C77%[39;5H[?25h[?25la[49;80H6[39;6H[?25h[?25lu[49;80H7[39;7H[?25h[?25lt[49;80H8[39;8H[?25h[?25l[38;5;121mauto[m[49;80H9[39;9H[?25h[?25l[49;80H10[39;10H[?25h[?25la[49;81H1[39;11H[?25h[?25lr[49;81H2[39;12H[?25h[?25le[49;81H3[39;13H[?25h[?25la[49;81H4[39;14H[?25h[?25l[49;81H5[39;15H[?25h[?25l=[49;81H6[39;16H[?25h[?25l[49;81H7[39;17H[?25h[?25ls[49;81H8[39;18H[?25h[?25lh[49;81H9[39;19H[?25h[?25la[49;80H20[39;20H[?25h[?25lp[49;81H1[39;21H[?25h[?25le[49;81H2[39;22H[?25h[?25lP[49;81H3[39;23H[?25h[?25l-[49;81H4[39;24H[?25h[?25l>[49;81H5[39;25H[?25h[?25la[49;81H6[39;26H[?25h[?25lr[49;81H7[39;27H[?25h[?25le[49;81H8[39;28H[?25h[?25la[49;81H9[39;29H[?25h[?25l([49;80H30[39;30H[?25h[?25l)[46m()[m[49;81H1[39;31H[?25h[?25l;()[49;81H2[39;32H[?25h[?25l[49;78H7,5 [40;5H[?25h[?25l[49;78H8,32[41;32H[?25h[?25l[49;78H9[42;32H[?25h[?25l[49;81H3[42;33H[?25h[?25l[49;81H4[42;34H[?25h[?25l[49;81H5[42;35H[?25h[?25l[49;81H6[42;36H[?25h[?25la[49;81H7[42;37H[?25h[?25lr[49;81H8[42;38H[?25h[?25le[49;81H9[42;39H[?25h[?25la[49;80H40[42;40H[?25h[?25l[49;81H1[42;41H[?25h[?25l<[49;81H2[42;42H[?25h[?25l<[49;81H3[42;43H[?25h[?25l[49;81H4[42;44H[?25h[?25le[49;81H5[42;45H[?25h[?25ln[49;81H6[42;46H[?25h[?25ld[49;81H7[42;47H[?25h[?25ll[49;81H8[42;48H[?25h[?25l;[49;81H9[42;49H[?25h[?25l[49;78H8,47[41;47H[?25h[?25l[49;78H7,5 [40;5H[?25h[?25l[49;78H6,32[39;32H[?25h[?25l[49;78H5,38[38;38H[?25h[?25l[49;78H4,49[37;49H[?25h[?25l[49;78H3[36;49H[?25h[?25l[49;78H2[35;49H[?25h[?25l[49;78H1,1 [34;1H[?25h[?25l[49;78H0,29[33;29H[?25h[?25l[49;77H39,4[32;49H[?25h[?25l[49;78H8,1 [31;1H[?25h[?25l[30;39H[46m{[43;3H}[m[49;78H7,40[30;40H[?25h[?25l[29;1H[46m{[m[30;39H{[43;3H}
[46m}[m[49;78H6,2 [29;2H[?25h[?25l[28;10H[46m([17C)[m
{[44;1H}[49;78H5,29[28;29H[?25h[?25l[28;10H([17C)[49;78H4,12[27;12H[?25h[?25l[49;78H3,1 [26;1H[?25h[?25l[17;1H[46m{[25;1H}[m[49;78H2,2[25;2H[?25h[?25l[17;1H{[25;1H}[49;78H1,49[24;49H[?25h[?25l[49;78H0[23;49H[?25h[?25l[49;77H29[22;49H[?25h[?25l[49;78H8[21;49H[?25h[?25l[49;78H7,3 [20;3H[?25h[?25l[49;78H6,49[19;49H[?25h[?25l[49;78H5[18;49H[?25h[?25l[17;1H[46m{[25;1H}[m[49;78H4,2 [17;2H[?25h[?25l[16;9H[46m([17C)[m
{[25;1H}[49;78H3,28[16;28H[?25h[?25l[16;9H([17C)[49;78H2,12[15;12H[?25h[?25l[49;78H1,1 [14;1H[?25h[?25l[49;78H0[13;1H[?25h[?25l[49;77H19,49[12;49H[?25h[?25l[49;78H8,3 [11;3H[?25h[?25l[49;78H7,49[10;49H[?25h[?25l[9;32H[46m{

}[m[49;78H6,33[9;33H[?25h[?25l{

}[49;78H5,1 [8;1H[?25h[?25l[49;78H4,3[7;3H[?25h[?25l[49;78H3,39[6;39H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;121mstatic[m [38;5;121mconst[m Circle circles[] = {[49;77H[K[49;77H12,39[9C66%[6;39H[?25h[?25l[1;48r[1;1H[L[1;49r[49;77H[K[49;77H11,40[9C55%[6;39H[46m{


}[6;40H[?25h[?25l[1;48r[m[1;1H[L[1;49r[1;1H[38;5;81m#include [m[95m<iostream>[m[49;77H[K[49;77H10,3[10C44%[7;39H{


}[6;3H[?25h[?25l[1;48r[1;1H[L[1;49r[49;77H[K[49;77H9,26[10C33%[6;26H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;81m#include [m[95m"tostring.hh"[m[49;77H[K[49;77H8,22[10C22%[6;22H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;81m#include [m[95m"shapes.hh"[m[49;77H[K[49;77H7,34[10C11%[6;33H[46m{


}[6;34H[?25h[?25l[1;48r[m[1;1H[L[1;49r[1;1H[38;5;81m#include [m[95m"point.hh"[m[49;77H[K[49;77H6,1[11CTop[7;33H{


}[6;1H[?25h[?25l[49;77H5,20[5;20H[?25h[?25l[49;77H4,1 [4;1H[?25h[?25l[49;77H3,23[3;23H[?25h[?25l[49;77H2,21[2;21H[?25h[?25l[49;77H1,20[1;20H[?25h[?25l[49;77H2,21[2;21H[?25h[?25l[49;77H3,23[3;23H[?25h[?25l[49;77H4,1 [4;1H[?25h[?25l[49;77H5,20[5;20H[?25h[?25l[49;77H6,1 [6;1H[?25h[?25lu[49;79H2[6;2H[?25h[?25ls[49;79H3[6;3H[?25h[?25li[49;79H4[6;4H[?25h[?25ln[49;79H5[6;5H[?25h[?25l[93musing[m[49;79H6[6;6H[?25h[?25l[49;79H7[6;7H[?25h[?25ln[49;79H8[6;8H[?25h[?25la[49;79H9[6;9H[?25h[?25lm[49;79H10[6;10H[?25h[?25le[49;80H1[6;11H[?25h[?25ls[49;80H2[6;12H[?25h[?25lp[49;80H3[6;13H[?25h[?25la[49;80H4[6;14H[?25h[?25lc[49;80H5[6;15H[?25h[?25l[6;7H[38;5;121mnamespace[m[49;80H6[6;16H[?25h[?25l[49;80H7[6;17H[?25h[?25ls[49;80H8[6;18H[?25h[?25lt[49;80H9[6;19H[?25h[?25ld[49;79H20[6;20H[?25h[?25l;[49;80H1[6;21H[?25h[?25l[7;48r[7;1H[L[1;49r[49;77H[K[49;77H7,1[11CTop[7;1H[?25h[49;1H[K[7;1H[?25l[49;67H^[[7;1H[49;67H  [7;1H[49;77H7,0-1[9CTop[7;1H[?25h[?25l[49;67HZ[7;1H[?25h[?25l[49;68HZ[7;1H[?1006l[?1002l[?2004l[49;1H"main.cc"[49;67H[K[49;11H58L, 1594C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ make -f ../Makefile 
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
[01m[Kmain.cc:[m[K In function â€˜[01m[Kvoid outShapes(std::ostream&)[m[Kâ€™:
[01m[Kmain.cc:47:25:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst class Shape[m[Kâ€™ has no member named â€˜[01m[Karea[m[Kâ€™
     auto area = shapeP->[01;31m[Karea[m[K();
                         [01;31m[K^~~~[m[K
make: *** [../Makefile:48: main.o] Error 1
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ make -f ../Makefile [8Pvim main.cc[C[8@make -f ../Makefile[C[8Pvim main.cc[C[8@make -f ../Makefile[C[Kvim shapes.hh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"shapes.hh" 77L, 2038C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;3H[34m/** return perimeter of this circle */[m
  [32mdouble[m perimeter() [32mconst[m { [38;5;130mreturn[m [31m2[m * [31mM_PI[m * radius; }

  [32mdouble[m area() [32mconst[m { [38;5;130mreturn[m [31mM_PI[m * radius * radius; }
  [34m/** return string representation of this circle */[m
  std::string toString() [32mconst[m {
    std::stringstream s;
    s << [31m"Circle["[m << origin << [31m", "[m << radius << [31m"]"[m;
    [38;5;130mreturn[m s.str();
  }

};

[34m/* A Rectangle is another concrete Shape */[m
[32mstruct[m Rectangle : [38;5;130mpublic[m Shape {
  [32mconst[m Point topLeft, bottomRight;

  [34m/** constructor: no default value for parameters */[m
  Rectangle(Point p1, Point p2) : topLeft(p1), bottomRight(p2) {}

  [34m/** return perimeter of this rectangle */[m
  [32mdouble[m perimeter() [32mconst[m {
    [32mdouble[m width = bottomRight.x - topLeft.x;
    [38;5;130mif[m (width < [31m0[m) width = -width;
    [32mdouble[m height = bottomRight.y - topLeft.y;
    [38;5;130mif[m (height < [31m0[m) height = -height;
    [38;5;130mreturn[m [31m2[m * (width + height);
  }

  [32mdouble[m area() [32mconst[m {
    [32mdouble[m width = bottomRight.x - topLeft.x;
    [38;5;130mif[m (width < [31m0[m) width = -width;
    [32mdouble[m height = bottomRight.y - topLeft.y;
    [38;5;130mif[m (height < [31m0[m) height = -height;
    [38;5;130mreturn[m width * height;
  }

  [34m/** return string representation of this rectangle */[m
  std::string toString() [32mconst[m {
    std::stringstream s;
    s << [31m"Rectangle["[m << topLeft.toString() << [31m", "[m[43;7H<< bottomRight.toString() << [31m"]"[m;
    [38;5;130mreturn[m s.str();
  }

};
[35m#endif[m [34m//ifndef SHAPES_HH_[m[49;77H77,1[10CBot]2;shapes.hh (~/projects/i240b/submit/lab4/exercises/2-shape) - VIM]1;shapes.hh[48;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[2;3H[96m/** return perimeter of this circle */[m
  [38;5;121mdouble[m perimeter() [38;5;121mconst[m { [93mreturn[m [95m2[m * [95mM_PI[m * radius; }

  [38;5;121mdouble[m area() [38;5;121mconst[m { [93mreturn[m [95mM_PI[m * radius * radius; }
  [96m/** return string representation of this circle */[m
  std::string toString() [38;5;121mconst[m {
    std::stringstream s;
    s << [95m"Circle["[m << origin << [95m", "[m << radius << [95m"]"[m;
    [93mreturn[m s.str();
  }

};

[96m/* A Rectangle is another concrete Shape */[m
[38;5;121mstruct[m Rectangle : [93mpublic[m Shape {
  [38;5;121mconst[m Point topLeft, bottomRight;

  [96m/** constructor: no default value for parameters */[m
  Rectangle(Point p1, Point p2) : topLeft(p1), bottomRight(p2) {}

  [96m/** return perimeter of this rectangle */[m
  [38;5;121mdouble[m perimeter() [38;5;121mconst[m {
    [38;5;121mdouble[m width = bottomRight.x - topLeft.x;
    [93mif[m (width < [95m0[m) width = -width;
    [38;5;121mdouble[m height = bottomRight.y - topLeft.y;
    [93mif[m (height < [95m0[m) height = -height;
    [93mreturn[m [95m2[m * (width + height);
  }

  [38;5;121mdouble[m area() [38;5;121mconst[m {
    [38;5;121mdouble[m width = bottomRight.x - topLeft.x;
    [93mif[m (width < [95m0[m) width = -width;
    [38;5;121mdouble[m height = bottomRight.y - topLeft.y;
    [93mif[m (height < [95m0[m) height = -height;
    [93mreturn[m width * height;
  }

  [96m/** return string representation of this rectangle */[m
  std::string toString() [38;5;121mconst[m {
    std::stringstream s;
    s << [95m"Rectangle["[m << topLeft.toString() << [95m", "[m[43;7H<< bottomRight.toString() << [95m"]"[m;
    [93mreturn[m s.str();
  }

};
[38;5;81m#endif[m [96m//ifndef SHAPES_HH_[m[49;77H77,1[10CBot"shapes.hh" 77L, 2038C[48;1H[?25h[?25l[49;67HZ[48;1H[?25h[?25l[49;68HZ[48;1H
[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ make clean -f ../Makefile 
rm -rf *.o *~ main .deps .gitignore
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ make clean -f ../Makefile [1P[1P[1P[1P[1P[1P
g++ -MT tostring.o -MMD -MP -MF .deps/tostring.d -g -Wall -std=c++17 -c tostring.cc
g++ -MT point.o -MMD -MP -MF .deps/point.d -g -Wall -std=c++17 -c point.cc
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
[01m[Kmain.cc:[m[K In function â€˜[01m[Kvoid outShapes(std::ostream&)[m[Kâ€™:
[01m[Kmain.cc:47:25:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst class Shape[m[Kâ€™ has no member named â€˜[01m[Karea[m[Kâ€™
     auto area = shapeP->[01;31m[Karea[m[K();
                         [01;31m[K^~~~[m[K
make: *** [../Makefile:48: main.o] Error 1
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ vim c[Kshapes.hh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"shapes.hh" 77L, 2038C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;3H[34m/** return perimeter of this circle */[m
  [32mdouble[m perimeter() [32mconst[m { [38;5;130mreturn[m [31m2[m * [31mM_PI[m * radius; }

  [32mdouble[m area() [32mconst[m { [38;5;130mreturn[m [31mM_PI[m * radius * radius; }
  [34m/** return string representation of this circle */[m
  std::string toString() [32mconst[m {
    std::stringstream s;
    s << [31m"Circle["[m << origin << [31m", "[m << radius << [31m"]"[m;
    [38;5;130mreturn[m s.str();
  }

};

[34m/* A Rectangle is another concrete Shape */[m
[32mstruct[m Rectangle : [38;5;130mpublic[m Shape {
  [32mconst[m Point topLeft, bottomRight;

  [34m/** constructor: no default value for parameters */[m
  Rectangle(Point p1, Point p2) : topLeft(p1), bottomRight(p2) {}

  [34m/** return perimeter of this rectangle */[m
  [32mdouble[m perimeter() [32mconst[m {
    [32mdouble[m width = bottomRight.x - topLeft.x;
    [38;5;130mif[m (width < [31m0[m) width = -width;
    [32mdouble[m height = bottomRight.y - topLeft.y;
    [38;5;130mif[m (height < [31m0[m) height = -height;
    [38;5;130mreturn[m [31m2[m * (width + height);
  }

  [32mdouble[m area() [32mconst[m {
    [32mdouble[m width = bottomRight.x - topLeft.x;
    [38;5;130mif[m (width < [31m0[m) width = -width;
    [32mdouble[m height = bottomRight.y - topLeft.y;
    [38;5;130mif[m (height < [31m0[m) height = -height;
    [38;5;130mreturn[m width * height;
  }

  [34m/** return string representation of this rectangle */[m
  std::string toString() [32mconst[m {
    std::stringstream s;
    s << [31m"Rectangle["[m << topLeft.toString() << [31m", "[m[43;7H<< bottomRight.toString() << [31m"]"[m;
    [38;5;130mreturn[m s.str();
  }

};
[35m#endif[m [34m//ifndef SHAPES_HH_[m[49;77H77,1[10CBot]2;shapes.hh (~/projects/i240b/submit/lab4/exercises/2-shape) - VIM]1;shapes.hh[48;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[2;3H[96m/** return perimeter of this circle */[m
  [38;5;121mdouble[m perimeter() [38;5;121mconst[m { [93mreturn[m [95m2[m * [95mM_PI[m * radius; }

  [38;5;121mdouble[m area() [38;5;121mconst[m { [93mreturn[m [95mM_PI[m * radius * radius; }
  [96m/** return string representation of this circle */[m
  std::string toString() [38;5;121mconst[m {
    std::stringstream s;
    s << [95m"Circle["[m << origin << [95m", "[m << radius << [95m"]"[m;
    [93mreturn[m s.str();
  }

};

[96m/* A Rectangle is another concrete Shape */[m
[38;5;121mstruct[m Rectangle : [93mpublic[m Shape {
  [38;5;121mconst[m Point topLeft, bottomRight;

  [96m/** constructor: no default value for parameters */[m
  Rectangle(Point p1, Point p2) : topLeft(p1), bottomRight(p2) {}

  [96m/** return perimeter of this rectangle */[m
  [38;5;121mdouble[m perimeter() [38;5;121mconst[m {
    [38;5;121mdouble[m width = bottomRight.x - topLeft.x;
    [93mif[m (width < [95m0[m) width = -width;
    [38;5;121mdouble[m height = bottomRight.y - topLeft.y;
    [93mif[m (height < [95m0[m) height = -height;
    [93mreturn[m [95m2[m * (width + height);
  }

  [38;5;121mdouble[m area() [38;5;121mconst[m {
    [38;5;121mdouble[m width = bottomRight.x - topLeft.x;
    [93mif[m (width < [95m0[m) width = -width;
    [38;5;121mdouble[m height = bottomRight.y - topLeft.y;
    [93mif[m (height < [95m0[m) height = -height;
    [93mreturn[m width * height;
  }

  [96m/** return string representation of this rectangle */[m
  std::string toString() [38;5;121mconst[m {
    std::stringstream s;
    s << [95m"Rectangle["[m << topLeft.toString() << [95m", "[m[43;7H<< bottomRight.toString() << [95m"]"[m;
    [93mreturn[m s.str();
  }

};
[38;5;81m#endif[m [96m//ifndef SHAPES_HH_[m[49;77H77,1[10CBot"shapes.hh" 77L, 2038C[48;1H[?25h[?25l[49;67H~@k[48;1H[49;67H   [47;1H[16;33H[46m{[47;1H}[m[49;78H6[47;1H[?25h[?25l[49;67H~@k[47;1H[49;67H   [46;1H[16;33H{[47;1H}[49;78H5[46;1H[?25h[?25l[49;67H~@k[46;1H[49;67H   [45;1H[49;78H4[45;1H[?25h[?25l[49;67H^U[45;1H[49;67H  [43;3H[1;48r[1;1H[24L[1;49r[2;1H[38;5;81m#define _USE_MATH_DEFINES [m[95m1[m
[38;5;81m#include [m[95m<cmath>[m
[38;5;81m#include [m[95m<string>[m
[38;5;81m#include [m[95m<sstream>[m

[96m/* A Shape will implement a toString() as well as a perimeter()
 * method.  Since both methods are pure virtual, Shape is an
 * abstract class and cannot be instantiated.
 */[m
[38;5;121mclass[m Shape : [93mpublic[m ToString {
[93mpublic[m:
  [38;5;121mvirtual[m [38;5;121mdouble[m perimeter() [38;5;121mconst[m = [95m0[m;
};

[96m/* A Circle is a concrete Shape */[m
[38;5;121mstruct[m Circle : [93mpublic[m Shape {
  [38;5;121mconst[m [38;5;121mdouble[m radius;
  [38;5;121mconst[m Point origin;

  [96m/** constructor: default will build unit circle */[m
  Circle([38;5;121mdouble[m radius=[95m1[m, [38;5;121mconst[m Point& point=Point())
    : radius(radius), origin(point)
  {}[49;1H[K[49;77H48,3[10C17%[43;3H[?25h[?25l[49;67H~@k[43;3H[49;67H   [43;3H[1;48r[48;1H
[1;49r[48;5H[93mif[m (width < [95m0[m) width = -width;[49;77H[K[49;77H49,3[10C20%[43;3H[?25h[?25l[49;67H~@k[43;3H[49;67H   [42;3H[49;78H8[42;3H[?25h[?25l[49;67H~@k[42;3H[49;67H   [41;1H[49;78H7,0-1[41;1H[?25h[?25l[49;67H~@k[41;1H[49;67H   [40;3H[49;78H6,3  [40;3H[?25h[?25l[49;67H~@k[40;3H[49;67H   [39;3H[49;78H5[39;3H[?25h[?25l[49;67H~@k[39;3H[49;67H   [38;3H[49;78H4[38;3H[?25h[?25l[49;67H~@k[38;3H[49;67H   [37;1H[49;78H3,0-1[37;1H[?25h[?25l[49;67H~@k[37;1H[49;67H   [36;2H[49;78H2,2  [36;2H[?25h[?25l[49;67H~@k[36;2H[49;67H   [35;2H[49;78H1[35;2H[?25h[?25l[49;67H~@k[35;2H[49;67H   [34;3H[30;32H[46m{[34;3H}[m[49;78H0,3[34;3H[?25h[?25l[49;67H~@k[34;3H[49;67H   [33;3H[30;32H{[34;3H}[49;77H39[33;3H[?25h[?25l[49;67H~@k[33;3H[49;67H   [32;3H[49;78H8[32;3H[?25h[?25l[49;67H~@k[32;3H[49;67H   [31;3H[49;78H7[31;3H[?25h[?25l[49;67H~@k[31;3H[49;67H   [30;3H[49;78H6[30;3H[?25h[?25l[49;67H~@k[30;3H[49;67H   [29;3H[49;78H5[29;3H[?25h[?25l[49;67H~@k[29;3H[49;67H   [28;3H[49;78H4[28;3H[?25h[?25l[49;67H~@k[28;3H[49;67H   [27;1H[49;78H3,0-1[27;1H[?25h[?25l[49;67H~@k[27;1H[49;67H   [26;3H[49;78H2,3  [26;3H[?25h[?25l[49;67H~@k[26;3H[49;67H   [25;3H[49;78H1[25;3H[?25h[?25l[49;67H~@k[25;3H[49;67H   [24;1H[49;78H0,0-1[24;1H[?25h[?25l[49;67H~@k[24;1H[49;67H   [23;3H[46m{}[m[49;77H29,3  [23;3H[?25h[?25l[49;67H~@k[23;3H[49;67H   [22;3H
  {}[49;78H8[22;3H[?25h[?25l[49;67H~@k[22;3H[49;67H   [21;3H[49;78H7[21;3H[?25h[?25l[49;67H~@k[21;3H[49;67H   [20;3H[49;78H6[20;3H[?25h[?25l[49;67H~@k[20;3H[49;67H   [19;1H[49;78H5,0-1[19;1H[?25h[?25l[49;67H~@k[19;1H[49;67H   [18;3H[49;78H4,3  [18;3H[?25h[?25l[49;67H~@k[18;3H[49;67H   [17;3H[49;78H3[17;3H[?25h[?25l[49;67H~@k[17;3H[49;67H   [16;3H[49;78H2[16;3H[?25h[?25l[49;67H~@k[16;3H[49;67H   [15;3H[49;78H1[15;3H[?25h[?25l[49;67H~@k[15;3H[49;67H   [14;1H[49;78H0,0-1[14;1H[?25h[?25l[49;67H~@k[14;1H[49;67H   [13;2H[49;77H19,2  [13;2H[?25h[?25l[49;67H~@k[13;2H[49;67H   [12;3H[49;78H8,3[12;3H[?25h[?25l[49;67H~@k[12;3H[49;67H   [12;4H[49;80H4[12;4H[?25h[?25l[49;67H~@k[12;4H[49;67H   [12;5H[49;80H5[12;5H[?25h[?25l[49;67H~@k[12;5H[49;67H   [12;6H[49;80H6[12;6H[?25h[?25l[49;67H~@k[12;6H[49;67H   [12;7H[49;80H7[12;7H[?25h[?25l[49;67H~@k[12;7H[49;67H   [12;8H[49;80H8[12;8H[?25h[?25l[49;67H~@k[12;8H[49;67H   [12;9H[49;80H9[12;9H[?25h[?25l[49;67H~@k[12;9H[49;67H   [12;10H[49;80H10[12;10H[?25h[?25l[49;67H~@k[12;10H[49;67H   [12;11H[49;81H1[12;11H[?25h[?25l[49;67H~@k[12;11H[49;67H   [12;12H[49;81H2[12;12H[?25h[?25l[49;67H~@k[12;12H[49;67H   [12;13H[49;81H3[12;13H[?25h[?25l[49;67H~@k[12;13H[49;67H   [12;14H[49;81H4[12;14H[?25h[?25l[49;67H~@k[12;14H[49;67H   [12;15H[49;81H5[12;15H[?25h[?25l[49;67H~@k[12;15H[49;67H   [12;16H[49;81H6[12;16H[?25h[?25l[49;67H~@k[12;16H[49;67H   [12;17H[49;81H7[12;17H[?25h[?25l[49;67H~@k[12;17H[49;67H   [12;18H[49;81H8[12;18H[?25h[?25l[49;67H~@k[12;18H[49;67H   [12;19H[49;81H9[12;19H[?25h[?25l[49;67H~@k[12;19H[49;67H   [12;20H[49;80H20[12;20H[?25h[?25l[49;67H~@k[12;20H[49;67H   [12;21H[49;81H1[12;21H[?25h[?25l[49;67H~@k[12;21H[49;67H   [12;22H[49;81H2[12;22H[?25h[?25l[49;67H~@k[12;22H[49;67H   [12;23H[49;81H3[12;23H[?25h[?25l[49;67H~@k[12;23H[49;67H   [12;24H[49;81H4[12;24H[?25h[?25l[49;67H~@k[12;24H[49;67H   [12;25H[49;81H5[12;25H[?25h[?25l[49;67H~@k[12;25H[49;67H   [12;26H[49;81H6[12;26H[?25h[?25l[49;67H~@k[12;26H[49;67H   [12;27H[46m()[m[49;81H7[12;27H[?25h[?25l[49;67H~@k[12;27H[49;67H   [12;28H[49;81H8[12;28H[?25h[?25l[49;67H~@k[12;28H[49;67H   [12;29H()[49;81H9[12;29H[?25h[?25l[49;67H~@k[12;29H[49;67H   [12;30H[49;80H30[12;30H[?25h[?25l[49;67H~@k[12;30H[49;67H   [12;31H[49;81H1[12;31H[?25h[?25l[49;67H~@k[12;31H[49;67H   [12;32H[49;81H2[12;32H[?25h[?25l[49;67H~@k[12;32H[49;67H   [12;33H[49;81H3[12;33H[?25h[?25l[49;67H~@k[12;33H[49;67H   [12;34H[49;81H4[12;34H[?25h[?25l[49;67H~@k[12;34H[49;67H   [12;35H[49;81H5[12;35H[?25h[?25l[49;67H~@k[12;35H[49;67H   [12;36H[49;81H6[12;36H[?25h[?25l[49;67H~@k[12;36H[49;67H   [12;37H[49;81H7[12;37H[?25h[?25l[49;67H~@k[12;37H[49;67H   [12;38H[49;81H8[12;38H[?25h[?25l[49;67H~@k[12;38H[49;67H   [12;39H[49;81H9[12;39H[?25h[?25l[49;67H~@k[12;39H[49;67H   [12;39H[?25h[?25l[49;67H~@k[12;39H[49;67H   [12;39H[?25h[?25l[49;67H~@k[12;39H[49;67H   [12;39H[?25h[?25l[49;67Hi[12;39H[49;67H [12;39H[49;1H[1m-- INSERT --[m[49;77H[K[49;77H18,39[9C20%[12;39H[?25h[?25l[49;80H40[12;40H[?25h[?25l[13;48r[13;1H[L[1;49r[49;77H[K[49;77H19,3[10C20%]2;shapes.hh + (~/projects/i240b/submit/lab4/exercises/2-shape) - VIM]1;shapes.hh[13;3H[?25h[?25lv[49;80H4[13;4H[?25h[?25li[49;80H5[13;5H[?25h[?25lr[49;80H6[13;6H[?25h[?25lt[49;80H7[13;7H[?25h[?25lu[49;80H8[13;8H[?25h[?25la[49;80H9[13;9H[?25h[?25l  [38;5;121mvirtual[m[49;80H10[13;10H[?25h[?25l[49;81H1[13;11H[?25h[?25ld[49;81H2[13;12H[?25h[?25l[93mdo[m[49;81H3[13;13H[?25h[?25ldou[49;81H4[13;14H[?25h[?25lb[49;81H5[13;15H[?25h[?25ll[49;81H6[13;16H[?25h[?25l[38;5;121mdouble[m[49;81H7[13;17H[?25h[?25l[49;81H8[13;18H[?25h[?25la[49;81H9[13;19H[?25h[?25lr[49;80H20[13;20H[?25h[?25le[49;81H1[13;21H[?25h[?25la[49;81H2[13;22H[?25h[?25l([49;81H3[13;23H[?25h[?25l)[46m()[m[49;81H4[13;24H[?25h[?25l()[49;81H5[13;25H[?25h[?25lc[49;81H6[13;26H[?25h[?25lo[49;81H7[13;27H[?25h[?25ln[49;81H8[13;28H[?25h[?25ls[49;81H9[13;29H[?25h[?25l[38;5;121mconst[m[49;80H30[13;30H[?25h[?25l[49;81H1[13;31H[?25h[?25l=[49;81H2[13;32H[?25h[?25l[49;81H3[13;33H[?25h[?25l[95m0[m[49;81H4[13;34H[?25h[?25l;[49;81H5[13;35H[?25h[49;1H[K[13;34H[?25l[49;67H^[[13;34H[49;67H  [13;35H[49;77H19,34[9C20%[13;34H[?25h[?25l[49;67HZ[13;34H[?25h[?25l[49;68HZ[13;34H[?1006l[?1002l[?2004l[49;1H"shapes.hh"[49;67H[K[49;13H78L, 2073C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ vim shapes.hh [6@make -f ../Makefile[C[6@clean [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
rm -rf *.o *~ main .deps .gitignore
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ make clean -f ../Makefile [12Pvim shapes.hh[C[6@make -f ../Makefile[C[6@clean [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[6P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
g++ -MT tostring.o -MMD -MP -MF .deps/tostring.d -g -Wall -std=c++17 -c tostring.cc
g++ -MT point.o -MMD -MP -MF .deps/point.d -g -Wall -std=c++17 -c point.cc
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ tostring.o point.o main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main tostring.o point.o main.o; do echo $t >>.gitignore; done
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ ./main 
Circle[(0, 0), 1] perimeter: 6.28319Circle[(0, 0), 1] area: 3.14159
Rectangle[(1, 1), (4, 5)] perimeter: 14Rectangle[(1, 1), (4, 5)] area: 12
Circle[(1, 1), 2] perimeter: 12.5664Circle[(1, 1), 2] area: 12.5664
Rectangle[(0, 0), (5, 4)] perimeter: 18Rectangle[(0, 0), (5, 4)] area: 20

sizeof(double) = 8
sizeof(Point) = 24

sizeof(ToString) = 8
sizeof(Shape) = 8
sizeof(Circle) = 40
sizeof(Rectangle) = 56

tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ ./main [13@make -f ../Makefile[C[6@clean [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[12Pvim shapes.hh[C[12@make clean -f ../Makefile[C[6P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[13P./main[C[K./main [13@make -f ../Makefile[C[6@clean [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[12Pvim shapes.hh[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"shapes.hh" 78L, 2073C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef SHAPES_HH_
#define SHAPES_HH_

#include [m[31m"point.hh"[m
[35m#include [m[31m"tostring.hh"[m

[35m#define _USE_MATH_DEFINES [m[31m1[m
[35m#include [m[31m<cmath>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<sstream>[m

[34m/* A Shape will implement a toString() as well as a perimeter()
 * method.  Since both methods are pure virtual, Shape is an
 * abstract class and cannot be instantiated.
 */[m
[32mclass[m Shape : [38;5;130mpublic[m ToString {
[38;5;130mpublic[m:
  [32mvirtual[m [32mdouble[m perimeter() [32mconst[m = [31m0[m;
  [32mvirtual[m [32mdouble[m area() [32mconst[m = [31m0[m;
};

[34m/* A Circle is a concrete Shape */[m
[32mstruct[m Circle : [38;5;130mpublic[m Shape {
  [32mconst[m [32mdouble[m radius;
  [32mconst[m Point origin;

  [34m/** constructor: default will build unit circle */[m
  Circle([32mdouble[m radius=[31m1[m, [32mconst[m Point& point=Point())
    : radius(radius), origin(point)
  {}

  [34m/** return perimeter of this circle */[m
  [32mdouble[m perimeter() [32mconst[m { [38;5;130mreturn[m [31m2[m * [31mM_PI[m * radius; }

  [32mdouble[m area() [32mconst[m { [38;5;130mreturn[m [31mM_PI[m * radius * radius; }
  [34m/** return string representation of this circle */[m
  std::string toString() [32mconst[m {
    std::stringstream s;
    s << [31m"Circle["[m << origin << [31m", "[m << radius << [31m"]"[m;
    [38;5;130mreturn[m s.str();
  }

};

[34m/* A Rectangle is another concrete Shape */[m
[32mstruct[m Rectangle : [38;5;130mpublic[m Shape {
  [32mconst[m Point topLeft, bottomRight;[49;77H19,34[9CTop]2;shapes.hh (~/projects/i240b/submit/lab4/exercises/2-shape) - VIM]1;shapes.hh[19;34H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#ifndef SHAPES_HH_
#define SHAPES_HH_

#include [m[95m"point.hh"[m
[38;5;81m#include [m[95m"tostring.hh"[m

[38;5;81m#define _USE_MATH_DEFINES [m[95m1[m
[38;5;81m#include [m[95m<cmath>[m
[38;5;81m#include [m[95m<string>[m
[38;5;81m#include [m[95m<sstream>[m

[96m/* A Shape will implement a toString() as well as a perimeter()
 * method.  Since both methods are pure virtual, Shape is an
 * abstract class and cannot be instantiated.
 */[m
[38;5;121mclass[m Shape : [93mpublic[m ToString {
[93mpublic[m:
  [38;5;121mvirtual[m [38;5;121mdouble[m perimeter() [38;5;121mconst[m = [95m0[m;
  [38;5;121mvirtual[m [38;5;121mdouble[m area() [38;5;121mconst[m = [95m0[m;
};

[96m/* A Circle is a concrete Shape */[m
[38;5;121mstruct[m Circle : [93mpublic[m Shape {
  [38;5;121mconst[m [38;5;121mdouble[m radius;
  [38;5;121mconst[m Point origin;

  [96m/** constructor: default will build unit circle */[m
  Circle([38;5;121mdouble[m radius=[95m1[m, [38;5;121mconst[m Point& point=Point())
    : radius(radius), origin(point)
  {}

  [96m/** return perimeter of this circle */[m
  [38;5;121mdouble[m perimeter() [38;5;121mconst[m { [93mreturn[m [95m2[m * [95mM_PI[m * radius; }

  [38;5;121mdouble[m area() [38;5;121mconst[m { [93mreturn[m [95mM_PI[m * radius * radius; }
  [96m/** return string representation of this circle */[m
  std::string toString() [38;5;121mconst[m {
    std::stringstream s;
    s << [95m"Circle["[m << origin << [95m", "[m << radius << [95m"]"[m;
    [93mreturn[m s.str();
  }

};

[96m/* A Rectangle is another concrete Shape */[m
[38;5;121mstruct[m Rectangle : [93mpublic[m Shape {
  [38;5;121mconst[m Point topLeft, bottomRight;[49;77H19,34[9CTop"shapes.hh" 78L, 2073C[19;34H[?25h[?25l[49;80H1 [19;1H[?25h[?25l[49;67H2[19;2H[48;5;242m [m[49;1H[1m-- VISUAL --[m[49;13H[K[49;67H2[19;2H[49;77H19,2[10CTop[19;2H[?25h[?25l[49;67H3[19;3H[48;5;242m [m[49;80H3[19;3H[?25h[?25l[49;67H4[19;4H[38;5;121m[48;5;242mv[m[49;80H4[19;4H[?25h[?25l[49;67H5[19;5H[38;5;121m[48;5;242mi[m[49;80H5[19;5H[?25h[?25l[49;67H7[19;7H[38;5;121m[48;5;242mrt[m[49;80H7[19;7H[?25h[?25l[49;67H8[19;8H[38;5;121m[48;5;242mu[m[49;80H8[19;8H[?25h[?25l[49;67H2[20;3H[19;8H[38;5;121m[48;5;242mal[m[48;5;242m [m[38;5;121m[48;5;242mdouble[m[48;5;242m area() [m[38;5;121m[48;5;242mconst[m[48;5;242m = [m[95m[48;5;242m0[m[48;5;242m; 
};[m[49;77H20,3[20;3H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[49;67H35[19;35H[19;35H[K[20;1H};[49;77H19,35[19;35H[?25h[?25l[?25h[?25l[?25h[?25l[49;67H  [22;34H[19;1H  [38;5;121mvirtual[m [38;5;121mdouble[m area() [38;5;121mconst[m = [95m0[m;[49;1H[K[49;77H22,34[9CTop[22;34H[?25h[?25l[49;67H^D[22;34H[49;67H  [22;1H[1;48r[1;1H[24M[1;49r[25;3H[96m/** constructor: no default value for parameters */[m
  Rectangle(Point p1, Point p2) : topLeft(p1), bottomRight(p2) {}

  [96m/** return perimeter of this rectangle */[m
  [38;5;121mdouble[m perimeter() [38;5;121mconst[m {
    [38;5;121mdouble[m width = bottomRight.x - topLeft.x;
    [93mif[m (width < [95m0[m) width = -width;
    [38;5;121mdouble[m height = bottomRight.y - topLeft.y;
    [93mif[m (height < [95m0[m) height = -height;
    [93mreturn[m [95m2[m * (width + height);
  }

  [38;5;121mdouble[m area() [38;5;121mconst[m {
    [38;5;121mdouble[m width = bottomRight.x - topLeft.x;
    [93mif[m (width < [95m0[m) width = -width;
    [38;5;121mdouble[m height = bottomRight.y - topLeft.y;
    [93mif[m (height < [95m0[m) height = -height;
    [93mreturn[m width * height;
  }

  [96m/** return string representation of this rectangle */[m
  std::string toString() [38;5;121mconst[m {
    std::stringstream s;
    s << [95m"Rectangle["[m << topLeft.toString() << [95m", "[m[49;77H[K[49;77H46,1[10C80%[22;1H[?25h[?25l[49;77H35[11;1H[?25h[?25l[49;67H2[11;2H[48;5;242m [m[49;1H[1m-- VISUAL --[m[49;67H[K[49;67H2[11;2H[49;77H35,2[10C80%[11;2H[?25h[?25l[49;67H4[11;4H[48;5;242m [m[38;5;121m[48;5;242md[m[49;80H4[11;4H[?25h[?25l[49;67H2[12;5H[11;4H[38;5;121m[48;5;242mouble[m[48;5;242m area() [m[38;5;121m[48;5;242mconst[m[48;5;242m { [m[93m[48;5;242mreturn[m[48;5;242m [m[95m[48;5;242mM_PI[m[48;5;242m * radius * radius; } 
  [m[96m[48;5;242m/*[m[49;78H6,5[12;5H[?25h[?25l[4C[96m[48;5;242m* re[m[49;80H9[12;9H[?25h[?25l[1C[96m[48;5;242mt[m[49;80H10[12;10H[?25h[?25l[49;67H3[13;12H[12;10H[96m[48;5;242murn string representation of this circle */[m[48;5;242m 
  std::stri[m[49;78H7,12[13;12H[?25h[?25ln[48;5;242mn[m[49;81H3[13;13H[?25h[?25lg[48;5;242mg[m[49;81H4[13;14H[?25h[?25l [48;5;242m [m[49;81H5[13;15H[?25h[?25lt[48;5;242mt[m[49;81H6[13;16H[?25h[?25lo[48;5;242mo[m[49;81H7[13;17H[?25h[?25lS[48;5;242mS[m[49;81H8[13;18H[?25h[?25lt[48;5;242mt[m[49;81H9[13;19H[?25h[?25lr[48;5;242mr[m[49;80H20[13;20H[?25h[?25li[48;5;242mi[m[49;81H1[13;21H[?25h[?25l[49;67H4[14;22H[13;21H[48;5;242mng() [m[38;5;121m[48;5;242mconst[m[48;5;242m { 
    std::stringstream[m[49;78H8,22[14;22H[?25h[?25l [48;5;242m [m[49;81H3[14;23H[?25h[?25ls[48;5;242ms[m[49;81H4[14;24H[?25h[?25l;[48;5;242m;[m[49;81H5[14;25H[?25h[?25l[49;67H5[15;25H[14;25H[48;5;242m 
    s << [m[95m[48;5;242m"Circle["[m[48;5;242m << or[m[49;78H9[15;25H[?25h[?25li[48;5;242mi[m[49;81H6[15;26H[?25h[?25lg[48;5;242mg[m[49;81H7[15;27H[?25h[?25l[49;67H6[16;20H[15;27H[48;5;242min << [m[95m[48;5;242m", "[m[48;5;242m << radius << [m[95m[48;5;242m"]"[m[48;5;242m; 
    [m[93m[48;5;242mreturn[m[48;5;242m s.str();[m[49;77H40,20[16;20H[?25h[?25l[?25h[?25l[49;67H5[15;28Hn << [95m", "[m << radius << [95m"]"[m;[15;55H[K[16;1H    [93mreturn[m s.str();[49;77H39,28[15;28H[?25h[?25ln[48;5;242mn[m[49;81H9[15;29H[?25h[?25l [48;5;242m [m[49;80H30[15;30H[?25h[?25l[49;67H4[14;25H[14;25H[K[15;1H    s << [95m"Circle["[m << origin [49;78H8,25[14;25H[?25h[?25l[?25h[?25l[?25h[?25l[49;67H3[13;32H[46m{[m[13;33H[K[14;1H    std::stringstream s;[17;3H[46m}[m[49;78H7,32[13;32H[?25h[?25l[1C[48;5;242m{[m[17;3H}[49;81H3[13;33H[?25h[?25l[?25h[?25l[?25h[?25l[49;67H [17;3H[11;1H  [38;5;121mdouble[m area() [38;5;121mconst[m { [93mreturn[m [95mM_PI[m * radius * radius; }[11;57H[K[12;1H  [96m/** return string representation of this circle */[m[12;53H[K[13;1H  std::string toString() [38;5;121mconst[m [46m{[17;3H}[m[49;1H[K[49;77H41,3[10C80%[17;3H[?25h[?25l[49;67H^U[17;3H[49;67H  [17;1H[1;48r[1;1H[24L[1;49r[1;1H[38;5;81m#ifndef SHAPES_HH_
#define SHAPES_HH_

#include [m[95m"point.hh"[m
[38;5;81m#include [m[95m"tostring.hh"[m

[38;5;81m#define _USE_MATH_DEFINES [m[95m1[m
[38;5;81m#include [m[95m<cmath>[m
[38;5;81m#include [m[95m<string>[m
[38;5;81m#include [m[95m<sstream>[m

[96m/* A Shape will implement a toString() as well as a perimeter()
 * method.  Since both methods are pure virtual, Shape is an
 * abstract class and cannot be instantiated.
 */[m
[38;5;121mclass[m Shape : [93mpublic[m ToString {
[93mpublic[m:
  [38;5;121mvirtual[m [38;5;121mdouble[m perimeter() [38;5;121mconst[m = [95m0[m;
  [38;5;121mvirtual[m [38;5;121mdouble[m area() [38;5;121mconst[m = [95m0[m;
};

[96m/* A Circle is a concrete Shape */[m
[38;5;121mstruct[m Circle : [93mpublic[m Shape {
  [38;5;121mconst[m [38;5;121mdouble[m radius;[37;32H{[41;3H}[49;77H[K[49;77H17,1[10CTop[17;1H[?25h[?25l[49;67HZ[17;1H[?25h[?25l[49;68HZ[17;1H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;67H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ vim are[K[K[Kmain.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main.cc" 58L, 1594C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"point.hh"[m
[35m#include [m[31m"shapes.hh"[m
[35m#include [m[31m"tostring.hh"[m

[35m#include [m[31m<iostream>[m
[38;5;130musing[m [32mnamespace[m std;

[32mstatic[m [32mconst[m Circle circles[] = {
  Circle([31m1[m, Point()),
  Circle([31m2[m, Point([31m1[m, [31m1[m)),
};
[32mstatic[m [32mconst[m Rectangle rectangles[] = {
  Rectangle(Point([31m1[m, [31m1[m), Point([31m4[m, [31m5[m)),
  Rectangle(Point([31m0[m, [31m0[m), Point([31m5[m, [31m4[m)),
};

[32mstatic[m [32mconst[m Shape* shapes[] = {
  &circles[[31m0[m], &rectangles[[31m0[m], &circles[[31m1[m], &rectangles[[31m1[m],
};
[32mconstexpr[m [32mauto[m nShapes = [38;5;130msizeof[m(shapes)/[38;5;130msizeof[m(shapes[[31m0[m]);


[32mstatic[m [32mvoid[m
outSizes(std::ostream& out)
{
  out << [31m"sizeof(double) = "[m << [38;5;130msizeof[m([32mdouble[m) << std::endl;
  out << [31m"sizeof(Point) = "[m << [38;5;130msizeof[m(Point) << std::endl << std::endl;

  out << [31m"sizeof(ToString) = "[m << [38;5;130msizeof[m(ToString) << std::endl;
  out << [31m"sizeof(Shape) = "[m << [38;5;130msizeof[m(Shape) << std::endl;
  out << [31m"sizeof(Circle) = "[m << [38;5;130msizeof[m(Circle) << std::endl;
  out << [31m"sizeof(Rectangle) = "[m << [38;5;130msizeof[m(Rectangle) << std::endl;
}

[32mstatic[m [32mvoid[m
outShapes(std::ostream& out)
{
  [38;5;130mfor[m ([32mauto[m i = [31m0u[m; i < nShapes; i++) {[40;5H[34m//pointed to Shape could be either a Circle or Rectangle.[m
    [32mauto[m shapeP = shapes[i];[43;5H[34m//if shapeP points to a Circle, then call Circle::perimeter();
[m    [34m//if shapeP points to a Rectangle, then call Rectangle::perimeter();
[m    [34m//choosing the code at runtime is referred to as *runtime polymorphism*.[m
    [32mauto[m perim = shapeP->perimeter();
    [32mauto[m area = shapeP->area();[49;77H7,0-1[9CTop]2;main.cc (~/projects/i240b/submit/lab4/exercises/2-shape) - VIM]1;main.cc[7;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"point.hh"[m
[38;5;81m#include [m[95m"shapes.hh"[m
[38;5;81m#include [m[95m"tostring.hh"[m

[38;5;81m#include [m[95m<iostream>[m
[93musing[m [38;5;121mnamespace[m std;

[38;5;121mstatic[m [38;5;121mconst[m Circle circles[] = {
  Circle([95m1[m, Point()),
  Circle([95m2[m, Point([95m1[m, [95m1[m)),
};
[38;5;121mstatic[m [38;5;121mconst[m Rectangle rectangles[] = {
  Rectangle(Point([95m1[m, [95m1[m), Point([95m4[m, [95m5[m)),
  Rectangle(Point([95m0[m, [95m0[m), Point([95m5[m, [95m4[m)),
};

[38;5;121mstatic[m [38;5;121mconst[m Shape* shapes[] = {
  &circles[[95m0[m], &rectangles[[95m0[m], &circles[[95m1[m], &rectangles[[95m1[m],
};
[38;5;121mconstexpr[m [38;5;121mauto[m nShapes = [93msizeof[m(shapes)/[93msizeof[m(shapes[[95m0[m]);


[38;5;121mstatic[m [38;5;121mvoid[m
outSizes(std::ostream& out)
{
  out << [95m"sizeof(double) = "[m << [93msizeof[m([38;5;121mdouble[m) << std::endl;
  out << [95m"sizeof(Point) = "[m << [93msizeof[m(Point) << std::endl << std::endl;

  out << [95m"sizeof(ToString) = "[m << [93msizeof[m(ToString) << std::endl;
  out << [95m"sizeof(Shape) = "[m << [93msizeof[m(Shape) << std::endl;
  out << [95m"sizeof(Circle) = "[m << [93msizeof[m(Circle) << std::endl;
  out << [95m"sizeof(Rectangle) = "[m << [93msizeof[m(Rectangle) << std::endl;
}

[38;5;121mstatic[m [38;5;121mvoid[m
outShapes(std::ostream& out)
{
  [93mfor[m ([38;5;121mauto[m i = [95m0u[m; i < nShapes; i++) {[40;5H[96m//pointed to Shape could be either a Circle or Rectangle.[m
    [38;5;121mauto[m shapeP = shapes[i];[43;5H[96m//if shapeP points to a Circle, then call Circle::perimeter();
[m    [96m//if shapeP points to a Rectangle, then call Rectangle::perimeter();
[m    [96m//choosing the code at runtime is referred to as *runtime polymorphism*.[m
    [38;5;121mauto[m perim = shapeP->perimeter();
    [38;5;121mauto[m area = shapeP->area();[49;77H7,0-1[9CTop"main.cc" 58L, 1594C[7;1H[?25h[?25l[49;67H^D[7;1H[49;67H  [21;3H[1;48r[1;1H[10M[1;49r[39;5Hout << *shapeP << [95m" perimeter: "[m << perim;
    out << *shapeP << [95m" area: "[m << area << endl;
  }
}

[38;5;121mint[m main() {
  std::ostream& out = std::cout;
  outShapes(out); out << std::endl;
  outSizes(out); out << std::endl;
}[49;1H[K[49;77H31,3[10CBot[21;3H[?25h[?25l[49;67H^D[21;3H[49;67H  [45;3H[49;77H55[45;3H[?25h[?25l[49;67H~@k[45;3H[49;67H   [44;3H[49;78H4[44;3H[?25h[?25l[49;67H~@k[44;3H[49;67H   [43;1H[49;78H3,0-1[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [42;1H[27;1H[46m{[42;1H}[m[49;78H2,1  [42;1H[?25h[?25l[49;67H~@k[42;1H[49;67H   [41;3H[27;1H{[28;39H[46m{[41;3H}[m
}[49;78H1,3[41;3H[?25h[?25l[49;67Hi[41;3H[49;67H [41;3H[49;1H[1m-- INSERT --[m[49;77H[K[49;77H51,3[10CBot[41;3H[?25h[?25l[28;39H{[41;3H}[49;78H0[40;3H[?25h[?25l[49;80H4[40;4H[?25h[?25l[49;80H5[40;5H[?25h[?25l[49;80H6[40;6H[?25h[?25l[49;80H7[40;7H[?25h[?25l[49;80H8[40;8H[?25h[?25l[49;80H9[40;9H[?25h[?25l[49;80H10[40;10H[?25h[?25l[49;81H1[40;11H[?25h[?25l[49;81H2[40;12H[?25h[?25l[49;81H3[40;13H[?25h[?25l[49;81H4[40;14H[?25h[?25l[49;81H5[40;15H[?25h[?25l[49;81H6[40;16H[?25h[?25l[49;81H7[40;17H[?25h[?25l[49;81H8[40;18H[?25h[?25l[49;81H9[40;19H[?25h[?25l[49;80H20[40;20H[?25h[?25l[49;81H1[40;21H[?25h[?25l[49;81H2[40;22H[?25h[?25l[49;81H3[40;23H[?25h[?25l[49;81H4[40;24H[?25h[?25l[49;81H5[40;25H[?25h[?25l[49;81H6[40;26H[?25h[?25l[49;81H7[40;27H[?25h[?25l[49;81H8[40;28H[?25h[?25l[49;81H9[40;29H[?25h[?25l[49;80H30[40;30H[?25h[?25l[49;81H1[40;31H[?25h[?25l[49;81H2[40;32H[?25h[?25l[49;81H3[40;33H[?25h[?25l[49;81H4[40;34H[?25h[?25l[49;81H5[40;35H[?25h[?25l[49;81H6[40;36H[?25h[?25l[49;81H7[40;37H[?25h[?25l[49;81H8[40;38H[?25h[?25l[49;81H9[40;39H[?25h[?25l[49;80H40[40;40H[?25h[?25l[49;81H1[40;41H[?25h[?25l[49;77H49[39;41H[?25h[?25l[49;81H2[39;42H[?25h[?25l[49;81H3[39;43H[?25h[?25l[49;81H4[39;44H[?25h[?25l[49;81H5[39;45H[?25h[?25l[49;81H6[39;46H[?25h[?25l ;[49;81H7]2;main.cc + (~/projects/i240b/submit/lab4/exercises/2-shape) - VIM]1;main.cc[39;47H[?25h[?25l<;[49;81H8[39;48H[?25h[?25l<;[49;81H9[39;49H[?25h[?25l ;[49;80H50[39;50H[?25h[?25le;[49;81H1[39;51H[?25h[?25ln;[49;81H2[39;52H[?25h[?25ld;[49;81H3[39;53H[?25h[?25ll;[49;81H4[39;54H[?25h[49;1H[K[39;53H[?25l[49;67H^[[39;53H[49;67H  [39;54H[49;77H49,53[9CBot[39;53H[?25h[?25l[49;67HZ[39;53H[?25h[?25l[49;68HZ[39;53H[?1006l[?1002l[?2004l[49;1H"main.cc"[49;67H[K[49;11H58L, 1602C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ vim main.cc [2@shapes.hh[C[7P./main[C[13@make -f ../Makefile[C
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ tostring.o point.o main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main tostring.o point.o main.o; do echo $t >>.gitignore; done
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ make -f ../Makefile [8Pvim main.cc[C[2@shapes.hh[C[7P./main[C
Circle[(0, 0), 1] perimeter: 6.28319
Circle[(0, 0), 1] area: 3.14159
Rectangle[(1, 1), (4, 5)] perimeter: 14
Rectangle[(1, 1), (4, 5)] area: 12
Circle[(1, 1), 2] perimeter: 12.5664
Circle[(1, 1), 2] area: 12.5664
Rectangle[(0, 0), (5, 4)] perimeter: 18
Rectangle[(0, 0), (5, 4)] area: 20

sizeof(double) = 8
sizeof(Point) = 24

sizeof(ToString) = 8
sizeof(Shape) = 8
sizeof(Circle) = 40
sizeof(Rectangle) = 56

tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cd ,,
bash: cd: ,,: No such file or directory
tman1@g7-19:~/i240b/submit/lab4/exercises/2-shape$ cd ..
tman1@g7-19:~/i240b/submit/lab4/exercises$ ls
1-point  2-shape  3-expr  Makefile
tman1@g7-19:~/i240b/submit/lab4/exercises$ cd [K[K[Kcd 3-expr/
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ ls
expr.cc  expr.hh  main.cc  parse.cc  parse.hh  tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cd [K[K[Kcat expr.cc 
#include "expr.hh"

#include <string>
#include <sstream>

std::string
IntExpr::toString() const
{
  std::stringstream s;
  s << value;
  return s.str();
}

static std::string
binaryExprToString(std::string op, ExprPtr left, ExprPtr right)
{
  std::stringstream s;
  s << "(" << *left << ") " << op << " (" << *right << ")";
  return s.str();
}

std::string
AddExpr::toString() const
{
  return binaryExprToString("+", left, right);
}

std::string
SubExpr::toString() const
{
  return binaryExprToString("-", left, right);
}

std::string
MulExpr::toString() const
{
  return binaryExprToString("*", left, right);
}

std::string
DivExpr::toString() const
{
  return binaryExprToString("/", left, right);
}

tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ ls
expr.cc  expr.hh  main.cc  parse.cc  parse.hh  tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ make -f ../N
make: ../N: No such file or directory
make: *** No rule to make target '../N'.  Stop.
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ make -f ../N[K<[K<[KMakefile 
g++ -MT tostring.o -MMD -MP -MF .deps/tostring.d -g -Wall -std=c++17 -c tostring.cc
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ -MT parse.o -MMD -MP -MF .deps/parse.d -g -Wall -std=c++17 -c parse.cc
g++ -MT expr.o -MMD -MP -MF .deps/expr.d -g -Wall -std=c++17 -c expr.cc
g++ tostring.o main.o parse.o expr.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main tostring.o main.o parse.o expr.o; do echo $t >>.gitignore; done
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ ./main 
usage: ./main PREFIX_EXPR...
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ /main '+ 1 * 2 3'  '* + 1 2 3'  '+ / 40 5 - 3 2'[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./main '+ 1 * 2 3'  '* + 1 2 3'  '+ / 40 5 - 3 2'[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

(1) + ((2) * (3))
((1) + (2)) * (3)
((40) / (5)) + ((3) - (2))
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ l
bash: l: command not found
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ s[Kls
expr.cc  expr.o  main.cc  parse.cc  parse.o	 tostring.hh
expr.hh  main	 main.o   parse.hh  tostring.cc  tostring.o
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ make clean -f ../Makefile 
rm -rf *.o *~ main .deps .gitignore
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ s[Kls
expr.cc  expr.hh  main.cc  parse.cc  parse.hh  tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cv[K[Kcat parse.hh 
#ifndef PARSE_HH_
#define  PARSE_HH_

#include "expr.hh"

#include <string>

/** Parser for prefix arith expressions involving integers, +, -, *, / */
ExprPtr parse(std::string str);


#endif //ifndef PARSE_HH_
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat parse.cc 
#include "parse.hh"

#include <sstream>
#include <string>
#include <cstdlib>
#include <cctype>


static ExprPtr
parse(std::stringstream& s, std::string str)
{
  if (s.eof()) {
    std::cerr << "unexpected end-of-input \"" << str << "\"" << std::endl;
    std::exit(1);
  }
  char c;
  s >> c;
  if (std::isdigit(c)) {
    s.unget();
    int val;
    s >> val;
    return IntExpr::make(val);
  }
  else {
    ExprPtr left = parse(s, str);
    ExprPtr right = parse(s, str);
    switch (c) {
    case '+':
      return AddExpr::make(left, right);
    case '-':
      return SubExpr::make(left, right);
    case '*':
      return MulExpr::make(left, right);
    case '/':
      return DivExpr::make(left, right);
    default:
      std::cerr << "unexpected char '" << c << "' in input \""
		<< str << "\"" << std::endl;
      std::exit(1);
    }
  }
}

ExprPtr
parse(std::string str) {
  std::stringstream s(str);
  return parse(s, str);
}

tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ ls
expr.cc  expr.hh  main.cc  parse.cc  parse.hh  tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat expr.hh 
#ifndef EXPR_HH_
#define EXPR_HH_

#include "tostring.hh"

#include <memory>
#include <string>


class Expr : public ToString {
};

//ExprPtr is an alias for a smart shared ptr to an Expr.
//using is like a typedef
using ExprPtr = std::shared_ptr<Expr>;

/** An IntExpr only contains an integer value */
class IntExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const int value;

  /** Factory function */
  static ExprPtr make(int val) {
    return std::make_shared<IntExpr>(val, Private::TAG);
  }

  
  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  IntExpr(int val, Private x) : value(val) { }

}; //IntExpr

//KISS results in repetitive code for binary expressions.
//Not using alternatives like a template class


class AddExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const ExprPtr left;
  const ExprPtr right;

  /** Factory function */
  static ExprPtr make(ExprPtr left, ExprPtr right) {
    return std::make_shared<AddExpr>(left, right, Private::TAG);
  }

  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  AddExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; //AddExpr


class SubExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const ExprPtr left;
  const ExprPtr right;

  /** Factory function */
  static ExprPtr make(ExprPtr left, ExprPtr right) {
    return std::make_shared<SubExpr>(left, right, Private::TAG);
  }

  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  SubExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; //SubExpr


class MulExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const ExprPtr left;
  const ExprPtr right;

  /** Factory function */
  static ExprPtr make(ExprPtr left, ExprPtr right) {
    return std::make_shared<MulExpr>(left, right, Private::TAG);
  }

  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  MulExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; //MulExpr

class DivExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const ExprPtr left;
  const ExprPtr right;

  /** Factory function */
  static ExprPtr make(ExprPtr left, ExprPtr right) {
    return std::make_shared<DivExpr>(left, right, Private::TAG);
  }

  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  DivExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; //DivExpr




#endif //ifndef EXPR_HH
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ ls
expr.cc  expr.hh  main.cc  parse.cc  parse.hh  tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat main.cc 
#include "expr.hh"
#include "parse.hh"

#include <iostream>
#include <cstdlib>

int
main(int argc, char* argv[])
{
  if (argc < 2) {
    std::cerr << "usage: " << argv[0] << " PREFIX_EXPR..." << std::endl;
    std::exit(1);
  }
  for (auto i = 1; i < argc; i++) {
    std::cout << *parse(argv[i]) << std::endl;
  }
}
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat parse.
parse.cc  parse.hh  
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat parse.
parse.cc  parse.hh  
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat parse.hh 
#ifndef PARSE_HH_
#define  PARSE_HH_

#include "expr.hh"

#include <string>

/** Parser for prefix arith expressions involving integers, +, -, *, / */
ExprPtr parse(std::string str);


#endif //ifndef PARSE_HH_
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat parse.hh [1P [1P c c 
#include "parse.hh"

#include <sstream>
#include <string>
#include <cstdlib>
#include <cctype>


static ExprPtr
parse(std::stringstream& s, std::string str)
{
  if (s.eof()) {
    std::cerr << "unexpected end-of-input \"" << str << "\"" << std::endl;
    std::exit(1);
  }
  char c;
  s >> c;
  if (std::isdigit(c)) {
    s.unget();
    int val;
    s >> val;
    return IntExpr::make(val);
  }
  else {
    ExprPtr left = parse(s, str);
    ExprPtr right = parse(s, str);
    switch (c) {
    case '+':
      return AddExpr::make(left, right);
    case '-':
      return SubExpr::make(left, right);
    case '*':
      return MulExpr::make(left, right);
    case '/':
      return DivExpr::make(left, right);
    default:
      std::cerr << "unexpected char '" << c << "' in input \""
		<< str << "\"" << std::endl;
      std::exit(1);
    }
  }
}

ExprPtr
parse(std::string str) {
  std::stringstream s(str);
  return parse(s, str);
}

tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat parse.cc hh[C[1Pmain.cc[C[1@parse.hh[Ccc[C[Kls
expr.cc  expr.hh  main.cc  parse.cc  parse.hh  tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat expr.c[Khh 
#ifndef EXPR_HH_
#define EXPR_HH_

#include "tostring.hh"

#include <memory>
#include <string>


class Expr : public ToString {
};

//ExprPtr is an alias for a smart shared ptr to an Expr.
//using is like a typedef
using ExprPtr = std::shared_ptr<Expr>;

/** An IntExpr only contains an integer value */
class IntExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const int value;

  /** Factory function */
  static ExprPtr make(int val) {
    return std::make_shared<IntExpr>(val, Private::TAG);
  }

  
  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  IntExpr(int val, Private x) : value(val) { }

}; //IntExpr

//KISS results in repetitive code for binary expressions.
//Not using alternatives like a template class


class AddExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const ExprPtr left;
  const ExprPtr right;

  /** Factory function */
  static ExprPtr make(ExprPtr left, ExprPtr right) {
    return std::make_shared<AddExpr>(left, right, Private::TAG);
  }

  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  AddExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; //AddExpr


class SubExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const ExprPtr left;
  const ExprPtr right;

  /** Factory function */
  static ExprPtr make(ExprPtr left, ExprPtr right) {
    return std::make_shared<SubExpr>(left, right, Private::TAG);
  }

  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  SubExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; //SubExpr


class MulExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const ExprPtr left;
  const ExprPtr right;

  /** Factory function */
  static ExprPtr make(ExprPtr left, ExprPtr right) {
    return std::make_shared<MulExpr>(left, right, Private::TAG);
  }

  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  MulExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; //MulExpr

class DivExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const ExprPtr left;
  const ExprPtr right;

  /** Factory function */
  static ExprPtr make(ExprPtr left, ExprPtr right) {
    return std::make_shared<DivExpr>(left, right, Private::TAG);
  }

  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  DivExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; //DivExpr




#endif //ifndef EXPR_HH
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat expr.hh [K[K[Kcc 
#include "expr.hh"

#include <string>
#include <sstream>

std::string
IntExpr::toString() const
{
  std::stringstream s;
  s << value;
  return s.str();
}

static std::string
binaryExprToString(std::string op, ExprPtr left, ExprPtr right)
{
  std::stringstream s;
  s << "(" << *left << ") " << op << " (" << *right << ")";
  return s.str();
}

std::string
AddExpr::toString() const
{
  return binaryExprToString("+", left, right);
}

std::string
SubExpr::toString() const
{
  return binaryExprToString("-", left, right);
}

std::string
MulExpr::toString() const
{
  return binaryExprToString("*", left, right);
}

std::string
DivExpr::toString() const
{
  return binaryExprToString("/", left, right);
}

tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat expr.cc [1P[1P[1P[1@m[1@a[1P[1P[1@v[1@i[1@m
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"expr.cc" 45L, 705C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"expr.hh"[m

[35m#include [m[31m<string>[m
[35m#include [m[31m<sstream>[m

std::string
IntExpr::toString() [32mconst[m
{
  std::stringstream s;
  s << value;
  [38;5;130mreturn[m s.str();
}

[32mstatic[m std::string
binaryExprToString(std::string op, ExprPtr left, ExprPtr right)
{
  std::stringstream s;
  s << [31m"("[m << *left << [31m") "[m << op << [31m" ("[m << *right << [31m")"[m;
  [38;5;130mreturn[m s.str();
}

std::string
AddExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"+"[m, left, right);
}

std::string
SubExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"-"[m, left, right);
}

std::string
MulExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"*"[m, left, right);
}

std::string
DivExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"/"[m, left, right);
}

[94m~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H1,1[11CAll]2;expr.cc (~/projects/i240b/submit/lab4/exercises/3-expr) - VIM]1;expr.cc[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"expr.hh"[m

[38;5;81m#include [m[95m<string>[m
[38;5;81m#include [m[95m<sstream>[m

std::string
IntExpr::toString() [38;5;121mconst[m
{
  std::stringstream s;
  s << value;
  [93mreturn[m s.str();
}

[38;5;121mstatic[m std::string
binaryExprToString(std::string op, ExprPtr left, ExprPtr right)
{
  std::stringstream s;
  s << [95m"("[m << *left << [95m") "[m << op << [95m" ("[m << *right << [95m")"[m;
  [93mreturn[m s.str();
}

std::string
AddExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"+"[m, left, right);
}

std::string
SubExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"-"[m, left, right);
}

std::string
MulExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"*"[m, left, right);
}

std::string
DivExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"/"[m, left, right);
}

[94m~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H1,1[11CAll"expr.cc" 45L, 705C[1;1H[?25h[?25l[49;67H~@k[1;1H[49;67H   [2;1H[49;77H2,0-1[2;1H[?25h[?25l[49;67H~@k[2;1H[49;67H   [3;1H[49;77H3,1  [3;1H[?25h[?25l[49;67H~@k[3;1H[49;67H   [4;1H[49;77H4[4;1H[?25h[?25l[49;67H~@k[4;1H[49;67H   [5;1H[49;77H5,0-1[5;1H[?25h[?25l[49;67H~@k[5;1H[49;67H   [6;1H[49;77H6,1  [6;1H[?25h[?25l[49;67H~@k[6;1H[49;67H   [7;1H[49;77H7[7;1H[?25h[?25l[49;67H~@k[7;1H[49;67H   [8;1H[46m{[12;1H}[m[49;77H8[8;1H[?25h[?25l[49;67H~@k[8;1H[49;67H   [9;1H[8;1H{[12;1H}[49;77H9[9;1H[?25h[?25l[49;67H~@k[9;1H[49;67H   [10;1H[49;77H10,1[10;1H[?25h[?25l[49;67H~@k[10;1H[49;67H   [11;1H[49;78H1[11;1H[?25h[?25l[49;67H~@k[11;1H[49;67H   [12;1H[8;1H[46m{[12;1H}[m[49;78H2[12;1H[?25h[?25l[49;67H~@k[12;1H[49;67H   [13;1H[8;1H{[12;1H}[49;78H3,0-1[13;1H[?25h[?25l[49;67H~@k[13;1H[49;67H   [14;1H[49;78H4,1  [14;1H[?25h[?25l[49;67H~@k[14;1H[49;67H   [15;1H[49;78H5[15;1H[?25h[?25l[49;67H~@k[15;1H[49;67H   [16;1H[46m{[20;1H}[m[49;78H6[16;1H[?25h[?25l[49;67H~@k[16;1H[49;67H   [17;1H[16;1H{[20;1H}[49;78H7[17;1H[?25h[?25l[49;67H~@k[17;1H[49;67H   [18;1H[49;78H8[18;1H[?25h[?25l[49;67H~@k[18;1H[49;67H   [18;2H[49;80H2[18;2H[?25h[?25l[49;67H~@k[18;2H[49;67H   [18;3H[49;80H3[18;3H[?25h[?25l[49;67H~@k[18;3H[49;67H   [18;4H[49;80H4[18;4H[?25h[?25l[49;67H~@k[18;4H[49;67H   [18;5H[49;80H5[18;5H[?25h[?25l[49;67H~@k[18;5H[49;67H   [18;6H[49;80H6[18;6H[?25h[?25l[49;67H~@k[18;6H[49;67H   [18;7H[49;80H7[18;7H[?25h[?25l[49;67H~@k[18;7H[49;67H   [18;8H[49;80H8[18;8H[?25h[?25l[49;67H~@k[18;8H[49;67H   [18;9H[95m[46m([15C)[m[49;80H9[18;9H[?25h[?25l[49;67H~@k[18;9H[49;67H   [18;10H[95m([15C)[m[49;80H10[18;10H[?25h[?25l[49;67H~@k[18;10H[49;67H   [18;11H[49;81H1[18;11H[?25h[?25l[49;67H~@k[18;11H[49;67H   [18;12H[49;81H2[18;12H[?25h[?25l[49;67H~@k[18;12H[49;67H   [18;13H[49;81H3[18;13H[?25h[?25l[49;67H~@k[18;13H[49;67H   [18;14H[49;81H4[18;14H[?25h[?25l[49;67H~@k[18;14H[49;67H   [18;15H[49;81H5[18;15H[?25h[?25l[49;67H~@k[18;15H[49;67H   [18;16H[49;81H6[18;16H[?25h[?25l[49;67H~@k[18;16H[49;67H   [18;17H[49;81H7[18;17H[?25h[?25l[49;67H~@k[18;17H[49;67H   [18;18H[49;81H8[18;18H[?25h[?25l[49;67H~@k[18;18H[49;67H   [18;19H[49;81H9[18;19H[?25h[?25l[49;67H~@k[18;19H[49;67H   [18;20H[49;80H20[18;20H[?25h[?25l[49;67H~@k[18;20H[49;67H   [18;21H[49;81H1[18;21H[?25h[?25l[49;67H~@k[18;21H[49;67H   [18;22H[49;81H2[18;22H[?25h[?25l[49;67H~@k[18;22H[49;67H   [18;23H[49;81H3[18;23H[?25h[?25l[49;67H~@k[18;23H[49;67H   [18;24H[49;81H4[18;24H[?25h[?25l[49;67H~@k[18;24H[49;67H   [18;25H[18;9H[95m[46m([15C)[m[49;81H5[18;25H[?25h[?25l[49;67H~@k[18;25H[49;67H   [18;26H[18;9H[95m([15C)[m[49;81H6[18;26H[?25h[?25l[49;67H~@k[18;26H[49;67H   [18;27H[49;81H7[18;27H[?25h[?25l[49;67H~@k[18;27H[49;67H   [18;28H[49;81H8[18;28H[?25h[?25l[49;67H~@k[18;28H[49;67H   [18;29H[49;81H9[18;29H[?25h[?25l[49;67H~@k[18;29H[49;67H   [18;30H[49;80H30[18;30H[?25h[?25l[49;67H~@k[18;30H[49;67H   [18;31H[49;81H1[18;31H[?25h[?25l[49;67H~@k[18;31H[49;67H   [18;32H[49;81H2[18;32H[?25h[?25l[49;67H~@k[18;32H[49;67H   [18;33H[49;81H3[18;33H[?25h[?25l[49;67H~@k[18;33H[49;67H   [18;34H[49;81H4[18;34H[?25h[?25l[49;67H~@k[18;34H[49;67H   [18;35H[49;81H5[18;35H[?25h[?25l[49;67H~@k[18;35H[49;67H   [18;36H[49;81H6[18;36H[?25h[?25l[49;67H~@k[18;36H[49;67H   [18;37H[49;81H7[18;37H[?25h[?25l[49;67H~@k[18;37H[49;67H   [18;38H[49;81H8[18;38H[?25h[?25l[49;67H~@k[18;38H[49;67H   [18;39H[49;81H9[18;39H[?25h[?25l[49;67H~@k[18;39H[49;67H   [18;40H[95m[46m([16C)[m[49;80H40[18;40H[?25h[?25l[49;67H~@k[18;40H[49;67H   [18;41H[95m([16C)[m[49;81H1[18;41H[?25h[?25l[49;67H~@k[18;41H[49;67H   [18;42H[49;81H2[18;42H[?25h[?25l[49;67H~@k[18;42H[49;67H   [18;43H[49;81H3[18;43H[?25h[?25l[49;67H~@k[18;43H[49;67H   [18;44H[49;81H4[18;44H[?25h[?25l[49;67H~@k[18;44H[49;67H   [18;45H[49;81H5[18;45H[?25h[?25l[49;67H~@k[18;45H[49;67H   [18;46H[49;81H6[18;46H[?25h[?25l[49;67H~@k[18;46H[49;67H   [18;47H[49;81H7[18;47H[?25h[?25l[49;67H~@k[18;47H[49;67H   [18;48H[49;81H8[18;48H[?25h[?25l[49;67H~@k[18;48H[49;67H   [18;49H[49;81H9[18;49H[?25h[?25l[49;67H~@k[18;49H[49;67H   [18;50H[49;80H50[18;50H[?25h[?25l[49;67H~@k[18;50H[49;67H   [18;51H[49;81H1[18;51H[?25h[?25l[49;67H~@k[18;51H[49;67H   [18;52H[49;81H2[18;52H[?25h[?25l[49;67H~@k[18;52H[49;67H   [18;53H[49;81H3[18;53H[?25h[?25l[49;67H~@k[18;53H[49;67H   [18;54H[49;81H4[18;54H[?25h[?25l[49;67H~@k[18;54H[49;67H   [18;55H[49;81H5[18;55H[?25h[?25l[49;67H~@k[18;55H[49;67H   [18;56H[49;81H6[18;56H[?25h[?25l[49;67H~@k[18;56H[49;67H   [18;57H[18;40H[95m[46m([16C)[m[49;81H7[18;57H[?25h[?25l[49;67H~@k[18;57H[49;67H   [18;58H[18;40H[95m([16C)[m[49;81H8[18;58H[?25h[?25l[49;67H~@k[18;58H[49;67H   [18;59H[49;81H9[18;59H[?25h[?25l[49;67H~@k[18;59H[49;67H   [18;59H[?25h[?25l[49;67H~@k[18;59H[49;67H   [18;59H[?25h[?25l[49;67H~@k[18;59H[49;67H   [18;59H[?25h[?25l[49;67H~@k[18;59H[49;67H   [18;59H[?25h[?25l[49;67H~@k[18;59H[49;67H   [18;59H[?25h[?25l[49;67H~@k[18;59H[49;67H   [18;59H[?25h[?25l[49;67Hi[18;59H[49;67H [18;59H[49;1H[1m-- INSERT --[m[49;13H[K[49;77H18,59[9CAll[18;59H[?25h[?25l[18;40H[95m[46m([16C)[m[49;81H8[18;58H[?25h[?25l[95m "[m;[18;40H[95m([16C)[m[49;81H9]2;expr.cc + (~/projects/i240b/submit/lab4/exercises/3-expr) - VIM]1;expr.cc[18;59H[?25h[?25l[95m"[m;[18;60H[K[18;40H[95m[46m([16C)[m[49;81H8[18;58H[?25h[?25l[18;40H[95m([16C)[m[49;81H9[18;59H[?25h[?25l ;[49;80H60[18;60H[?25h[?25l<;[49;81H1[18;61H[?25h[?25l<;[49;81H2[18;62H[?25h[?25l ;[49;81H3[18;63H[?25h[?25l[95m";[m[49;81H4[18;64H[?25h[?25l[95m ;[m[49;81H5[18;65H[?25h[?25l[95m"[m;[49;81H6[18;66H[?25h[?25l ;[49;81H7[18;67H[?25h[?25l[49;81H6[18;66H[?25h[?25l[49;81H7[18;67H[?25h[?25l;[18;67H[K[49;81H6[18;66H[?25h[?25l[49;81H5[18;65H[?25h[49;1H[K[18;64H[?25l[49;67H^[[18;64H[49;67H  [18;65H[49;77H18,64[9CAll[18;64H[?25h[?25l[49;67Hu[18;64H[49;1H1 change; before #3  19 seconds ago[49;67H[K[18;67H ;[49;77H18,67[9CAll[49;77H[K[49;77H18,67[9CAll[18;67H[?25h[?25l[49;67Hu[18;67H[49;19H2  23[49;67H[K[18;59H;[18;60H[K[49;77H18,59[9CAll[49;77H[K[49;77H18,59[9CAll[18;59H[?25h[?25l[49;67Hu[18;59H[49;19H1  24[49;67H[K[18;58H[49;77H18,58[9CAll]2;expr.cc (~/projects/i240b/submit/lab4/exercises/3-expr) - VIM]1;expr.cc[49;77H[K[49;77H18,58[9CAll[18;58H[?25h[?25l[49;67Hu[18;58H[49;1HAlready at oldest change[49;25H[K[18;58H[49;77H18,58[9CAll[18;58H[?25h[?25l[49;67Hu[18;58H[49;67H[K[18;58H[49;77H18,58[9CAll[18;58H[?25h[?25l[49;67Hu[18;58H[49;67H[K[18;58H[49;77H18,58[9CAll[18;58H[?25h[?25l[49;67HZ[18;58H[?25h[?25l[49;68HZ[18;58H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ ls
expr.cc  expr.hh  main.cc  parse.cc  parse.hh  tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cvd[K[K[Kcd [K[K[Kvim expr.hh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"expr.hh" 131L, 2953C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef EXPR_HH_
#define EXPR_HH_

#include [m[31m"tostring.hh"[m

[35m#include [m[31m<memory>[m
[35m#include [m[31m<string>[m


[32mclass[m Expr : [38;5;130mpublic[m ToString {
};

[34m//ExprPtr is an alias for a smart shared ptr to an Expr.
//using is like a typedef[m
[38;5;130musing[m ExprPtr = std::shared_ptr<Expr>;

[34m/** An IntExpr only contains an integer value */[m
[32mclass[m IntExpr : [38;5;130mpublic[m Expr {
[38;5;130mprivate[m:
  [32menum[m [32mclass[m Private { TAG };
[38;5;130mpublic[m:
  [32mconst[m [32mint[m value;

  [34m/** Factory function */[m
  [32mstatic[m ExprPtr make([32mint[m val) {
    [38;5;130mreturn[m std::make_shared<IntExpr>(val, Private::TAG);
  }[30;3Hstd::string toString() [32mconst[m;

  [34m//use Private to ensure this constructor cannot be called from outside
[m  [34m//this class even though it is public[m
  IntExpr([32mint[m val, Private x) : value(val) { }

}; [34m//IntExpr

//KISS results in repetitive code for binary expressions.
//Not using alternatives like a template class[m


[32mclass[m AddExpr : [38;5;130mpublic[m Expr {
[38;5;130mprivate[m:
  [32menum[m [32mclass[m Private { TAG };
[38;5;130mpublic[m:
  [32mconst[m ExprPtr left;
  [32mconst[m ExprPtr right;[49;77H1,1[11CTop]2;expr.hh (~/projects/i240b/submit/lab4/exercises/3-expr) - VIM]1;expr.hh[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#ifndef EXPR_HH_
#define EXPR_HH_

#include [m[95m"tostring.hh"[m

[38;5;81m#include [m[95m<memory>[m
[38;5;81m#include [m[95m<string>[m


[38;5;121mclass[m Expr : [93mpublic[m ToString {
};

[96m//ExprPtr is an alias for a smart shared ptr to an Expr.
//using is like a typedef[m
[93musing[m ExprPtr = std::shared_ptr<Expr>;

[96m/** An IntExpr only contains an integer value */[m
[38;5;121mclass[m IntExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m [38;5;121mint[m value;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make([38;5;121mint[m val) {
    [93mreturn[m std::make_shared<IntExpr>(val, Private::TAG);
  }[30;3Hstd::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  IntExpr([38;5;121mint[m val, Private x) : value(val) { }

}; [96m//IntExpr

//KISS results in repetitive code for binary expressions.
//Not using alternatives like a template class[m


[38;5;121mclass[m AddExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;[49;77H1,1[11CTop"expr.hh" 131L, 2953C[1;1H[?25h[?25l[49;67H~@k[1;1H[49;67H   [2;1H[49;77H2[2;1H[?25h[?25l[49;67H~@k[2;1H[49;67H   [3;1H[49;77H3,0-1[3;1H[?25h[?25l[49;67H~@k[3;1H[49;67H   [4;1H[49;77H4,1  [4;1H[?25h[?25l[49;67H~@k[4;1H[49;67H   [5;1H[49;77H5,0-1[5;1H[?25h[?25l[49;67H~@k[5;1H[49;67H   [6;1H[49;77H6,1  [6;1H[?25h[?25l[49;67H~@k[6;1H[49;67H   [7;1H[49;77H7[7;1H[?25h[?25l[49;67H~@k[7;1H[49;67H   [8;1H[49;77H8,0-1[8;1H[?25h[?25l[49;67H~@k[8;1H[49;67H   [9;1H[49;77H9[9;1H[?25h[?25l[49;67H~@k[9;1H[49;67H   [10;1H[49;77H10,1 [10;1H[?25h[?25l[49;67H~@k[10;1H[49;67H   [11;1H[10;30H[46m{
}[m[49;78H1[11;1H[?25h[?25l[49;67H~@k[11;1H[49;67H   [12;1H[10;30H{
}[49;78H2,0-1[12;1H[?25h[?25l[49;67H~@k[12;1H[49;67H   [13;1H[49;78H3,1  [13;1H[?25h[?25l[49;67H~@k[13;1H[49;67H   [14;1H[49;78H4[14;1H[?25h[?25l[49;67H~@k[14;1H[49;67H   [15;1H[49;78H5[15;1H[?25h[?25l[49;67H~@k[15;1H[49;67H   [16;1H[49;78H6,0-1[16;1H[?25h[?25l[49;67H~@k[16;1H[49;67H   [17;1H[49;78H7,1  [17;1H[?25h[?25l[49;67H~@k[17;1H[49;67H   [18;1H[49;78H8[18;1H[?25h[?25l[49;67H~@k[18;1H[49;67H   [19;1H[49;78H9[19;1H[?25h[?25l[49;67H~@k[19;1H[49;67H   [20;1H[49;77H20[20;1H[?25h[?25l[49;67H~@k[20;1H[49;67H   [21;1H[49;78H1[21;1H[?25h[?25l[49;67H~@k[21;1H[49;67H   [22;1H[49;78H2[22;1H[?25h[?25l[49;67H~@k[22;1H[49;67H   [23;1H[49;78H3,0-1[23;1H[?25h[?25l[49;67H~@k[23;1H[49;67H   [24;1H[49;78H4,1  [24;1H[?25h[?25l[49;67H~@k[24;1H[49;67H   [25;1H[49;78H5[25;1H[?25h[?25l[49;67H~@k[25;1H[49;67H   [26;1H[49;78H6[26;1H[?25h[?25l[49;67H~@k[26;1H[49;67H   [27;1H[49;78H7[27;1H[?25h[?25l[49;67H~@k[27;1H[49;67H   [28;1H[49;78H8,0-1[28;1H[?25h[?25l[49;67H~@k[28;1H[49;67H   [29;1H[49;78H9,1  [29;1H[?25h[?25l[49;67H~@k[29;1H[49;67H   [30;1H[49;77H30[30;1H[?25h[?25l[49;67H~@k[30;1H[49;67H   [31;1H[49;78H1,0-1[31;1H[?25h[?25l[49;67H~@k[31;1H[49;67H   [32;1H[49;78H2,1  [32;1H[?25h[?25l[49;67H~@k[32;1H[49;67H   [33;1H[49;78H3[33;1H[?25h[?25l[49;67H~@k[33;1H[49;67H   [34;1H[49;78H4[34;1H[?25h[?25l[49;67H~@k[34;1H[49;67H   [35;1H[49;78H5,0-1[35;1H[?25h[?25l[49;67H~@k[35;1H[49;67H   [36;1H[18;29H[46m{[36;1H}[m[49;78H6,1  [36;1H[?25h[?25l[49;67H~@k[36;1H[49;67H   [37;1H[18;29H{[36;1H}[49;78H7,0-1[37;1H[?25h[?25l[49;67H~@k[37;1H[49;67H   [38;1H[49;78H8,1  [38;1H[?25h[?25l[49;67H~@k[38;1H[49;67H   [39;1H[49;78H9[39;1H[?25h[?25l[49;67H~@k[39;1H[49;67H   [40;1H[49;77H40,0-1[40;1H[?25h[?25l[49;67H~@k[40;1H[49;67H   [41;1H[49;78H1[41;1H[?25h[?25l[49;67H~@k[41;1H[49;67H   [42;1H[49;78H2,1  [42;1H[?25h[?25l[49;67H~@k[42;1H[49;67H   [43;1H[49;78H3[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[96m/** Factory function */[m[49;1H[K[49;77H44,1[11C1%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {[49;77H[K[49;77H45,1[11C2%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;5H[93mreturn[m std::make_shared<AddExpr>(left, right, Private::TAG);[49;77H[K[49;77H46,1[11C3%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H47,1[11C4%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H48,0-1[9C6%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3Hstd::string toString() [38;5;121mconst[m;[49;77H[K[49;77H49,1[11C7%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H50,1[11C8%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[96m//use Private to ensure this constructor cannot be called from outside[m[49;77H[K[49;77H51,1[11C9%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[96m//this class even though it is public[m[49;77H[K[49;77H52,1[10C10%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3HAddExpr(ExprPtr& left, ExprPtr& right, Private x) :[49;77H[K[49;77H53,0-1[8C12%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;5Hleft(left), right(right) {[49;77H[K[49;77H54,1[10C13%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H55,0-1[8C14%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;1H}; [96m//AddExpr[m[49;77H[K[49;77H56,1[10C15%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H57,1[10C16%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H58,1[10C18%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;1H[38;5;121mclass[m SubExpr : [93mpublic[m Expr {[49;77H[K[49;77H59,1[10C19%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;1H[93mprivate[m:[49;77H[K[49;77H60,1[10C20%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[24;29H[46m{[43;1H}[m[48;3H[38;5;121menum[m [38;5;121mclass[m Private { TAG };[49;77H[K[49;77H61,1[10C21%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[23;29H{[42;1H}[48;1H[93mpublic[m:[49;77H[K[49;77H62,0-1[8C22%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[38;5;121mconst[m ExprPtr left;[49;77H[K[49;77H63,0-1[8C24%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[38;5;121mconst[m ExprPtr right;[49;77H[K[49;77H64,1[10C25%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H65,1[10C26%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[96m/** Factory function */[m[49;77H[K[49;77H66,1[10C27%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {[49;77H[K[49;77H67,1[10C28%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;5H[93mreturn[m std::make_shared<SubExpr>(left, right, Private::TAG);[49;77H[K[49;77H68,1[10C30%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H69,1[10C31%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H70,0-1[8C32%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3Hstd::string toString() [38;5;121mconst[m;[49;77H[K[49;77H71,1[10C33%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H72,1[10C34%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[96m//use Private to ensure this constructor cannot be called from outside[m[49;77H[K[49;77H73,1[10C36%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[96m//this class even though it is public[m[49;77H[K[49;77H74,1[10C37%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3HSubExpr(ExprPtr& left, ExprPtr& right, Private x) :[49;77H[K[49;77H75,0-1[8C38%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;5Hleft(left), right(right) {[49;77H[K[49;77H76,1[10C39%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H77,0-1[8C40%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;1H}; [96m//SubExpr[m[49;77H[K[49;77H78,1[10C42%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H79,1[10C43%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H80,1[10C44%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;1H[38;5;121mclass[m MulExpr : [93mpublic[m Expr {[49;77H[K[49;77H81,1[10C45%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;1H[93mprivate[m:[49;77H[K[49;77H82,1[10C46%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[24;29H[46m{[43;1H}[m[48;3H[38;5;121menum[m [38;5;121mclass[m Private { TAG };[49;77H[K[49;77H83,1[10C48%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[23;29H{[42;1H}[48;1H[93mpublic[m:[49;77H[K[49;77H84,0-1[8C49%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[38;5;121mconst[m ExprPtr left;[49;77H[K[49;77H85,0-1[8C50%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[38;5;121mconst[m ExprPtr right;[49;77H[K[49;77H86,1[10C51%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H87,1[10C53%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[96m/** Factory function */[m[49;77H[K[49;77H88,1[10C54%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {[49;77H[K[49;77H89,1[10C55%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;5H[93mreturn[m std::make_shared<MulExpr>(left, right, Private::TAG);[49;77H[K[49;77H90,1[10C56%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H91,1[10C57%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H92,0-1[8C59%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3Hstd::string toString() [38;5;121mconst[m;[49;77H[K[49;77H93,1[10C60%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H94,1[10C61%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[96m//use Private to ensure this constructor cannot be called from outside[m[49;77H[K[49;77H95,1[10C62%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[96m//this class even though it is public[m[49;77H[K[49;77H96,1[10C63%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3HMulExpr(ExprPtr& left, ExprPtr& right, Private x) :[49;77H[K[49;77H97,0-1[8C65%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;5Hleft(left), right(right) {[49;77H[K[49;77H98,1[10C66%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H99,0-1[8C67%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;1H}; [96m//MulExpr[m[49;77H[K[49;77H100,1[9C68%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H101,1[9C69%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;1H[38;5;121mclass[m DivExpr : [93mpublic[m Expr {[49;77H[K[49;77H102,1[9C71%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;1H[93mprivate[m:[49;77H[K[49;77H103,1[9C72%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[38;5;121menum[m [38;5;121mclass[m Private { TAG };[49;77H[K[49;77H104,1[9C73%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[24;29H[46m{[43;1H}[m[48;1H[93mpublic[m:[49;77H[K[49;77H105,1[9C74%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[23;29H{[42;1H}[48;3H[38;5;121mconst[m ExprPtr left;[49;77H[K[49;77H106,0-1[7C75%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[38;5;121mconst[m ExprPtr right;[49;77H[K[49;77H107,1[9C77%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H108,1[9C78%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[96m/** Factory function */[m[49;77H[K[49;77H109,1[9C79%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {[49;77H[K[49;77H110,1[9C80%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;5H[93mreturn[m std::make_shared<DivExpr>(left, right, Private::TAG);[49;77H[K[49;77H111,1[9C81%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H112,1[9C83%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H113,0-1[7C84%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3Hstd::string toString() [38;5;121mconst[m;[49;77H[K[49;77H114,1[9C85%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H115,1[9C86%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[96m//use Private to ensure this constructor cannot be called from outside[m[49;77H[K[49;77H116,1[9C87%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H[96m//this class even though it is public[m[49;77H[K[49;77H117,1[9C89%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3HDivExpr(ExprPtr& left, ExprPtr& right, Private x) :[49;77H[K[49;77H118,0-1[7C90%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;5Hleft(left), right(right) {[49;77H[K[49;77H119,1[9C91%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H120,0-1[7C92%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;1H}; [96m//DivExpr[m[49;77H[K[49;77H121,1[9C93%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H122,1[9C95%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H123,1[9C96%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H124,1[9C97%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H125,1[9C98%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;1H[1;48r[48;1H
[1;49r[24;29H[46m{[43;1H}[m[48;1H[38;5;81m#endif[m [96m//ifndef EXPR_HH[m[49;77H[K[49;77H126,1[9CBot[43;1H[?25h[?25l[49;67H^D[43;1H[49;67H  [48;1H[24;29H{[43;1H}[49;78H31[48;1H[?25h[?25l[49;67H^D[48;1H[49;67H  [48;1H[?25h[?25l[49;67H^D[48;1H[49;67H  [48;1H[?25h[?25l[49;67HZ[48;1H[?25h[?25l[49;68HZ[48;1H
[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;67H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ vim expr.hh ls[Kvim expr.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"expr.cc" 45L, 705C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"expr.hh"[m

[35m#include [m[31m<string>[m
[35m#include [m[31m<sstream>[m

std::string
IntExpr::toString() [32mconst[m
{
  std::stringstream s;
  s << value;
  [38;5;130mreturn[m s.str();
}

[32mstatic[m std::string
binaryExprToString(std::string op, ExprPtr left, ExprPtr right)
{
  std::stringstream s;
  s << [31m"("[m << *left << [31m") "[m << op << [31m" ("[m << *right << [31m")"[m;
  [38;5;130mreturn[m s.str();
}

std::string
AddExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"+"[m, left, right);
}

std::string
SubExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"-"[m, left, right);
}

std::string
MulExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"*"[m, left, right);
}

std::string
DivExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"/"[m, left, right);
}

[94m~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H18,58[9CAll]2;expr.cc (~/projects/i240b/submit/lab4/exercises/3-expr) - VIM]1;expr.cc[18;58H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"expr.hh"[m

[38;5;81m#include [m[95m<string>[m
[38;5;81m#include [m[95m<sstream>[m

std::string
IntExpr::toString() [38;5;121mconst[m
{
  std::stringstream s;
  s << value;
  [93mreturn[m s.str();
}

[38;5;121mstatic[m std::string
binaryExprToString(std::string op, ExprPtr left, ExprPtr right)
{
  std::stringstream s;
  s << [95m"("[m << *left << [95m") "[m << op << [95m" ("[m << *right << [95m")"[m;
  [93mreturn[m s.str();
}

std::string
AddExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"+"[m, left, right);
}

std::string
SubExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"-"[m, left, right);
}

std::string
MulExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"*"[m, left, right);
}

std::string
DivExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"/"[m, left, right);
}

[94m~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H18,58[9CAll"expr.cc" 45L, 705C[18;58H[?25h[?25l[49;67H~@k[18;58H[49;67H   [17;22H[49;78H7,22[17;22H[?25h[?25l[49;67H~@k[17;22H[49;67H   [16;1H[46m{[20;1H}[m[49;78H6,1 [16;1H[?25h[?25l[49;67H~@k[16;1H[49;67H   [15;22H
{[20;1H}[49;78H5,22[15;22H[?25h[?25l[49;67H~@k[15;22H[49;67H   [14;18H[49;78H4,18[14;18H[?25h[?25l[49;67H~@k[14;18H[49;67H   [13;1H[49;78H3,0-1[13;1H[?25h[?25l[49;67H~@k[13;1H[49;67H   [12;1H[8;1H[46m{[12;1H}[m[49;78H2,1  [12;1H[?25h[?25l[49;67H~@k[12;1H[49;67H   [11;17H[8;1H{[12;1H}[49;78H1,17[11;17H[?25h[?25l[49;67H~@k[11;17H[49;67H   [10;13H[49;78H0,13[10;13H[?25h[?25l[49;67H~@k[10;13H[49;67H   [9;22H[49;77H9,22 [9;22H[?25h[?25l[49;67H~@k[9;22H[49;67H   [8;1H[46m{[12;1H}[m[49;77H8,1 [8;1H[?25h[?25l[49;67H~@k[8;1H[49;67H   [7;22H
{[12;1H}[49;77H7,22[7;22H[?25h[?25l[49;67H~@k[7;22H[49;67H   [6;11H[49;77H6,11[6;11H[?25h[?25l[49;67H~@k[6;11H[49;67H   [5;1H[49;77H5,0-1[5;1H[?25h[?25l[49;67H~@k[5;1H[49;67H   [4;18H[49;77H4,18 [4;18H[?25h[?25l[49;67H~@k[4;18H[49;67H   [3;17H[49;77H3,17[3;17H[?25h[?25l[49;67H~@k[3;17H[49;67H   [2;1H[49;77H2,0-1[2;1H[?25h[?25l[49;67H~@k[2;1H[49;67H   [1;18H[49;77H1,18 [1;18H[?25h[?25l[49;67H~@k[1;18H[49;67H   [2;1H[49;77H2,0-1[2;1H[?25h[?25l[49;67H~@k[2;1H[49;67H   [3;17H[49;77H3,17 [3;17H[?25h[?25l[49;67H~@k[3;17H[49;67H   [4;18H[49;77H4,18[4;18H[?25h[?25l[49;67H~@k[4;18H[49;67H   [5;1H[49;77H5,0-1[5;1H[?25h[?25l[49;67H~@k[5;1H[49;67H   [6;11H[49;77H6,11 [6;11H[?25h[?25l[49;67H~@k[6;11H[49;67H   [7;22H[49;77H7,22[7;22H[?25h[?25l[49;67H~@k[7;22H[49;67H   [8;1H[46m{[12;1H}[m[49;77H8,1 [8;1H[?25h[?25l[49;67H~@k[8;1H[49;67H   [9;22H[8;1H{[12;1H}[49;77H9,22[9;22H[?25h[?25l[49;67H~@k[9;22H[49;67H   [10;13H[49;77H10,13[10;13H[?25h[?25l[49;67H~@k[10;13H[49;67H   [11;17H[49;78H1,17[11;17H[?25h[?25l[49;67H~@k[11;17H[49;67H   [12;1H[8;1H[46m{[12;1H}[m[49;78H2,1 [12;1H[?25h[?25l[49;67H~@k[12;1H[49;67H   [13;1H[8;1H{[12;1H}[49;78H3,0-1[13;1H[?25h[?25l[49;67H~@k[13;1H[49;67H   [14;18H[49;78H4,18 [14;18H[?25h[?25l[49;67H~@k[14;18H[49;67H   [15;22H[49;78H5,22[15;22H[?25h[?25l[49;67H~@k[15;22H[49;67H   [16;1H[46m{[20;1H}[m[49;78H6,1 [16;1H[?25h[?25l[49;67H~@k[16;1H[49;67H   [17;22H[16;1H{[20;1H}[49;78H7,22[17;22H[?25h[?25l[49;67H~@k[17;22H[49;67H   [18;22H[49;78H8[18;22H[?25h[?25l[49;67H~@k[18;22H[49;67H   [19;17H[49;78H9,17[19;17H[?25h[?25l[49;67H~@k[19;17H[49;67H   [20;1H[16;1H[46m{[20;1H}[m[49;77H20,1 [20;1H[?25h[?25l[49;67H~@k[20;1H[49;67H   [21;1H[16;1H{[20;1H}[49;78H1,0-1[21;1H[?25h[?25l[49;67H~@k[21;1H[49;67H   [22;11H[49;78H2,11 [22;11H[?25h[?25l[49;67H~@k[22;11H[49;67H   [23;22H[49;78H3,22[23;22H[?25h[?25l[49;67H~@k[23;22H[49;67H   [24;1H[46m{

}[m[49;78H4,1 [24;1H[?25h[?25l[49;67H~@k[24;1H[49;67H   [23;22H
{

}[49;78H3,22[23;22H[?25h[?25l[49;67H~@k[23;22H[49;67H   [22;11H[49;78H2,11[22;11H[?25h[?25l[49;67H~@k[22;11H[49;67H   [21;1H[49;78H1,0-1[21;1H[?25h[?25l[49;67H~@k[21;1H[49;67H   [20;1H[16;1H[46m{[20;1H}[m[49;78H0,1  [20;1H[?25h[?25l[49;67H~@k[20;1H[49;67H   [21;1H[16;1H{[20;1H}[49;78H1,0-1[21;1H[?25h[?25l[49;67H~@k[21;1H[49;67H   [22;11H[49;78H2,11 [22;11H[?25h[?25l[49;67H~@k[22;11H[49;67H   [23;22H[49;78H3,22[23;22H[?25h[?25l[49;67H~@k[23;22H[49;67H   [24;1H[46m{

}[m[49;78H4,1 [24;1H[?25h[?25l[49;67H~@k[24;1H[49;67H   [25;22H[24;1H{

}[49;78H5,22[25;22H[?25h[?25l[49;67H~@k[25;22H[49;67H   [26;1H[24;1H[46m{

}[m[49;78H6,1 [26;1H[?25h[?25l[49;67H~@k[26;1H[49;67H   [27;1H[24;1H{

}[49;78H7,0-1[27;1H[?25h[?25l[49;67H~@k[27;1H[49;67H   [28;11H[49;78H8,11 [28;11H[?25h[?25l[49;67H~@k[28;11H[49;67H   [29;22H[49;78H9,22[29;22H[?25h[?25l[49;67H~@k[29;22H[49;67H   [30;1H[46m{

}[m[49;77H30,1 [30;1H[?25h[?25l[49;67H~@k[30;1H[49;67H   [31;22H[30;1H{

}[49;78H1,22[31;22H[?25h[?25l[49;67H~@k[31;22H[49;67H   [32;1H[30;1H[46m{

}[m[49;78H2,1 [32;1H[?25h[?25l[49;67H~@k[32;1H[49;67H   [33;1H[30;1H{

}[49;78H3,0-1[33;1H[?25h[?25l[49;67H~@k[33;1H[49;67H   [34;11H[49;78H4,11 [34;11H[?25h[?25l[49;67H~@k[34;11H[49;67H   [33;1H[49;78H3,0-1[33;1H[?25h[?25l[49;67H~@k[33;1H[49;67H   [32;1H[30;1H[46m{

}[m[49;78H2,1  [32;1H[?25h[?25l[49;67H~@k[32;1H[49;67H   [31;22H[30;1H{

}[49;78H1,22[31;22H[?25h[?25l[49;67H~@k[31;22H[49;67H   [30;1H[46m{

}[m[49;78H0,1 [30;1H[?25h[?25l[49;67H~@k[30;1H[49;67H   [29;22H
{

}[49;77H29,22[29;22H[?25h[?25l[49;67H~@k[29;22H[49;67H   [28;11H[49;78H8,11[28;11H[?25h[?25l[49;67H~@k[28;11H[49;67H   [27;1H[49;78H7,0-1[27;1H[?25h[?25l[49;67H~@k[27;1H[49;67H   [26;1H[24;1H[46m{

}[m[49;78H6,1  [26;1H[?25h[?25l[49;67H~@k[26;1H[49;67H   [25;22H[24;1H{

}[49;78H5,22[25;22H[?25h[?25l[49;67H~@k[25;22H[49;67H   [24;1H[46m{

}[m[49;78H4,1 [24;1H[?25h[?25l[49;67H~@k[24;1H[49;67H   [23;22H
{

}[49;78H3,22[23;22H[?25h[?25l[49;67H~@k[23;22H[49;67H   [22;11H[49;78H2,11[22;11H[?25h[?25l[49;67H~@k[22;11H[49;67H   [21;1H[49;78H1,0-1[21;1H[?25h[?25l[49;67H~@k[21;1H[49;67H   [20;1H[16;1H[46m{[20;1H}[m[49;78H0,1  [20;1H[?25h[?25l[49;67H~@k[20;1H[49;67H   [19;17H[16;1H{[20;1H}[49;77H19,17[19;17H[?25h[?25l[49;67H~@k[19;17H[49;67H   [18;22H[49;78H8,22[18;22H[?25h[?25l[49;67H~@k[18;22H[49;67H   [17;22H[49;78H7[17;22H[?25h[?25l[49;67H~@k[17;22H[49;67H   [16;1H[46m{[20;1H}[m[49;78H6,1 [16;1H[?25h[?25l[49;67H~@k[16;1H[49;67H   [15;22H
{[20;1H}[49;78H5,22[15;22H[?25h[?25l[49;67H~@k[15;22H[49;67H   [14;18H[49;78H4,18[14;18H[?25h[?25l[49;67H^D[14;18H[49;67H  [38;1H[36;1H[46m{

}[m[49;77H38,1 [38;1H[?25h[?25l[49;67H^D[38;1H[49;67H  [45;1H[36;1H{

}[49;77H45,0-1[45;1H[?25h[?25l[49;67H^D[45;1H[49;67H  [45;1H[?25h[?25l[49;67H^D[45;1H[49;67H  [45;1H[?25h[?25l[49;67H^D[45;1H[49;67H  [45;1H[?25h[?25l[49;67H^D[45;1H[49;67H  [45;1H[?25h[?25l[49;67HZ[45;1H[?25h[?25l[49;68HZ[45;1H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ ls
expr.cc  expr.hh  main.cc  parse.cc  parse.hh  tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cd [K[K[Kvim [K[K[K[Kcat parse.cc [K[K[Khh 
#ifndef PARSE_HH_
#define  PARSE_HH_

#include "expr.hh"

#include <string>

/** Parser for prefix arith expressions involving integers, +, -, *, / */
ExprPtr parse(std::string str);


#endif //ifndef PARSE_HH_
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat parse.hh [K[K[Kcc 
#include "parse.hh"

#include <sstream>
#include <string>
#include <cstdlib>
#include <cctype>


static ExprPtr
parse(std::stringstream& s, std::string str)
{
  if (s.eof()) {
    std::cerr << "unexpected end-of-input \"" << str << "\"" << std::endl;
    std::exit(1);
  }
  char c;
  s >> c;
  if (std::isdigit(c)) {
    s.unget();
    int val;
    s >> val;
    return IntExpr::make(val);
  }
  else {
    ExprPtr left = parse(s, str);
    ExprPtr right = parse(s, str);
    switch (c) {
    case '+':
      return AddExpr::make(left, right);
    case '-':
      return SubExpr::make(left, right);
    case '*':
      return MulExpr::make(left, right);
    case '/':
      return DivExpr::make(left, right);
    default:
      std::cerr << "unexpected char '" << c << "' in input \""
		<< str << "\"" << std::endl;
      std::exit(1);
    }
  }
}

ExprPtr
parse(std::string str) {
  std::stringstream s(str);
  return parse(s, str);
}

tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ ls
expr.cc  expr.hh  main.cc  parse.cc  parse.hh  tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat tostring.cc 
#include "tostring.hh"

#include <iostream>
#include <string>


std::ostream&
operator<<(std::ostream& out, const ToString& obj)
{
  return out << obj.toString();
}
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat tostring.g[Khh 
#ifndef TO_STRING_HH_
#define TO_STRING_HH_

#include <iostream>
#include <string>

//Inheriting from this abstract class and defining a toString
//method allows a class to use << on an ostream.
struct ToString {
  virtual std::string toString() const = 0;
};

std::ostream& operator<<(std::ostream& out, const ToString& obj);
  
#endif //ifndef TO_STRING_HH_
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ ls
expr.cc  expr.hh  main.cc  parse.cc  parse.hh  tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat expr.[K[K[K[K[Kmain.cc 
#include "expr.hh"
#include "parse.hh"

#include <iostream>
#include <cstdlib>

int
main(int argc, char* argv[])
{
  if (argc < 2) {
    std::cerr << "usage: " << argv[0] << " PREFIX_EXPR..." << std::endl;
    std::exit(1);
  }
  for (auto i = 1; i < argc; i++) {
    std::cout << *parse(argv[i]) << std::endl;
  }
}
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat [K 
expr.cc      expr.hh      main.cc      parse.cc     parse.hh     tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat 
expr.cc      expr.hh      main.cc      parse.cc     parse.hh     tostring.cc  tostring.hh
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ cat expr.hh 
#ifndef EXPR_HH_
#define EXPR_HH_

#include "tostring.hh"

#include <memory>
#include <string>


class Expr : public ToString {
};

//ExprPtr is an alias for a smart shared ptr to an Expr.
//using is like a typedef
using ExprPtr = std::shared_ptr<Expr>;

/** An IntExpr only contains an integer value */
class IntExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const int value;

  /** Factory function */
  static ExprPtr make(int val) {
    return std::make_shared<IntExpr>(val, Private::TAG);
  }

  
  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  IntExpr(int val, Private x) : value(val) { }

}; //IntExpr

//KISS results in repetitive code for binary expressions.
//Not using alternatives like a template class


class AddExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const ExprPtr left;
  const ExprPtr right;

  /** Factory function */
  static ExprPtr make(ExprPtr left, ExprPtr right) {
    return std::make_shared<AddExpr>(left, right, Private::TAG);
  }

  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  AddExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; //AddExpr


class SubExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const ExprPtr left;
  const ExprPtr right;

  /** Factory function */
  static ExprPtr make(ExprPtr left, ExprPtr right) {
    return std::make_shared<SubExpr>(left, right, Private::TAG);
  }

  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  SubExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; //SubExpr


class MulExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const ExprPtr left;
  const ExprPtr right;

  /** Factory function */
  static ExprPtr make(ExprPtr left, ExprPtr right) {
    return std::make_shared<MulExpr>(left, right, Private::TAG);
  }

  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  MulExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; //MulExpr

class DivExpr : public Expr {
private:
  enum class Private { TAG };
public:
  const ExprPtr left;
  const ExprPtr right;

  /** Factory function */
  static ExprPtr make(ExprPtr left, ExprPtr right) {
    return std::make_shared<DivExpr>(left, right, Private::TAG);
  }

  std::string toString() const;

  //use Private to ensure this constructor cannot be called from outside
  //this class even though it is public
  DivExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; //DivExpr




#endif //ifndef EXPR_HH
tman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ vim e[Kexpr.hh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"expr.hh" 131L, 2953C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[3;1H[32mclass[m MulExpr : [38;5;130mpublic[m Expr {
[38;5;130mprivate[m:
  [32menum[m [32mclass[m Private { TAG };
[38;5;130mpublic[m:
  [32mconst[m ExprPtr left;
  [32mconst[m ExprPtr right;

  [34m/** Factory function */[m
  [32mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [38;5;130mreturn[m std::make_shared<MulExpr>(left, right, Private::TAG);
  }

  std::string toString() [32mconst[m;

  [34m//use Private to ensure this constructor cannot be called from outside
[m  [34m//this class even though it is public[m
  MulExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [34m//MulExpr[m

[32mclass[m DivExpr : [38;5;130mpublic[m Expr {
[38;5;130mprivate[m:
  [32menum[m [32mclass[m Private { TAG };
[38;5;130mpublic[m:
  [32mconst[m ExprPtr left;
  [32mconst[m ExprPtr right;

  [34m/** Factory function */[m
  [32mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [38;5;130mreturn[m std::make_shared<DivExpr>(left, right, Private::TAG);
  }

  std::string toString() [32mconst[m;

  [34m//use Private to ensure this constructor cannot be called from outside
[m  [34m//this class even though it is public[m
  DivExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [34m//DivExpr[m[48;1H[35m#endif[m [34m//ifndef EXPR_HH[m[49;77H131,1[9CBot]2;expr.hh (~/projects/i240b/submit/lab4/exercises/3-expr) - VIM]1;expr.hh[48;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[3;1H[38;5;121mclass[m MulExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [93mreturn[m std::make_shared<MulExpr>(left, right, Private::TAG);
  }

  std::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  MulExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [96m//MulExpr[m

[38;5;121mclass[m DivExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [93mreturn[m std::make_shared<DivExpr>(left, right, Private::TAG);
  }

  std::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  DivExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [96m//DivExpr[m[48;1H[38;5;81m#endif[m [96m//ifndef EXPR_HH[m[49;77H131,1[9CBot"expr.hh" 131L, 2953C[48;1H[?25h[?25l[32;52H[46m{

[m  [46m}[m[49;78H17,3[34;3H[?25h[?25l[49;67H^U[34;3H[49;67H  [34;3H[1;48r[1;1H[24L[1;49r[1;3H}
}; [96m//AddExpr[m


[38;5;121mclass[m SubExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [93mreturn[m std::make_shared<SubExpr>(left, right, Private::TAG);
  }

  std::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  SubExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [96m//SubExpr[m[49;1H[K[49;77H93,3[10C71%[34;3H[?25h[?25l[49;67H^U[34;3H[49;67H  [34;3H[1;48r[1;1H[24L[1;49r[1;1H}; [96m//IntExpr

//KISS results in repetitive code for binary expressions.
//Not using alternatives like a template class[m


[38;5;121mclass[m AddExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [93mreturn[m std::make_shared<AddExpr>(left, right, Private::TAG);
  }

  std::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  AddExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {[49;77H[K[49;77H69,3[10C42%[34;3H[?25h[?25l[49;67H^U[34;3H[49;67H  [34;1H[1;48r[1;1H[24L[1;49r[2;1H[96m//ExprPtr is an alias for a smart shared ptr to an Expr.
//using is like a typedef[m
[93musing[m ExprPtr = std::shared_ptr<Expr>;

[96m/** An IntExpr only contains an integer value */[m
[38;5;121mclass[m IntExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m [38;5;121mint[m value;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make([38;5;121mint[m val) {
    [93mreturn[m std::make_shared<IntExpr>(val, Private::TAG);
  }[19;3Hstd::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  IntExpr([38;5;121mint[m val, Private x) : value(val) { }[49;77H[K[49;77H45,1[10C13%[34;1H[?25h[?25l[49;67H^U[34;1H[49;67H  [21;1H[1;48r[1;1H[11L[1;49r[1;1H[38;5;81m#ifndef EXPR_HH_
#define EXPR_HH_

#include [m[95m"tostring.hh"[m

[38;5;81m#include [m[95m<memory>[m
[38;5;81m#include [m[95m<string>[m


[38;5;121mclass[m Expr : [93mpublic[m ToString {
};[49;77H[K[49;77H21,1[10CTop[21;1H[?25h[?25l[49;67H^U[21;1H[49;67H  [1;1H[49;77H1,1 [1;1H[?25h[?25l[49;67H^U[1;1H[49;67H  [1;1H[?25h[?25l[49;67H^D[1;1H[49;67H  [6;3H[1;48r[1;1H[24M[1;49r[25;3H[96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [93mreturn[m std::make_shared<AddExpr>(left, right, Private::TAG);
  }

  std::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  AddExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [96m//AddExpr[m


[38;5;121mclass[m SubExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {[49;77H[K[49;77H30,3[10C28%[6;3H[?25h[?25l[49;77H45,7[21;7H[?25h[?25l[49;67H~@k[21;7H[49;67H   [22;21H[49;78H6,21[22;21H[?25h[?25l[49;67H~@k[22;21H[49;67H   [23;22H[49;78H7,22[23;22H[?25h[?25l[49;67H~@k[23;22H[49;67H   [24;1H[49;78H8,0-1[24;1H[?25h[?25l[49;67H^D[24;1H[49;67H  [24;3H[1;48r[1;1H[24M[1;49r[25;5H[93mreturn[m std::make_shared<SubExpr>(left, right, Private::TAG);
  }

  std::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  SubExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [96m//SubExpr[m


[38;5;121mclass[m MulExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [93mreturn[m std::make_shared<MulExpr>(left, right, Private::TAG);
  }[49;77H[K[49;77H72,3[10C57%[24;3H[?25h[?25l[49;67H^D[24;3H[49;67H  [24;3H[1;48r[1;1H[24M[1;49r[22;52H[46m{

[m  [46m}[m

  std::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  MulExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [96m//MulExpr[m

[38;5;121mclass[m DivExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [93mreturn[m std::make_shared<DivExpr>(left, right, Private::TAG);
  }

  std::string toString() [38;5;121mconst[m;[49;77H[K[49;77H96,3[10C86%[24;3H[?25h[?25l[49;67H^D[24;3H[49;67H  [37;1H[1;48r[1;1H[11M[1;49r[11;52H{

  }[38;3H[96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  DivExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [96m//DivExpr[m[48;1H[38;5;81m#endif[m [96m//ifndef EXPR_HH[m[49;77H[K[49;77H120,0-1[7CBot[37;1H[?25h[?25l[49;67H^D[37;1H[49;67H  [48;1H[49;78H31,1  [48;1H[?25h[?25l[49;67H^D[48;1H[49;67H  [48;1H[?25h[?25l[49;67H^D[48;1H[49;67H  [48;1H[?25h[?25l[49;67HZ[48;1H[?25h[?25l[49;68HZ[48;1H
[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;67H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ vim expr.hh [K[K[Kcc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"expr.cc" 45L, 705C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"expr.hh"[m

[35m#include [m[31m<string>[m
[35m#include [m[31m<sstream>[m

std::string
IntExpr::toString() [32mconst[m
{
  std::stringstream s;
  s << value;
  [38;5;130mreturn[m s.str();
}

[32mstatic[m std::string
binaryExprToString(std::string op, ExprPtr left, ExprPtr right)
{
  std::stringstream s;
  s << [31m"("[m << *left << [31m") "[m << op << [31m" ("[m << *right << [31m")"[m;
  [38;5;130mreturn[m s.str();
}

std::string
AddExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"+"[m, left, right);
}

std::string
SubExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"-"[m, left, right);
}

std::string
MulExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"*"[m, left, right);
}

std::string
DivExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"/"[m, left, right);
}

[94m~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H45,0-1[8CAll]2;expr.cc (~/projects/i240b/submit/lab4/exercises/3-expr) - VIM]1;expr.cc[45;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"expr.hh"[m

[38;5;81m#include [m[95m<string>[m
[38;5;81m#include [m[95m<sstream>[m

std::string
IntExpr::toString() [38;5;121mconst[m
{
  std::stringstream s;
  s << value;
  [93mreturn[m s.str();
}

[38;5;121mstatic[m std::string
binaryExprToString(std::string op, ExprPtr left, ExprPtr right)
{
  std::stringstream s;
  s << [95m"("[m << *left << [95m") "[m << op << [95m" ("[m << *right << [95m")"[m;
  [93mreturn[m s.str();
}

std::string
AddExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"+"[m, left, right);
}

std::string
SubExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"-"[m, left, right);
}

std::string
MulExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"*"[m, left, right);
}

std::string
DivExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"/"[m, left, right);
}

[94m~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H45,0-1[8CAll"expr.cc" 45L, 705C[45;1H[?25h[?25l[49;67HZ[45;1H[?25h[?25l[49;68HZ[45;1H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ ca[K[Kvim main.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main.cc" 17L, 317C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"expr.hh"[m
[35m#include [m[31m"parse.hh"[m

[35m#include [m[31m<iostream>[m
[35m#include [m[31m<cstdlib>[m

[32mint[m
main([32mint[m argc, [32mchar[m* argv[])
{
  [38;5;130mif[m (argc < [31m2[m) {
    std::cerr << [31m"usage: "[m << argv[[31m0[m] << [31m" PREFIX_EXPR..."[m << std::endl;
    std::exit([31m1[m);
  }
  [38;5;130mfor[m ([32mauto[m i = [31m1[m; i < argc; i++) {
    std::cout << *parse(argv[i]) << std::endl;
  }
}
[94m~                                                                                             [19;1H~                                                                                             [20;1H~                                                                                             [21;1H~                                                                                             [22;1H~                                                                                             [23;1H~                                                                                             [24;1H~                                                                                             [25;1H~                                                                                             [26;1H~                                                                                             [27;1H~                                                                                             [28;1H~                                                                                             [29;1H~                                                                                             [30;1H~                                                                                             [31;1H~                                                                                             [32;1H~                                                                                             [33;1H~                                                                                             [34;1H~                                                                                             [35;1H~                                                                                             [36;1H~                                                                                             [37;1H~                                                                                             [38;1H~                                                                                             [39;1H~                                                                                             [40;1H~                                                                                             [41;1H~                                                                                             [42;1H~                                                                                             [43;1H~                                                                                             [44;1H~                                                                                             [45;1H~                                                                                             [46;1H~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H1,1[11CAll]2;main.cc (~/projects/i240b/submit/lab4/exercises/3-expr) - VIM]1;main.cc[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"expr.hh"[m
[38;5;81m#include [m[95m"parse.hh"[m

[38;5;81m#include [m[95m<iostream>[m
[38;5;81m#include [m[95m<cstdlib>[m

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mchar[m* argv[])
{
  [93mif[m (argc < [95m2[m) {
    std::cerr << [95m"usage: "[m << argv[[95m0[m] << [95m" PREFIX_EXPR..."[m << std::endl;
    std::exit([95m1[m);
  }
  [93mfor[m ([38;5;121mauto[m i = [95m1[m; i < argc; i++) {
    std::cout << *parse(argv[i]) << std::endl;
  }
}
[94m~                                                                                             [19;1H~                                                                                             [20;1H~                                                                                             [21;1H~                                                                                             [22;1H~                                                                                             [23;1H~                                                                                             [24;1H~                                                                                             [25;1H~                                                                                             [26;1H~                                                                                             [27;1H~                                                                                             [28;1H~                                                                                             [29;1H~                                                                                             [30;1H~                                                                                             [31;1H~                                                                                             [32;1H~                                                                                             [33;1H~                                                                                             [34;1H~                                                                                             [35;1H~                                                                                             [36;1H~                                                                                             [37;1H~                                                                                             [38;1H~                                                                                             [39;1H~                                                                                             [40;1H~                                                                                             [41;1H~                                                                                             [42;1H~                                                                                             [43;1H~                                                                                             [44;1H~                                                                                             [45;1H~                                                                                             [46;1H~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H1,1[11CAll"main.cc" 17L, 317C[1;1H[?25h[?25l[49;67H~@k[1;1H[49;67H   [2;1H[49;77H2[2;1H[?25h[?25l[49;67H~@k[2;1H[49;67H   [3;1H[49;77H3,0-1[3;1H[?25h[?25l[49;67H~@k[3;1H[49;67H   [4;1H[49;77H4,1  [4;1H[?25h[?25l[49;67H~@k[4;1H[49;67H   [5;1H[49;77H5[5;1H[?25h[?25l[49;67H~@k[5;1H[49;67H   [6;1H[49;77H6,0-1[6;1H[?25h[?25l[49;67H~@k[6;1H[49;67H   [7;1H[49;77H7,1  [7;1H[?25h[?25l[49;67H~@k[7;1H[49;67H   [8;1H[49;77H8[8;1H[?25h[?25l[49;67H~@k[8;1H[49;67H   [9;1H[46m{[17;1H}[m[49;77H9[9;1H[?25h[?25l[49;67H~@k[9;1H[49;67H   [10;1H[9;1H{[17;1H}[49;77H10,1[10;1H[?25h[?25l[49;67H~@k[10;1H[49;67H   [11;1H[49;78H1[11;1H[?25h[?25l[49;67H~@k[11;1H[49;67H   [12;1H[49;78H2[12;1H[?25h[?25l[49;67H~@k[12;1H[49;67H   [13;1H[49;78H3[13;1H[?25h[?25l[49;67H~@k[13;1H[49;67H   [14;1H[49;78H4[14;1H[?25h[?25l[49;67H~@k[14;1H[49;67H   [15;1H[49;78H5[15;1H[?25h[?25l[49;67HZ[15;1H[?25h[?25l[49;68HZ[15;1H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ vim main.cc expr[C[C[C[Chh[Ccc[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"expr.cc" 45L, 705C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"expr.hh"[m

[35m#include [m[31m<string>[m
[35m#include [m[31m<sstream>[m

std::string
IntExpr::toString() [32mconst[m
{
  std::stringstream s;
  s << value;
  [38;5;130mreturn[m s.str();
}

[32mstatic[m std::string
binaryExprToString(std::string op, ExprPtr left, ExprPtr right)
{
  std::stringstream s;
  s << [31m"("[m << *left << [31m") "[m << op << [31m" ("[m << *right << [31m")"[m;
  [38;5;130mreturn[m s.str();
}

std::string
AddExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"+"[m, left, right);
}

std::string
SubExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"-"[m, left, right);
}

std::string
MulExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"*"[m, left, right);
}

std::string
DivExpr::toString() [32mconst[m
{
  [38;5;130mreturn[m binaryExprToString([31m"/"[m, left, right);
}

[94m~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H45,0-1[8CAll]2;expr.cc (~/projects/i240b/submit/lab4/exercises/3-expr) - VIM]1;expr.cc[45;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"expr.hh"[m

[38;5;81m#include [m[95m<string>[m
[38;5;81m#include [m[95m<sstream>[m

std::string
IntExpr::toString() [38;5;121mconst[m
{
  std::stringstream s;
  s << value;
  [93mreturn[m s.str();
}

[38;5;121mstatic[m std::string
binaryExprToString(std::string op, ExprPtr left, ExprPtr right)
{
  std::stringstream s;
  s << [95m"("[m << *left << [95m") "[m << op << [95m" ("[m << *right << [95m")"[m;
  [93mreturn[m s.str();
}

std::string
AddExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"+"[m, left, right);
}

std::string
SubExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"-"[m, left, right);
}

std::string
MulExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"*"[m, left, right);
}

std::string
DivExpr::toString() [38;5;121mconst[m
{
  [93mreturn[m binaryExprToString([95m"/"[m, left, right);
}

[94m~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H45,0-1[8CAll"expr.cc" 45L, 705C[45;1H[?25h[?25l[49;67H~@k[45;1H[49;67H   [45;1H[?25h[?25l[49;67H~@k[45;1H[49;67H   [45;1H[?25h[?25l[49;67H~@k[45;1H[49;67H   [45;1H[?25h[?25l[49;67H~@k[45;1H[49;67H   [45;1H[?25h[?25l[49;67H~@k[45;1H[49;67H   [45;1H[?25h[?25l[49;67H~@k[45;1H[49;67H   [45;1H[?25h[?25l[49;67H~@k[45;1H[49;67H   [45;1H[?25h[?25l[49;67H~@k[45;1H[49;67H   [45;1H[?25h[?25l[49;67H~@k[45;1H[49;67H   [45;1H[?25h[?25l[49;67H~@k[45;1H[49;67H   [44;1H[42;1H[46m{

}[m[49;78H4,1  [44;1H[?25h[?25l[49;67H~@k[44;1H[49;67H   [43;1H[42;1H{

}[49;78H3[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [42;1H[46m{

}[m[49;78H2[42;1H[?25h[?25l[49;67H~@k[42;1H[49;67H   [41;1H
{

}[49;78H1[41;1H[?25h[?25l[49;67H~@k[41;1H[49;67H   [40;1H[49;78H0[40;1H[?25h[?25l[49;67H~@k[40;1H[49;67H   [39;1H[49;77H39,0-1[39;1H[?25h[?25l[49;67H~@k[39;1H[49;67H   [38;1H[36;1H[46m{

}[m[49;78H8,1  [38;1H[?25h[?25l[49;67H~@k[38;1H[49;67H   [37;1H[36;1H{

}[49;78H7[37;1H[?25h[?25l[49;67H~@k[37;1H[49;67H   [36;1H[46m{

}[m[49;78H6[36;1H[?25h[?25l[49;67H~@k[36;1H[49;67H   [35;1H
{

}[49;78H5[35;1H[?25h[?25l[49;67H~@k[35;1H[49;67H   [34;1H[49;78H4[34;1H[?25h[?25l[49;67H~@k[34;1H[49;67H   [33;1H[49;78H3,0-1[33;1H[?25h[?25l[49;67H~@k[33;1H[49;67H   [32;1H[30;1H[46m{

}[m[49;78H2,1  [32;1H[?25h[?25l[49;67H~@k[32;1H[49;67H   [31;1H[30;1H{

}[49;78H1[31;1H[?25h[?25l[49;67H~@k[31;1H[49;67H   [30;1H[46m{

}[m[49;78H0[30;1H[?25h[?25l[49;67H~@k[30;1H[49;67H   [29;1H
{

}[49;77H29[29;1H[?25h[?25l[49;67H/[29;1H[49;1H[K[49;1H/[?2004h[?25hv[?25l[41;3H[7mv[m[49;77H41,3[10CAll[49;77H[K[49;3H[?25ha[?25l[10;8H[7mva[m[41;3Hv[49;77H10,8[10CAll[49;77H[K[49;4H[?25hl[?25l[10;10H[7ml[m[49;77H10,8[10CAll[49;77H[K[49;5H[?25hu[?25l[10;11H[7mu[m[49;77H10,8[10CAll[49;77H[K[49;6H[?25he[?25l[10;12H[7me[m[49;77H10,8[10CAll[49;77H[K[49;7H[?25h[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[10;8H[mvalue[49;77H10,8[10CAll[49;77H[K[49;77H10,8[10CAll[10;8H[?25h[?25l[49;67Hn[10;8H[49;1H/value[49;7H[K[49;1H[38;5;224msearch hit BOTTOM, continuing at TOP[m/value[49;7H[K[49;1H[38;5;224msearch hit BOTTOM, continuing at TOP[10;8H[m[49;77H10,8[10CAll[49;77H[K[49;77H10,8[10CAll[10;8H[?25h[?25l[49;67Hn[10;8H[49;1H/value[49;7H[K[49;1H[38;5;224msearch hit BOTTOM, continuing at TOP[m/value[49;7H[K[49;1H[38;5;224msearch hit BOTTOM, continuing at TOP[10;8H[m[49;77H10,8[10CAll[49;77H[K[49;77H10,8[10CAll[10;8H[?25h[?25l[49;67Hn[10;8H[49;1H/value[49;7H[K[49;1H[38;5;224msearch hit BOTTOM, continuing at TOP[m/value[49;7H[K[49;1H[38;5;224msearch hit BOTTOM, continuing at TOP[10;8H[m[49;77H10,8[10CAll[49;77H[K[49;77H10,8[10CAll[10;8H[?25h[?25l[49;67Hn[10;8H[49;1H/value[49;7H[K[49;1H[38;5;224msearch hit BOTTOM, continuing at TOP[m/value[49;7H[K[49;1H[38;5;224msearch hit BOTTOM, continuing at TOP[10;8H[m[49;77H10,8[10CAll[49;77H[K[49;77H10,8[10CAll[10;8H[?25h[?25l[49;67HZ[10;8H[?25h[?25l[49;68HZ[10;8H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ vim expr.cc main[C[C[C[Cexpr[C[C[C[Chh[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"expr.hh" 131L, 2953C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[3;1H[32mclass[m MulExpr : [38;5;130mpublic[m Expr {
[38;5;130mprivate[m:
  [32menum[m [32mclass[m Private { TAG };
[38;5;130mpublic[m:
  [32mconst[m ExprPtr left;
  [32mconst[m ExprPtr right;

  [34m/** Factory function */[m
  [32mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [38;5;130mreturn[m std::make_shared<MulExpr>(left, right, Private::TAG);
  }

  std::string toString() [32mconst[m;

  [34m//use Private to ensure this constructor cannot be called from outside
[m  [34m//this class even though it is public[m
  MulExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [34m//MulExpr[m

[32mclass[m DivExpr : [38;5;130mpublic[m Expr {
[38;5;130mprivate[m:
  [32menum[m [32mclass[m Private { TAG };
[38;5;130mpublic[m:
  [32mconst[m ExprPtr left;
  [32mconst[m ExprPtr right;

  [34m/** Factory function */[m
  [32mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [38;5;130mreturn[m std::make_shared<DivExpr>(left, right, Private::TAG);
  }

  std::string toString() [32mconst[m;

  [34m//use Private to ensure this constructor cannot be called from outside
[m  [34m//this class even though it is public[m
  DivExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [34m//DivExpr[m[48;1H[35m#endif[m [34m//ifndef EXPR_HH[m[49;77H131,1[9CBot]2;expr.hh (~/projects/i240b/submit/lab4/exercises/3-expr) - VIM]1;expr.hh[48;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[3;1H[38;5;121mclass[m MulExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [93mreturn[m std::make_shared<MulExpr>(left, right, Private::TAG);
  }

  std::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  MulExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [96m//MulExpr[m

[38;5;121mclass[m DivExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [93mreturn[m std::make_shared<DivExpr>(left, right, Private::TAG);
  }

  std::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  DivExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [96m//DivExpr[m[48;1H[38;5;81m#endif[m [96m//ifndef EXPR_HH[m[49;77H131,1[9CBot"expr.hh" 131L, 2953C[48;1H[?25h[?25l[49;67H/[48;1H[49;1H[K[49;1H/[?2004h[?25hv[?25l[27m[23m[29m[m[H[2J[1;1H[38;5;81m#ifndef EXPR_HH_
#define EXPR_HH_

#include [m[95m"tostring.hh"[m

[38;5;81m#include [m[95m<memory>[m
[38;5;81m#include [m[95m<string>[m


[38;5;121mclass[m Expr : [93mpublic[m ToString {
};

[96m//ExprPtr is an alias for a smart shared ptr to an Expr.
//using is like a typedef[m
[93musing[m ExprPtr = std::shared_ptr<Expr>;

[96m/** An IntExpr only contains an integer [m[7m[96mv[m[96malue */[m
[38;5;121mclass[m IntExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m [38;5;121mint[m value;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make([38;5;121mint[m val) {
    [93mreturn[m std::make_shared<IntExpr>(val, Private::TAG);
  }[30;3Hstd::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  IntExpr([38;5;121mint[m val, Private x) : value(val) { }

}; [96m//IntExpr

//KISS results in repetitive code for binary expressions.
//Not using alternatives like a template class[m


[38;5;121mclass[m AddExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;[49;77H17,41[9CTop/v[49;77H[K[49;3H[?25ha[?25l[17;42H[7m[96ma[m[49;77H17,41[9CTop[49;77H[K[49;4H[?25hl[?25l[17;43H[7m[96ml[m[49;77H17,41[9CTop[49;77H[K[49;5H[?25hu[?25l[17;44H[7m[96mu[m[49;77H17,41[9CTop[49;77H[K[49;6H[?25he[?25l[17;45H[7m[96me[m[49;77H17,41[9CTop[49;77H[K[49;7H[?25h[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[17;41H[m[96mvalue[m[49;77H17,41[9CTop[49;77H[K[49;77H17,41[9CTop[17;41H[?25h[?25l[49;67Hn[17;41H[49;1H/value[49;7H[K[49;1H[22;13H[49;77H22,13[9CTop[22;13H[?25h[?25l[49;67Hn[22;13H[49;67H[K[49;1H[34;33H[49;77H34,33[9CTop[34;33H[?25h[?25l[49;67Hn[34;33H[49;67H[K[49;1H[38;5;224msearch hit BOTTOM, continuing at TOP[17;41H[m[49;77H17,41[9CTop[49;77H[K[49;77H17,41[9CTop[17;41H[?25h[?25l[49;67Hn[17;41H[49;1H/value[49;7H[K[49;1H[22;13H[49;77H22,13[9CTop[22;13H[?25h[?25l[49;67Hn[22;13H[49;67H[K[49;1H[34;33H[49;77H34,33[9CTop[34;33H[?25h[?25l[49;67Hn[34;33H[49;67H[K[49;1H[38;5;224msearch hit BOTTOM, continuing at TOP[17;41H[m[49;77H17,41[9CTop[49;77H[K[49;77H17,41[9CTop[17;41H[?25h[?25l[49;67Hn[17;41H[49;1H/value[49;7H[K[49;1H[22;13H[49;77H22,13[9CTop[22;13H[?25h[?25l[49;67Hn[22;13H[49;67H[K[49;1H[34;33H[49;77H34,33[9CTop[34;33H[?25h[?25l[49;67Hn[34;33H[49;67H[K[49;1H[38;5;224msearch hit BOTTOM, continuing at TOP[17;41H[m[49;77H17,41[9CTop[49;77H[K[49;77H17,41[9CTop[17;41H[?25h[?25l[49;67Hn[17;41H[49;1H/value[49;7H[K[49;1H[22;13H[49;77H22,13[9CTop[22;13H[?25h[?25l[49;67Hn[22;13H[49;67H[K[49;1H[34;33H[49;77H34,33[9CTop[34;33H[?25h[?25l[49;67Hn[34;33H[49;67H[K[49;1H[38;5;224msearch hit BOTTOM, continuing at TOP[17;41H[m[49;77H17,41[9CTop[49;77H[K[49;77H17,41[9CTop[17;41H[?25h[?25l[49;67Hn[17;41H[49;1H/value[49;7H[K[49;1H[22;13H[49;77H22,13[9CTop[22;13H[?25h[?25l[49;67Hn[22;13H[49;67H[K[49;1H[34;33H[49;77H34,33[9CTop[34;33H[?25h[?25l[49;80H20[34;20H[?25h[?25l[49;67H~@k[34;20H[49;67H   [35;1H[49;78H5,0-1[35;1H[?25h[?25l[49;67H~@k[35;1H[49;67H   [36;12H[49;78H6,12 [36;12H[?25h[?25l[49;67H~@k[36;12H[49;67H   [37;1H[49;78H7,0-1[37;1H[?25h[?25l[49;67H~@k[37;1H[49;67H   [38;20H[49;78H8,20 [38;20H[?25h[?25l[49;67H~@k[38;20H[49;67H   [39;20H[49;78H9[39;20H[?25h[?25l[49;67H~@k[39;20H[49;67H   [40;1H[49;77H40,0-1[40;1H[?25h[?25l[49;67H~@k[40;1H[49;67H   [41;1H[49;78H1[41;1H[?25h[?25l[49;67H~@k[41;1H[49;67H   [42;20H[49;78H2,20 [42;20H[?25h[?25l[49;67H~@k[42;20H[49;67H   [43;8H[49;78H3,8 [43;8H[?25h[?25l[49;67H~@k[43;8H[49;67H   [43;20H[1;48r[48;1H
[1;49r[48;3H[96m/** Factory function */[m[49;1H[K[49;77H44,20[10C1%[43;20H[?25h[?25l[49;67H~@k[43;20H[49;67H   [43;7H[1;48r[48;1H
[1;49r[48;3H[38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {[49;77H[K[49;77H45,7[11C2%[43;7H[?25h[?25l[49;67H~@k[43;7H[49;67H   [43;20H[1;48r[48;1H
[1;49r[48;5H[93mreturn[m std::make_shared<AddExpr>(left, right, Private::TAG);[49;77H[K[49;77H46,20[10C3%[43;20H[?25h[?25l[49;67H~@k[43;20H[49;67H   [43;20H[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H47,20[10C4%[43;20H[?25h[?25l[49;67H~@k[43;20H[49;67H   [43;1H[1;48r[48;1H
[1;49r[49;77H[K[49;77H48,0-1[9C6%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;20H[1;48r[48;1H
[1;49r[48;3Hstd::string toString() [38;5;121mconst[m;[49;77H[K[49;77H49,20[10C7%[43;20H[?25h[?25l[49;67H~@k[43;20H[49;67H   [43;20H[1;48r[48;1H
[1;49r[49;77H[K[49;77H50,20[10C8%[43;20H[?25h[?25l[49;67H~@k[43;20H[49;67H   [43;20H[1;48r[48;1H
[1;49r[48;3H[96m//use Private to ensure this constructor cannot be called from outside[m[49;77H[K[49;77H51,20[10C9%[43;20H[?25h[?25l[49;67H~@k[43;20H[49;67H   [43;3H[1;48r[48;1H
[1;49r[41;52H[46m{

[m  [46m}[m[48;3H[96m//this class even though it is public[m[49;77H[K[49;77H52,3[10C10%[43;3H[?25h[?25l[49;67H~@k[43;3H[49;67H   [43;1H[1;48r[48;1H
[1;49r[40;52H{

  }[48;3HAddExpr(ExprPtr& left, ExprPtr& right, Private x) :[49;77H[K[49;77H53,0-1[8C12%[43;1H[?25h[?25l[49;67H~@k[43;1H[49;67H   [43;20H[1;48r[48;1H
[1;49r[48;5Hleft(left), right(right) {[49;77H[K[49;77H54,20[9C13%[43;20H[?25h[?25l[49;67H~@k[43;20H[49;67H   [43;1H[1;48r[48;1H
[1;49r[48;3H}[49;77H[K[49;77H55,0-1[8C14%[43;1H[?25h[?25l[49;77H47,22 [35;22H[?25h[?25l[49;67HZ[35;22H[?25h[?25l[49;68HZ[35;22H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;67H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ vim main.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main.cc" 17L, 317C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"expr.hh"[m
[35m#include [m[31m"parse.hh"[m

[35m#include [m[31m<iostream>[m
[35m#include [m[31m<cstdlib>[m

[32mint[m
main([32mint[m argc, [32mchar[m* argv[])
{
  [38;5;130mif[m (argc < [31m2[m) {
    std::cerr << [31m"usage: "[m << argv[[31m0[m] << [31m" PREFIX_EXPR..."[m << std::endl;
    std::exit([31m1[m);
  }
  [38;5;130mfor[m ([32mauto[m i = [31m1[m; i < argc; i++) {
    std::cout << *parse(argv[i]) << std::endl;
  }
}
[94m~                                                                                             [19;1H~                                                                                             [20;1H~                                                                                             [21;1H~                                                                                             [22;1H~                                                                                             [23;1H~                                                                                             [24;1H~                                                                                             [25;1H~                                                                                             [26;1H~                                                                                             [27;1H~                                                                                             [28;1H~                                                                                             [29;1H~                                                                                             [30;1H~                                                                                             [31;1H~                                                                                             [32;1H~                                                                                             [33;1H~                                                                                             [34;1H~                                                                                             [35;1H~                                                                                             [36;1H~                                                                                             [37;1H~                                                                                             [38;1H~                                                                                             [39;1H~                                                                                             [40;1H~                                                                                             [41;1H~                                                                                             [42;1H~                                                                                             [43;1H~                                                                                             [44;1H~                                                                                             [45;1H~                                                                                             [46;1H~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H15,1[10CAll]2;main.cc (~/projects/i240b/submit/lab4/exercises/3-expr) - VIM]1;main.cc[15;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"expr.hh"[m
[38;5;81m#include [m[95m"parse.hh"[m

[38;5;81m#include [m[95m<iostream>[m
[38;5;81m#include [m[95m<cstdlib>[m

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mchar[m* argv[])
{
  [93mif[m (argc < [95m2[m) {
    std::cerr << [95m"usage: "[m << argv[[95m0[m] << [95m" PREFIX_EXPR..."[m << std::endl;
    std::exit([95m1[m);
  }
  [93mfor[m ([38;5;121mauto[m i = [95m1[m; i < argc; i++) {
    std::cout << *parse(argv[i]) << std::endl;
  }
}
[94m~                                                                                             [19;1H~                                                                                             [20;1H~                                                                                             [21;1H~                                                                                             [22;1H~                                                                                             [23;1H~                                                                                             [24;1H~                                                                                             [25;1H~                                                                                             [26;1H~                                                                                             [27;1H~                                                                                             [28;1H~                                                                                             [29;1H~                                                                                             [30;1H~                                                                                             [31;1H~                                                                                             [32;1H~                                                                                             [33;1H~                                                                                             [34;1H~                                                                                             [35;1H~                                                                                             [36;1H~                                                                                             [37;1H~                                                                                             [38;1H~                                                                                             [39;1H~                                                                                             [40;1H~                                                                                             [41;1H~                                                                                             [42;1H~                                                                                             [43;1H~                                                                                             [44;1H~                                                                                             [45;1H~                                                                                             [46;1H~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H15,1[10CAll"main.cc" 17L, 317C[15;1H[?25h[?25l[49;67HZ[15;1H[?25h[?25l[49;68HZ[15;1H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ vim main.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main.cc" 17L, 317C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"expr.hh"[m
[35m#include [m[31m"parse.hh"[m

[35m#include [m[31m<iostream>[m
[35m#include [m[31m<cstdlib>[m

[32mint[m
main([32mint[m argc, [32mchar[m* argv[])
{
  [38;5;130mif[m (argc < [31m2[m) {
    std::cerr << [31m"usage: "[m << argv[[31m0[m] << [31m" PREFIX_EXPR..."[m << std::endl;
    std::exit([31m1[m);
  }
  [38;5;130mfor[m ([32mauto[m i = [31m1[m; i < argc; i++) {
    std::cout << *parse(argv[i]) << std::endl;
  }
}
[94m~                                                                                             [19;1H~                                                                                             [20;1H~                                                                                             [21;1H~                                                                                             [22;1H~                                                                                             [23;1H~                                                                                             [24;1H~                                                                                             [25;1H~                                                                                             [26;1H~                                                                                             [27;1H~                                                                                             [28;1H~                                                                                             [29;1H~                                                                                             [30;1H~                                                                                             [31;1H~                                                                                             [32;1H~                                                                                             [33;1H~                                                                                             [34;1H~                                                                                             [35;1H~                                                                                             [36;1H~                                                                                             [37;1H~                                                                                             [38;1H~                                                                                             [39;1H~                                                                                             [40;1H~                                                                                             [41;1H~                                                                                             [42;1H~                                                                                             [43;1H~                                                                                             [44;1H~                                                                                             [45;1H~                                                                                             [46;1H~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H15,1[10CAll]2;main.cc (~/projects/i240b/submit/lab4/exercises/3-expr) - VIM]1;main.cc[15;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"expr.hh"[m
[38;5;81m#include [m[95m"parse.hh"[m

[38;5;81m#include [m[95m<iostream>[m
[38;5;81m#include [m[95m<cstdlib>[m

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mchar[m* argv[])
{
  [93mif[m (argc < [95m2[m) {
    std::cerr << [95m"usage: "[m << argv[[95m0[m] << [95m" PREFIX_EXPR..."[m << std::endl;
    std::exit([95m1[m);
  }
  [93mfor[m ([38;5;121mauto[m i = [95m1[m; i < argc; i++) {
    std::cout << *parse(argv[i]) << std::endl;
  }
}
[94m~                                                                                             [19;1H~                                                                                             [20;1H~                                                                                             [21;1H~                                                                                             [22;1H~                                                                                             [23;1H~                                                                                             [24;1H~                                                                                             [25;1H~                                                                                             [26;1H~                                                                                             [27;1H~                                                                                             [28;1H~                                                                                             [29;1H~                                                                                             [30;1H~                                                                                             [31;1H~                                                                                             [32;1H~                                                                                             [33;1H~                                                                                             [34;1H~                                                                                             [35;1H~                                                                                             [36;1H~                                                                                             [37;1H~                                                                                             [38;1H~                                                                                             [39;1H~                                                                                             [40;1H~                                                                                             [41;1H~                                                                                             [42;1H~                                                                                             [43;1H~                                                                                             [44;1H~                                                                                             [45;1H~                                                                                             [46;1H~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H15,1[10CAll"main.cc" 17L, 317C[15;1H[?25h[?25l[49;67HZ[15;1H[?25h[?25l[49;68HZ[15;1H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ vim paer[K[Krse..[Khh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"parse.hh" 12L, 211C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef PARSE_HH_
#define  PARSE_HH_

#include [m[31m"expr.hh"[m

[35m#include [m[31m<string>[m

[34m/** Parser for prefix arith expressions involving integers, +, -, *, / */[m
ExprPtr parse(std::string str);


[35m#endif[m [34m//ifndef PARSE_HH_[m
[94m~                                                                                             [14;1H~                                                                                             [15;1H~                                                                                             [16;1H~                                                                                             [17;1H~                                                                                             [18;1H~                                                                                             [19;1H~                                                                                             [20;1H~                                                                                             [21;1H~                                                                                             [22;1H~                                                                                             [23;1H~                                                                                             [24;1H~                                                                                             [25;1H~                                                                                             [26;1H~                                                                                             [27;1H~                                                                                             [28;1H~                                                                                             [29;1H~                                                                                             [30;1H~                                                                                             [31;1H~                                                                                             [32;1H~                                                                                             [33;1H~                                                                                             [34;1H~                                                                                             [35;1H~                                                                                             [36;1H~                                                                                             [37;1H~                                                                                             [38;1H~                                                                                             [39;1H~                                                                                             [40;1H~                                                                                             [41;1H~                                                                                             [42;1H~                                                                                             [43;1H~                                                                                             [44;1H~                                                                                             [45;1H~                                                                                             [46;1H~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H1,1[11CAll]2;parse.hh (~/projects/i240b/submit/lab4/exercises/3-expr) - VIM]1;parse.hh[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#ifndef PARSE_HH_
#define  PARSE_HH_

#include [m[95m"expr.hh"[m

[38;5;81m#include [m[95m<string>[m

[96m/** Parser for prefix arith expressions involving integers, +, -, *, / */[m
ExprPtr parse(std::string str);


[38;5;81m#endif[m [96m//ifndef PARSE_HH_[m
[94m~                                                                                             [14;1H~                                                                                             [15;1H~                                                                                             [16;1H~                                                                                             [17;1H~                                                                                             [18;1H~                                                                                             [19;1H~                                                                                             [20;1H~                                                                                             [21;1H~                                                                                             [22;1H~                                                                                             [23;1H~                                                                                             [24;1H~                                                                                             [25;1H~                                                                                             [26;1H~                                                                                             [27;1H~                                                                                             [28;1H~                                                                                             [29;1H~                                                                                             [30;1H~                                                                                             [31;1H~                                                                                             [32;1H~                                                                                             [33;1H~                                                                                             [34;1H~                                                                                             [35;1H~                                                                                             [36;1H~                                                                                             [37;1H~                                                                                             [38;1H~                                                                                             [39;1H~                                                                                             [40;1H~                                                                                             [41;1H~                                                                                             [42;1H~                                                                                             [43;1H~                                                                                             [44;1H~                                                                                             [45;1H~                                                                                             [46;1H~                                                                                             [47;1H~                                                                                             [48;1H~                                                                                             [m[49;77H1,1[11CAll"parse.hh" 12L, 211C[1;1H[?25h[?25l[49;67H~@k[1;1H[49;67H   [2;1H[49;77H2[2;1H[?25h[?25l[49;67H~@k[2;1H[49;67H   [3;1H[49;77H3,0-1[3;1H[?25h[?25l[49;67H~@k[3;1H[49;67H   [4;1H[49;77H4,1  [4;1H[?25h[?25l[49;67H~@k[4;1H[49;67H   [5;1H[49;77H5,0-1[5;1H[?25h[?25l[49;67H~@k[5;1H[49;67H   [6;1H[49;77H6,1  [6;1H[?25h[?25l[49;67H~@k[6;1H[49;67H   [7;1H[49;77H7,0-1[7;1H[?25h[?25l[49;67H~@k[7;1H[49;67H   [8;1H[49;77H8,1  [8;1H[?25h[?25l[49;67H~@k[8;1H[49;67H   [9;1H[49;77H9[9;1H[?25h[?25l[49;67H~@k[9;1H[49;67H   [10;1H[49;77H10,0-1[10;1H[?25h[?25l[49;67H~@k[10;1H[49;67H   [11;1H[49;78H1[11;1H[?25h[?25l[49;67HZ[11;1H[?25h[?25l[49;68HZ[11;1H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ vim expr.hh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"expr.hh" 131L, 2953C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[35m#include [m[31m<memory>[m
[35m#include [m[31m<string>[m


[32mclass[m Expr : [38;5;130mpublic[m ToString {
};

[34m//ExprPtr is an alias for a smart shared ptr to an Expr.
//using is like a typedef[m
[38;5;130musing[m ExprPtr = std::shared_ptr<Expr>;

[34m/** An IntExpr only contains an integer value */[m
[32mclass[m IntExpr : [38;5;130mpublic[m Expr {
[38;5;130mprivate[m:
  [32menum[m [32mclass[m Private { TAG };
[38;5;130mpublic[m:
  [32mconst[m [32mint[m value;

  [34m/** Factory function */[m
  [32mstatic[m ExprPtr make([32mint[m val) {
    [38;5;130mreturn[m std::make_shared<IntExpr>(val, Private::TAG);
  }[26;3Hstd::string toString() [32mconst[m;

  [34m//use Private to ensure this constructor cannot be called from outside
[m  [34m//this class even though it is public[m
  IntExpr([32mint[m val, Private x) : value(val) { }

}; [34m//IntExpr

//KISS results in repetitive code for binary expressions.
//Not using alternatives like a template class[m


[32mclass[m AddExpr : [38;5;130mpublic[m Expr {
[38;5;130mprivate[m:
  [32menum[m [32mclass[m Private { TAG };
[38;5;130mpublic[m:
  [32mconst[m ExprPtr left;
  [32mconst[m ExprPtr right;

  [34m/** Factory function */[m
  [32mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [38;5;130mreturn[m std::make_shared<AddExpr>(left, right, Private::TAG);
  }[49;77H47,22[10C4%]2;expr.hh (~/projects/i240b/submit/lab4/exercises/3-expr) - VIM]1;expr.hh[43;22H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[2;1H[38;5;81m#include [m[95m<memory>[m
[38;5;81m#include [m[95m<string>[m


[38;5;121mclass[m Expr : [93mpublic[m ToString {
};

[96m//ExprPtr is an alias for a smart shared ptr to an Expr.
//using is like a typedef[m
[93musing[m ExprPtr = std::shared_ptr<Expr>;

[96m/** An IntExpr only contains an integer value */[m
[38;5;121mclass[m IntExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m [38;5;121mint[m value;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make([38;5;121mint[m val) {
    [93mreturn[m std::make_shared<IntExpr>(val, Private::TAG);
  }[26;3Hstd::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  IntExpr([38;5;121mint[m val, Private x) : value(val) { }

}; [96m//IntExpr

//KISS results in repetitive code for binary expressions.
//Not using alternatives like a template class[m


[38;5;121mclass[m AddExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [93mreturn[m std::make_shared<AddExpr>(left, right, Private::TAG);
  }[49;77H47,22[10C4%"expr.hh" 131L, 2953C[43;22H[?25h[?25l[49;67H~@k[43;22H[49;67H   [42;21H[49;78H6,21[42;21H[?25h[?25l[49;67H~@k[42;21H[49;67H   [41;7H[49;78H5,7 [41;7H[?25h[?25l[49;67H^U[41;7H[49;67H  [21;1H[1;48r[1;1H[4L[1;49r[1;1H[38;5;81m#ifndef EXPR_HH_
#define EXPR_HH_

#include [m[95m"tostring.hh"[m[49;1H[K[49;77H21,1[10CTop[21;1H[?25h[?25l[49;67H^U[21;1H[49;67H  [1;1H[49;77H1,1 [1;1H[?25h[?25l[49;67H^U[1;1H[49;67H  [1;1H[?25h[?25l[49;67H^U[1;1H[49;67H  [1;1H[?25h[?25l[49;77H31,0-1[31;1H[?25h[?25l[49;78H0,31 [30;31H[?25h[?25l[49;67H^D[30;31H[49;67H  [30;3H[1;48r[1;1H[24M[1;49r[25;3H[96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [93mreturn[m std::make_shared<AddExpr>(left, right, Private::TAG);
  }

  std::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  AddExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [96m//AddExpr[m


[38;5;121mclass[m SubExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {[49;77H[K[49;77H54,3[10C28%[30;3H[?25h[?25l[49;67H^U[30;3H[49;67H  [30;3H[1;48r[1;1H[24L[1;49r[1;1H[38;5;81m#ifndef EXPR_HH_
#define EXPR_HH_

#include [m[95m"tostring.hh"[m

[38;5;81m#include [m[95m<memory>[m
[38;5;81m#include [m[95m<string>[m


[38;5;121mclass[m Expr : [93mpublic[m ToString {
};

[96m//ExprPtr is an alias for a smart shared ptr to an Expr.
//using is like a typedef[m
[93musing[m ExprPtr = std::shared_ptr<Expr>;

[96m/** An IntExpr only contains an integer value */[m
[38;5;121mclass[m IntExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m [38;5;121mint[m value;

  [96m/** Factory function */[m[49;77H[K[49;77H30,3[10CTop[30;3H[?25h[?25l[49;67H^D[30;3H[49;67H  [30;3H[1;48r[1;1H[24M[1;49r[25;3H[96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [93mreturn[m std::make_shared<AddExpr>(left, right, Private::TAG);
  }

  std::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  AddExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [96m//AddExpr[m


[38;5;121mclass[m SubExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {[49;77H[K[49;77H54,3[10C28%[30;3H[?25h[?25l[49;67H^U[30;3H[49;67H  [30;3H[1;48r[1;1H[24L[1;49r[1;1H[38;5;81m#ifndef EXPR_HH_
#define EXPR_HH_

#include [m[95m"tostring.hh"[m

[38;5;81m#include [m[95m<memory>[m
[38;5;81m#include [m[95m<string>[m


[38;5;121mclass[m Expr : [93mpublic[m ToString {
};

[96m//ExprPtr is an alias for a smart shared ptr to an Expr.
//using is like a typedef[m
[93musing[m ExprPtr = std::shared_ptr<Expr>;

[96m/** An IntExpr only contains an integer value */[m
[38;5;121mclass[m IntExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m [38;5;121mint[m value;

  [96m/** Factory function */[m[49;77H[K[49;77H30,3[10CTop[30;3H[?25h[?25l[49;67H^D[30;3H[49;67H  [30;3H[1;48r[1;1H[24M[1;49r[25;3H[96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {
    [93mreturn[m std::make_shared<AddExpr>(left, right, Private::TAG);
  }

  std::string toString() [38;5;121mconst[m;

  [96m//use Private to ensure this constructor cannot be called from outside
[m  [96m//this class even though it is public[m
  AddExpr(ExprPtr& left, ExprPtr& right, Private x) :
    left(left), right(right) {
  }
}; [96m//AddExpr[m


[38;5;121mclass[m SubExpr : [93mpublic[m Expr {
[93mprivate[m:
  [38;5;121menum[m [38;5;121mclass[m Private { TAG };
[93mpublic[m:
  [38;5;121mconst[m ExprPtr left;
  [38;5;121mconst[m ExprPtr right;

  [96m/** Factory function */[m
  [38;5;121mstatic[m ExprPtr make(ExprPtr left, ExprPtr right) {[49;77H[K[49;77H54,3[10C28%[30;3H[?25h[?25l[49;77H62,0-1[38;1H[?25h[?25l[49;67HZ[38;1H[?25h[?25l[49;68HZ[38;1H[49;1H[?1006l[?1002l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;67H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@g7-19:~/i240b/submit/lab4/exercises/3-expr$ exit
exit

Script done on 2020-02-20 16:08:49-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2020-02-20 23:23:33-05:00 [TERM="xterm-256color" TTY="/dev/pts/8" COLUMNS="197" LINES="52"]
bash: /home/umrigar/cs220/bin/student.rc: No such file or directory
tman1@remote01:~/i240b/submit/lab4$ cd 3[Kexercises/
1-point/  2-shape/  3-expr/   Makefile  
tman1@remote01:~/i240b/submit/lab4$ cd exercises/3-expr/
.deps/       expr.cc      expr.hh      expr.o       .gitignore   main         main.cc      main.o       parse.cc     parse.hh     parse.o      tostring.cc  tostring.hh  tostring.o   
tman1@remote01:~/i240b/submit/lab4$ cd exercises/3-expr/
.deps/       expr.cc      expr.hh      expr.o       .gitignore   main         main.cc      main.o       parse.cc     parse.hh     parse.o      tostring.cc  tostring.hh  tostring.o   
tman1@remote01:~/i240b/submit/lab4$ cd exercises/3-expr/
tman1@remote01:~/i240b/submit/lab4/exercises/3-expr$ ls
expr.cc  expr.hh  expr.o  main	main.cc  main.o  parse.cc  parse.hh  parse.o  tostring.cc  tostring.hh	tostring.o
tman1@remote01:~/i240b/submit/lab4/exercises/3-expr$ make clean -f ../MN[Kakefile 
rm -rf *.o *~ main .deps .gitignore
tman1@remote01:~/i240b/submit/lab4/exercises/3-expr$ make clean -f ../Makefile [C[C[C[1P[1P[1P[1P[1P[1P
g++ -MT tostring.o -MMD -MP -MF .deps/tostring.d -g -Wall -std=c++17 -c tostring.cc
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ -MT parse.o -MMD -MP -MF .deps/parse.d -g -Wall -std=c++17 -c parse.cc
g++ -MT expr.o -MMD -MP -MF .deps/expr.d -g -Wall -std=c++17 -c expr.cc
g++ tostring.o main.o parse.o expr.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main tostring.o main.o parse.o expr.o; do echo $t >>.gitignore; done
tman1@remote01:~/i240b/submit/lab4/exercises/3-expr$ make -f ../Makefile [6@clean [C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kcd exercises/3-expr/[8Pvim expr.hh ls[Kvim parse.hh cc[C[1Pmain[C[C[C[C[1@parse[C[C[C[Cls[Kvim parse.cc [1Pmain[C[C[C[C[1@parse[C[C[C[Chh[Cls[Kvim expr.hh cd exercises/3-expr/ls[Kmake clean -f ../Makefile [6P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kmake -f ../Makefile [6@clean [C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kcd exercises/3-expr/[8Pvim expr.hh ls[Kvim parse.hh cc[C[1Pmain[C[C[C[C[1@parse[C[C[C[Cls[Kvim expr.hh cc[Cls[Kvim tostring.hh cc[C[4Pmain[C[C[C[Cexpr.hh[Ccc[Cls[Kvim parse.cc hh[C[3@tostring.cc[Chh[Ccc[Cls[Kcd ..i240b/submit/lab4/exercises/3-expr/.deps/vim point.cc [Kcd i240b/submit/lab4/exercises/3-expr/.deps/..[Ki240b/submit/lab4/exercises/3-expr/.deps/vim point.cc [Khh[Cls[Kcd exercises/1-point/ls[Kcd lab4/ls[Kcd submit/[1Pi240b/ls[Kexit[2Plsvim parse.cc ./main '+ 1 * 2 3'  '* + 1 2 3'  '+ / 40 5 - 3 2'[29Pmake -f ../Makefile [7Pvim parse.cc[Chh[Ccat parse.cc[Cvim parse.hh[Ccc[C[7@make -f ../Makefile[C./main '+ 1 * 2 3'  '* + 1 2 3'  '+ / 40 5 - 3 2'
(1) + ((2) * (3))
((1) + (2)) * (3)
((40) / (5)) + ((3) - (2))
tman1@remote01:~/i240b/submit/lab4/exercises/3-expr$ exit
exit

Script done on 2020-02-20 23:24:11-05:00 [COMMAND_EXIT_CODE="0"]
