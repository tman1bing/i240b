Script started on 2020-03-23 03:39:50-04:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="97" LINES="51"]
tman1@remote00:~/i240b/submit/lab7$ ls
exercises  lab7  lab7.html  lab7.log  lab7.pdf	lab7.umt
tman1@remote00:~/i240b/submit/lab7$ ps
    PID TTY          TIME CMD
3690790 pts/1    00:00:00 bash
3690797 pts/1    00:00:00 ps
tman1@remote00:~/i240b/submit/lab7$ jobs
tman1@remote00:~/i240b/submit/lab7$ kill %`[K1
bash: kill: %1: no such job
tman1@remote00:~/i240b/submit/lab7$ ls
exercises  lab7  lab7.html  lab7.log  lab7.pdf	lab7.umt
tman1@remote00:~/i240b/submit/lab7$ cd exercises/
tman1@remote00:~/i240b/submit/lab7/exercises$ ls
1-out  2-find  3-sort  4-rm  Makefile  test.data
tman1@remote00:~/i240b/submit/lab7/exercises$ cd 1-out/
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ls
main.cc  out.hh
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ls
main.cc  out.hh
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat out.hh 
#ifndef OUT_HH_
#define OUT_HH_

#include <algorithm>
#include <iostream>
#include <vector>


/** Output elements of [begin, end) on std::cout separated by single
 *  space.  The seqence of elements should be surrounded by [ and ]
 *  and terminated by a newline.
 */
template <typename Iterator>
void loopFn(Iterator begin, Iterator end, int arg) {
  std::cout << "[ ";
  //@TODO
  std::cout << "]" << std::endl;
}

/** Exactly like loopFn() but no loops should be used */
template <typename Iterator>
void noLoopFn(Iterator begin, Iterator end, int arg) {
  std::cout << "[ ";
  auto print = [](const int& i) { std::cout << i << " " ; };
  std::for_each(begin, end, print);
  std::cout << "]" << std::endl;
}

#endif //ifndef OUT_HH_
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat[K[K[Kcat main.cc 
#include <algorithm>
#include <fstream>
#include <iostream>
#include <iterator>
#include <string>
#include <utility>

#include <deque>
#include <forward_list>
#include <list>
#include <set>
#include <vector>

#include <cstdlib>
#include <cstring>

#include "out.hh"

/** Return vector of int's read from filePath.  If filePath is
 *  "-" read from stdin.
 */
static std::vector<int>
readIntsFromFile(const std::string filePath)
{
  bool isStdin = filePath == "-";
  std::ifstream fstream;
  if (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  if (!in) {
    throw std::invalid_argument(std::string("cannot read ") + filePath +
				": " + std::strerror(errno));
  }
  //construct a vector from an istream_iterator on istream in.
  //The two arguments give the begin and end of the iterator.
  std::vector<int> ints((std::istream_iterator<int>(in)),
			std::istream_iterator<int>());
  //no in.close(); depend on RAII
  return ints;
}


static void
go(std::string containerSpec, std::vector<int> ints, int arg)
{
  if (containerSpec == "[]") {
    //@TODO
  }
  else if (containerSpec == "deque") {
    std::deque<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "forward_list") {
    std::forward_list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "list") {
    std::list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "multiset") {
    std::multiset<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "set") {
    std::set<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "vector") {
    loopFn(ints.begin(), ints.end(), arg);
    noLoopFn(ints.begin(), ints.end(), arg);
  }
  else {
    std::cerr << "unknown container " << containerSpec << std::endl;
    std::exit(1);
  }
}

static void
usage(std::string progName) {
  std::cerr << "usage: "
	    << progName
	    << " CONTAINER_SPEC INTS_DATA_FILE [INT]"
	    << std::endl;
  std::exit(1);
}


int
main(int argc, char* argv[])
{
  try {
    if (argc != 3 && argc != 4) usage(argv[0]);
    const std::string containerSpec(argv[1]);
    const std::string filePath(argv[2]);
    std::vector<int> ints = readIntsFromFile(filePath);
    const int arg = (argc == 4) ? atoi(argv[3]) : 0;
    go(containerSpec, ints, arg);
  }
  catch (const std::exception& err) {
    std::cerr << err.what() << std::endl;
  }

}
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ls
main.cc  out.hh
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ make
make: *** No targets specified and no makefile found.  Stop.
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ make [K[K[K[K[Kls
main.cc  out.hh
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ amke[K[K[K[Kmka[K[Kake -f ../
1-out/     2-find/    3-sort/    4-rm/      Makefile   test.data  
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ make -f ../Makefile 
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
ls  g++ main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main main.o; do echo $t >>.gitignore; done
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ls
main  main.cc  main.o  out.hh
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./
.deps/ main   
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./
.deps/ main   
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main 
usage: ./main CONTAINER_SPEC INTS_DATA_FILE [INT]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main deu[Kque ../
1-out/     2-find/    3-sort/    4-rm/      Makefile   test.data  
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main deque ../
1-out/     2-find/    3-sort/    4-rm/      Makefile   test.data  
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main deque ../test.data 
[ ]
[ 22 43 12 56 64 42 11 22 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat main.
cat: main.: No such file or directory
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat main.[K[K[K[K[K
.deps/      .gitignore  main        main.cc     main.o      out.hh      
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat 
.deps/      .gitignore  main        main.cc     main.o      out.hh      
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat main
main     main.cc  main.o   
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat main
main     main.cc  main.o   
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat main.
main.cc  main.o   
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat main.
main.cc  main.o   
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat main.cc 
#include <algorithm>
#include <fstream>
#include <iostream>
#include <iterator>
#include <string>
#include <utility>

#include <deque>
#include <forward_list>
#include <list>
#include <set>
#include <vector>

#include <cstdlib>
#include <cstring>

#include "out.hh"

/** Return vector of int's read from filePath.  If filePath is
 *  "-" read from stdin.
 */
static std::vector<int>
readIntsFromFile(const std::string filePath)
{
  bool isStdin = filePath == "-";
  std::ifstream fstream;
  if (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  if (!in) {
    throw std::invalid_argument(std::string("cannot read ") + filePath +
				": " + std::strerror(errno));
  }
  //construct a vector from an istream_iterator on istream in.
  //The two arguments give the begin and end of the iterator.
  std::vector<int> ints((std::istream_iterator<int>(in)),
			std::istream_iterator<int>());
  //no in.close(); depend on RAII
  return ints;
}


static void
go(std::string containerSpec, std::vector<int> ints, int arg)
{
  if (containerSpec == "[]") {
    //@TODO
  }
  else if (containerSpec == "deque") {
    std::deque<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "forward_list") {
    std::forward_list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "list") {
    std::list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "multiset") {
    std::multiset<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "set") {
    std::set<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "vector") {
    loopFn(ints.begin(), ints.end(), arg);
    noLoopFn(ints.begin(), ints.end(), arg);
  }
  else {
    std::cerr << "unknown container " << containerSpec << std::endl;
    std::exit(1);
  }
}

static void
usage(std::string progName) {
  std::cerr << "usage: "
	    << progName
	    << " CONTAINER_SPEC INTS_DATA_FILE [INT]"
	    << std::endl;
  std::exit(1);
}


int
main(int argc, char* argv[])
{
  try {
    if (argc != 3 && argc != 4) usage(argv[0]);
    const std::string containerSpec(argv[1]);
    const std::string filePath(argv[2]);
    std::vector<int> ints = readIntsFromFile(filePath);
    const int arg = (argc == 4) ? atoi(argv[3]) : 0;
    go(containerSpec, ints, arg);
  }
  catch (const std::exception& err) {
    std::cerr << err.what() << std::endl;
  }

}
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat 
.deps/      .gitignore  main        main.cc     main.o      out.hh      
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat 
.deps/      .gitignore  main        main.cc     main.o      out.hh      
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat out.hh 
#ifndef OUT_HH_
#define OUT_HH_

#include <algorithm>
#include <iostream>
#include <vector>


/** Output elements of [begin, end) on std::cout separated by single
 *  space.  The seqence of elements should be surrounded by [ and ]
 *  and terminated by a newline.
 */
template <typename Iterator>
void loopFn(Iterator begin, Iterator end, int arg) {
  std::cout << "[ ";
  //@TODO
  std::cout << "]" << std::endl;
}

/** Exactly like loopFn() but no loops should be used */
template <typename Iterator>
void noLoopFn(Iterator begin, Iterator end, int arg) {
  std::cout << "[ ";
  auto print = [](const int& i) { std::cout << i << " " ; };
  std::for_each(begin, end, print);
  std::cout << "]" << std::endl;
}

#endif //ifndef OUT_HH_
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat out.hh [1@main.cc[C[K./main deque ../test.data 
[ ]
[ 22 43 12 56 64 42 11 22 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ls ../
1-out/     2-find/    3-sort/    4-rm/      Makefile   test.data  
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ls ../
1-out/     2-find/    3-sort/    4-rm/      Makefile   test.data  
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ls ../test.data 
../test.data
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ls ../test.data [1P[1P[1@c[1@a[1@t
22
43
12
56
64
42
11
22
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ im [K[K[Kvim out.hh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"out.hh" 29L, 736C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef OUT_HH_
#define OUT_HH_

#include [m[31m<algorithm>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<vector>[m


[34m/** Output elements of [begin, end) on std::cout separated by single
 *  space.  The seqence of elements should be surrounded by [ and ]
 *  and terminated by a newline.
 */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m loopFn(Iterator begin, Iterator end, [32mint[m arg) {
  std::cout << [31m"[ "[m;
  [34m//@[m[30m[103mTODO[m
  std::cout << [31m"]"[m << std::endl;
}

[34m/** Exactly like loopFn() but no loops should be used */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m noLoopFn(Iterator begin, Iterator end, [32mint[m arg) {
  std::cout << [31m"[ "[m;
  [32mauto[m print = []([32mconst[m [32mint[m& i) { std::cout << i << [31m" "[m ; };
  std::for_each(begin, end, print);
  std::cout << [31m"]"[m << std::endl;
}

[35m#endif[m [34m//ifndef OUT_HH_[m
[94m~                                                                                                [31;1H~                                                                                                [32;1H~                                                                                                [33;1H~                                                                                                [34;1H~                                                                                                [35;1H~                                                                                                [36;1H~                                                                                                [37;1H~                                                                                                [38;1H~                                                                                                [39;1H~                                                                                                [40;1H~                                                                                                [41;1H~                                                                                                [42;1H~                                                                                                [43;1H~                                                                                                [44;1H~                                                                                                [45;1H~                                                                                                [46;1H~                                                                                                [47;1H~                                                                                                [48;1H~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H1,1[11CAll[1;1H[?25h[?25l[51;70H~@k[1;1H[51;70H   [2;1H[51;80H2[2;1H[?25h[?25l[51;70H~@k[2;1H[51;70H   [1;1H[51;80H1[1;1H[?25h[?25l[51;70H~@k[1;1H[51;70H   [2;1H[51;80H2[2;1H[?25h[?25l[51;70H~@k[2;1H[51;70H   [3;1H[51;80H3,0-1[3;1H[?25h[?25l[51;70H~@k[3;1H[51;70H   [4;1H[51;80H4,1  [4;1H[?25h[?25l[51;70H~@k[4;1H[51;70H   [5;1H[51;80H5[5;1H[?25h[?25l[51;70H~@k[5;1H[51;70H   [6;1H[51;80H6[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [7;1H[51;80H7,0-1[7;1H[?25h[?25l[51;70H~@k[7;1H[51;70H   [8;1H[51;80H8[8;1H[?25h[?25l[51;70H~@k[8;1H[51;70H   [9;1H[51;80H9,1  [9;1H[?25h[?25l[51;70H~@k[9;1H[51;70H   [10;1H[51;80H10,1[10;1H[?25h[?25l[51;70H~@k[10;1H[51;70H   [11;1H[51;81H1[11;1H[?25h[?25l[51;70H~@k[11;1H[51;70H   [12;1H[51;81H2[12;1H[?25h[?25l[51;70H~@k[12;1H[51;70H   [13;1H[51;81H3[13;1H[?25h[?25l[51;70H~@k[13;1H[51;70H   [14;1H[51;81H4[14;1H[?25h[?25l[51;70H~@k[14;1H[51;70H   [15;1H[51;81H5[15;1H[?25h[?25l[51;70H~@k[15;1H[51;70H   [16;1H[51;81H6[16;1H[?25h[?25l[51;70H~@k[16;1H[51;70H   [17;1H[51;81H7[17;1H[?25h[?25l[51;70H~@k[17;1H[51;70H   [18;1H[14;52H[106m{[18;1H}[m[51;81H8[18;1H[?25h[?25l[51;70H~@k[18;1H[51;70H   [19;1H[14;52H{[18;1H}[51;81H9,0-1[19;1H[?25h[?25l[51;70H~@k[19;1H[51;70H   [20;1H[51;80H20,1  [20;1H[?25h[?25l[51;70H~@k[20;1H[51;70H   [21;1H[51;81H1[21;1H[?25h[?25l[51;70H~@k[21;1H[51;70H   [20;1H[51;81H0[20;1H[?25h[?25l[51;70H~@k[20;1H[51;70H   [19;1H[51;80H19,0-1[19;1H[?25h[?25l[51;70H~@k[19;1H[51;70H   [18;1H[14;52H[106m{[18;1H}[m[51;81H8,1  [18;1H[?25h[?25l[51;70H~@k[18;1H[51;70H   [17;1H[14;52H{[18;1H}[51;81H7[17;1H[?25h[?25l[51;70H~@k[17;1H[51;70H   [16;1H[51;81H6[16;1H[?25h[?25l[51;70Hi[16;1H[51;70H [16;1H[51;1H[1m-- INSERT --[m[51;13H[K[51;80H16,1[10CAll[16;1H[?25h[?25ld  [1C[34m/@[m[30m[103mTODO[m[51;83H2[16;2H[?25h[?25ld  [1C[34m/@[m[30m[103mTODO[m[51;83H3[16;3H[?25h[?25l  [34m//@[m[30m[103mTODO[m[16;11H[K[51;83H2[16;2H[?25h[?25l  [34m//@[m[30m[103mTODO[m[16;10H[K[51;83H1[16;1H[?25h[51;1H[K[16;1H[?25l[51;70H^[[16;1H[51;70H  [16;1H[51;80H16,1[10CAll[16;1H[?25h[?25l[51;70Hd[16;1H[?25h[?25l[51;71Hd[16;1H[51;70H  [16;3H[16;50r[50;1H
[1;51r[50;1H[94m~                                                                                                [m[51;80H[K[51;80H16,3[10CAll[16;3H[?25h[?25l[51;70Hi[16;3H[51;70H [16;3H[51;1H[1m-- INSERT --[m[51;80H[K[51;80H16,3[10CAll[16;3H[?25h[?25l[51;81H5[15;3H[?25h[?25l[51;83H4[15;4H[?25h[?25l[51;83H5[15;5H[?25h[?25l[51;83H6[15;6H[?25h[?25l[51;83H7[15;7H[?25h[?25l[51;83H8[15;8H[?25h[?25l[51;83H9[15;9H[?25h[?25l[51;83H10[15;10H[?25h[?25l[51;84H1[15;11H[?25h[?25l[51;84H2[15;12H[?25h[?25l[51;84H3[15;13H[?25h[?25l[51;84H4[15;14H[?25h[?25l[51;84H5[15;15H[?25h[?25l[51;84H6[15;16H[?25h[?25l[1C[31m[106m[[16;17H][m[51;84H7[15;17H[?25h[?25l[51;84H8[15;18H[?25h[?25l[31m[[16;17H][m[51;84H9[15;19H[?25h[?25l[51;83H20[15;20H[?25h[?25l[51;84H1[15;21H[?25h[?25l[16;50r[16;1H[L[1;51r[51;80H[K[51;80H16,3[10CAll[16;3H[?25h[?25lf[51;83H4[16;4H[?25h[?25lo[51;83H5[16;5H[?25h[?25l[38;5;130mfor[m[51;83H6[16;6H[?25h[?25l([51;83H7[16;7H[?25h[?25lau[51;83H9[16;9H[?25h[?25l[16;8H[K[51;83H8[16;8H[?25h[?25lu[51;83H9[16;9H[?25h[?25lt[51;83H10[16;10H[?25h[?25l[32mauto[m[51;84H1[16;11H[?25h[?25l[51;84H2[16;12H[?25h[?25lp[51;84H3[16;13H[?25h[?25l[51;84H4[16;14H[?25h[?25l=[51;84H5[16;15H[?25h[?25l[51;84H6[16;16H[?25h[?25lb[51;84H7[16;17H[?25h[?25le[51;84H8[16;18H[?25h[?25lg[51;84H9[16;19H[?25h[?25li[51;83H20[16;20H[?25h[?25ln[51;84H1[16;21H[?25h[?25l;[51;84H2[16;22H[?25h[?25l[51;84H3[16;23H[?25h[?25lp[51;84H4[16;24H[?25h[?25l[51;84H5[16;25H[?25h[?25l![51;84H6[16;26H[?25h[?25l=[51;84H7[16;27H[?25h[?25l[51;84H8[16;28H[?25h[?25le[51;84H9[16;29H[?25h[?25ln[51;83H30[16;30H[?25h[?25ld[51;84H1[16;31H[?25h[?25l;[51;84H2[16;32H[?25h[?25l[51;84H3[16;33H[?25h[?25lp[51;84H4[16;34H[?25h[?25l[16;33H[K[51;84H3[16;33H[?25h[?25l+[51;84H4[16;34H[?25h[?25l+[51;84H5[16;35H[?25h[?25lp[51;84H6[16;36H[?25h[?25l)[16;6H[106m([29C)[m[51;84H7[16;37H[?25h[?25l[17;50r[17;1H[L[1;51r[51;80H[K[51;80H17,4-11[7CAll[16;6H([29C)[17;11H[?25h[?25l  {[106m{

}[m[51;84H   [17;4H[?25h[?25l[18;50r[18;1H[L[1;51r[19;1H[106m [m
}[51;80H[K[51;80H18,4-11[7CAll[17;3H{

 [18;11H[?25h[?25l[97m[101m][m[51;83H5-12[18;12H[?25h[?25l[18;11H[K[51;83H4-11[18;11H[?25h[?25l  }[17;3H[106m{
[m  [106m}[m[51;84H   [18;4H[?25h[?25l[51;81H7[17;4H[?25h[?25l[18;50r[18;1H[L[1;51r[18;10H[106m [m
  }[51;80H[K[51;80H18,4-11[7CAll[17;3H{[18;10H [?25h[?25lc[51;83H5-12[18;12H[?25h[?25lo[51;83H6-13[18;13H[?25h[?25lu[51;83H7-14[18;14H[?25h[?25lt[51;83H8-15[18;15H[?25h[?25l[51;83H9-16[18;16H[?25h[?25l<[51;83H10-17[18;17H[?25h[?25l<[51;84H1-18[18;18H[?25h[?25l[51;84H2-19[18;19H[?25h[?25l*[51;84H3-20[18;20H[?25h[?25l[51;84H4-21[18;21H[?25h[?25l\[51;84H5-22[18;22H[?25h[?25l[18;21H[K[51;84H4-21[18;21H[?25h[?25l[51;84H3-20[18;20H[?25h[?25l[
  [97m[101m}[20;32H;
}[25;54H{[26;20H;[27;33H{[23C;[m [97m[101m};[28;35H;[29;32H;
}[m[51;84H4-21[18;21H[?25h[?25l[51;84H5-22[18;22H[?25h[?25l[51;84H4-21[18;21H[?25h[?25l[18;20H[K[19;3H}[20;32H;
}[25;54H{[26;20H;[27;33H{[23C; };[28;35H;[29;32H;
}[51;84H3-20[18;20H[?25h[?25lp[51;84H4-21[18;21H[?25h[?25l[51;84H5-22[18;22H[?25h[?25l<[51;84H6-23[18;23H[?25h[?25l<[51;84H7-24[18;24H[?25h[?25l[51;84H8-25[18;25H[?25h[?25le[51;84H9-26[18;26H[?25h[?25ln[51;83H20-27[18;27H[?25h[?25ld[51;84H1-28[18;28H[?25h[?25ll[51;84H2-29[18;29H[?25h[?25l;[51;84H3-30[18;30H[?25h[?25l[51;84H2-29[18;29H[?25h[?25l;[18;29H[K[51;84H1-28[18;28H[?25h[?25l;[18;28H[K[51;84H0-27[18;27H[?25h[?25l;[18;26H[K[51;83H18-25[18;25H[?25h[?25l[31m";[m[51;84H9-26[18;26H[?25h[?25l[31m ;[m[51;83H20-27[18;27H[?25h[?25l[31m"[m;[51;84H1-28[18;28H[?25h[?25l[51;84H2-29[18;29H[?25h[51;1H[K[18;28H[?25l[51;70H^[[18;28H[51;70H  [18;29H[51;80H18,21-28      All[18;28H[?25h[?25l[51;70Hz[18;28H[?25h[?25l[51;71Hz[18;28H[51;70H  [18;28H[?25h[?25l[51;70Hz[18;28H[?25h[?25l[51;71Hz[18;28H[51;70H  [18;28H[?25h[?25l[51;70HZ[18;28H[?25h[?25l[51;71HZ[18;28H[?1000l[?2004l[51;1H"out.hh"[51;70H[K[51;10H32L, 793C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ls
main  main.cc  main.o  out.hh
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ make -f ../Makefile 
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kout.hh:[m[K In function ‘[01m[Kvoid loopFn(Iterator, Iterator, int)[m[K’:
[01m[Kout.hh:18:4:[m[K [01;31m[Kerror: [m[K‘[01m[Kcout[m[K’ was not declared in this scope
    [01;31m[Kcout[m[K << *p << " ";
    [01;31m[K^~~~[m[K
[01m[Kout.hh:18:4:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[Kmain.cc:3[m[K:
[01m[K/usr/include/c++/8/iostream:61:18:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::cout[m[K’
   extern ostream [01;36m[Kcout[m[K;  /// Linked to standard output
                  [01;36m[K^~~~[m[K
make: *** [../Makefile:48: main.o] Error 1
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ make -f ../Makefile ls[Kvim out.hh [6@cat ../test.data[C[6Pvim out.hh[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"out.hh" 32L, 793C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef OUT_HH_
#define OUT_HH_

#include [m[31m<algorithm>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<vector>[m


[34m/** Output elements of [begin, end) on std::cout separated by single
 *  space.  The seqence of elements should be surrounded by [ and ]
 *  and terminated by a newline.
 */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m loopFn(Iterator begin, Iterator end, [32mint[m arg) {
  std::cout << [31m"[ "[m;
  [38;5;130mfor[m([32mauto[m p = begin; p != end; ++p)
  {[18;11Hcout << *p << [31m" "[m;
  }
  std::cout << [31m"]"[m << std::endl;
}

[34m/** Exactly like loopFn() but no loops should be used */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m noLoopFn(Iterator begin, Iterator end, [32mint[m arg) {
  std::cout << [31m"[ "[m;
  [32mauto[m print = []([32mconst[m [32mint[m& i) { std::cout << i << [31m" "[m ; };
  std::for_each(begin, end, print);
  std::cout << [31m"]"[m << std::endl;
}

[35m#endif[m [34m//ifndef OUT_HH_[m
[94m~                                                                                                [34;1H~                                                                                                [35;1H~                                                                                                [36;1H~                                                                                                [37;1H~                                                                                                [38;1H~                                                                                                [39;1H~                                                                                                [40;1H~                                                                                                [41;1H~                                                                                                [42;1H~                                                                                                [43;1H~                                                                                                [44;1H~                                                                                                [45;1H~                                                                                                [46;1H~                                                                                                [47;1H~                                                                                                [48;1H~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H18,21-28      All[18;28H[?25h[?25l[51;70H~@k[18;28H[51;70H   [18;27H[51;84H0-27[18;27H[?25h[?25l[51;70H~@k[18;27H[51;70H   [18;26H[51;83H19-26[18;26H[?25h[?25l[51;70H~@k[18;26H[51;70H   [18;25H[51;84H8-25[18;25H[?25h[?25l[51;70H~@k[18;25H[51;70H   [18;24H[51;84H7-24[18;24H[?25h[?25l[51;84H6-23[18;23H[?25h[?25l[51;84H5-22[18;22H[?25h[?25l[51;84H4-21[18;21H[?25h[?25l[51;84H3-20[18;20H[?25h[?25l[51;84H2-19[18;19H[?25h[?25l[51;84H1-18[18;18H[?25h[?25l[51;84H0-17[18;17H[?25h[?25l[51;83H9-16 [18;16H[?25h[?25l[51;83H8-15[18;15H[?25h[?25l[51;83H7-14[18;14H[?25h[?25l[51;83H6-13[18;13H[?25h[?25l[51;70H~@k[18;13H[51;70H   [18;12H[51;83H5-12[18;12H[?25h[?25l[51;70H~@k[18;12H[51;70H   [18;11H[51;83H4-11[18;11H[?25h[?25l[51;70Hi[18;11H[51;70H [18;11H[51;1H[1m-- INSERT --[m[51;13H[K[51;80H18,4-11[7CAll[18;11H[?25h[?25lscout << *p << [31m" "[m;[51;83H5-12[18;12H[?25h[?25ltcout << *p << [31m" "[m;[51;83H6-13[18;13H[?25h[?25ldcout << *p << [31m" "[m;[51;83H7-14[18;14H[?25h[?25l[38;5;130mstd[m:cout << *p << [31m" "[m;[18;23H[K[51;83H5   [18;5H[?25h[?25l          std::cout << *p << [31m" "[m;[51;83H9-16[18;16H[?25h[51;1H[K[18;15H[?25l[51;70H^[[18;15H[51;70H  [18;16H[51;80H18,8-15[7CAll[18;15H[?25h[?25l[51;70HZ[18;15H[?25h[?25l[51;71HZ[18;15H[?1000l[?2004l[51;1H"out.hh"[51;70H[K[51;10H32L, 798C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/1-out$ vim out.hh [9@make -f ../Makefile[C
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ main.o -o main
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ make -f ../Makefile [9Pvim out.hh[C[9@make -f ../Makefile[Cls[Kvim out.hh [6@cat ../test.data[C[1Pls[C[C[C[C[C[C[C[C[C[C[C[C[C[C[10@./main deque[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[ 22 43 12 56 64 42 11 22 ]
[ 22 43 12 56 64 42 11 22 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main deque ../test.data [Kcat main.cc 
#include <algorithm>
#include <fstream>
#include <iostream>
#include <iterator>
#include <string>
#include <utility>

#include <deque>
#include <forward_list>
#include <list>
#include <set>
#include <vector>

#include <cstdlib>
#include <cstring>

#include "out.hh"

/** Return vector of int's read from filePath.  If filePath is
 *  "-" read from stdin.
 */
static std::vector<int>
readIntsFromFile(const std::string filePath)
{
  bool isStdin = filePath == "-";
  std::ifstream fstream;
  if (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  if (!in) {
    throw std::invalid_argument(std::string("cannot read ") + filePath +
				": " + std::strerror(errno));
  }
  //construct a vector from an istream_iterator on istream in.
  //The two arguments give the begin and end of the iterator.
  std::vector<int> ints((std::istream_iterator<int>(in)),
			std::istream_iterator<int>());
  //no in.close(); depend on RAII
  return ints;
}


static void
go(std::string containerSpec, std::vector<int> ints, int arg)
{
  if (containerSpec == "[]") {
    //@TODO
  }
  else if (containerSpec == "deque") {
    std::deque<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "forward_list") {
    std::forward_list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "list") {
    std::list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "multiset") {
    std::multiset<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "set") {
    std::set<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "vector") {
    loopFn(ints.begin(), ints.end(), arg);
    noLoopFn(ints.begin(), ints.end(), arg);
  }
  else {
    std::cerr << "unknown container " << containerSpec << std::endl;
    std::exit(1);
  }
}

static void
usage(std::string progName) {
  std::cerr << "usage: "
	    << progName
	    << " CONTAINER_SPEC INTS_DATA_FILE [INT]"
	    << std::endl;
  std::exit(1);
}


int
main(int argc, char* argv[])
{
  try {
    if (argc != 3 && argc != 4) usage(argv[0]);
    const std::string containerSpec(argv[1]);
    const std::string filePath(argv[2]);
    std::vector<int> ints = readIntsFromFile(filePath);
    const int arg = (argc == 4) ? atoi(argv[3]) : 0;
    go(containerSpec, ints, arg);
  }
  catch (const std::exception& err) {
    std::cerr << err.what() << std::endl;
  }

}
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat main.cc [14@./main deque ../test.data[C[14Pcat main.cc[C[Kcat main.cc [14@./main deque ../test.data[C[1P[1P[1P[1P[1P[1@f[1@o[1@r[1@w[1@a[1@r[1@d[1@_[1@l[1@i[1@s[1@t
[ 22 43 12 56 64 42 11 22 ]
[ 22 43 12 56 64 42 11 22 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main forward_list ../test.data [1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1@l[1@i[1@s[1@t
[ 22 43 12 56 64 42 11 22 ]
[ 22 43 12 56 64 42 11 22 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main list ../test.data [1P[1P[1P[1P[1P[C[1@ [1@m[1@u[1@l[1@t[1@i[1@s[1@e[1@t
[ 11 12 22 22 42 43 56 64 ]
[ 11 12 22 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main multiset ../test.data [1P[1P[1P[1P[1P
[ 11 12 22 42 43 56 64 ]
[ 11 12 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main set ../test.data [1P[1P[1P[1@v[1@e[1@c[1@t[1@o[1@r
[ 22 43 12 56 64 42 11 22 ]
[ 22 43 12 56 64 42 11 22 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main vector ../test.data [3Pset[C[C[C[C[C[C[C[C[C[C[C[C[C[C[5@multi[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Plis[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[8@forward_[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[21Pcat main.cc[C[14@./main deque ../test.data[C
[ 22 43 12 56 64 42 11 22 ]
[ 22 43 12 56 64 42 11 22 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cat out.hh 
#ifndef OUT_HH_
#define OUT_HH_

#include <algorithm>
#include <iostream>
#include <vector>


/** Output elements of [begin, end) on std::cout separated by single
 *  space.  The seqence of elements should be surrounded by [ and ]
 *  and terminated by a newline.
 */
template <typename Iterator>
void loopFn(Iterator begin, Iterator end, int arg) {
  std::cout << "[ ";
  for(auto p = begin; p != end; ++p)
  {
	  std::cout << *p << " ";
  }
  std::cout << "]" << std::endl;
}

/** Exactly like loopFn() but no loops should be used */
template <typename Iterator>
void noLoopFn(Iterator begin, Iterator end, int arg) {
  std::cout << "[ ";
  auto print = [](const int& i) { std::cout << i << " " ; };
  std::for_each(begin, end, print);
  std::cout << "]" << std::endl;
}

#endif //ifndef OUT_HH_
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ls
main  main.cc  main.o  out.hh
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ls
main  main.cc  main.o  out.hh
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ lscat out.hh [15@./main deque ../test.data[C[1@vector[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[ 22 43 12 56 64 42 11 22 ]
[ 22 43 12 56 64 42 11 22 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ vim main.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 108L, 2970C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<iterator>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<utility>[m

[35m#include [m[31m<deque>[m
[35m#include [m[31m<forward_list>[m
[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"out.hh"[m

[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream fstream;
  [38;5;130mif[m (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  [38;5;130mif[m (!in) {
    [38;5;130mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[31;33H[31m": "[m + std::strerror(errno));
  }
  [34m//construct a vector from an istream_iterator on istream in.
[m  [34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[36;25Hstd::istream_iterator<[32mint[m>());
  [34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}


[32mstatic[m [32mvoid[m
go(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {
    [34m//@[m[30m[103mTODO[m
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"deque"[m) {
    std::deque<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);[51;80H1,1[11CTop[1;1H[?25h[?25l[51;70H~@k[1;1H[51;70H   [2;1H[51;80H2[2;1H[?25h[?25l[51;70H^D[2;1H[51;70H  [6;33H[1;50r[1;1H[25M[1;51r[26;5HnoLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {
    std::forward_list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {
    std::list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"multiset"[m) {
    std::multiset<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"set"[m) {
    std::set<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"vector"[m) {
    loopFn(ints.begin(), ints.end(), arg);
    noLoopFn(ints.begin(), ints.end(), arg);[51;1H[K[51;80H31,5-33[7C43%[6;33H[?25h[?25l[51;70H^D[6;33H[51;70H  [6;5H[1;50r[1;1H[25M[1;51r[26;3H}
  [38;5;130melse[m {
    std::cerr << [31m"unknown container "[m << containerSpec << std::endl;
    std::exit([31m1[m);
  }
}

[32mstatic[m [32mvoid[m
usage(std::string progName) {
  std::cerr << [31m"usage: "[m[36;13H<< progName[37;13H<< [31m" CONTAINER_SPEC INTS_DATA_FILE [INT]"[m[38;13H<< std::endl;
  std::exit([31m1[m);
}


[32mint[m
main([32mint[m argc, [32mchar[m* argv[])
{
  [38;5;130mtry[m {
    [38;5;130mif[m (argc != [31m3[m && argc != [31m4[m) usage(argv[[31m0[m]);
    [32mconst[m std::string containerSpec(argv[[31m1[m]);
    [32mconst[m std::string filePath(argv[[31m2[m]);
    std::vector<[32mint[m> ints = readIntsFromFile(filePath);[51;80H[K[51;80H56,5[10C86%[6;5H[?25h[?25l[51;70H^U[6;5H[51;70H  [6;33H[1;50r[1;1H[25L[1;51r[1;3Hstd::ifstream fstream;
  [38;5;130mif[m (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  [38;5;130mif[m (!in) {
    [38;5;130mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[6;33H[31m": "[m + std::strerror(errno));
  }
  [34m//construct a vector from an istream_iterator on istream in.
[m  [34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[11;25Hstd::istream_iterator<[32mint[m>());
  [34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}


[32mstatic[m [32mvoid[m
go(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {
    [34m//@[m[30m[103mTODO[m
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"deque"[m) {
    std::deque<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H31,5-33[7C43%[6;33H[?25h[?25l[1;50r[1;1H[25L[1;51r[1;1H[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<iterator>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<utility>[m

[35m#include [m[31m<deque>[m
[35m#include [m[31m<forward_list>[m
[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"out.hh"[m

[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;[51;80H[K[51;80H6,1[11CTop[6;1H[?25h[?25l[51;70H^U[6;1H[51;70H  [1;1H[51;80H1[1;1H[?25h[?25l[51;70H^D[1;1H[51;70H  [6;33H[1;50r[1;1H[25M[1;51r[26;5HnoLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {
    std::forward_list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {
    std::list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"multiset"[m) {
    std::multiset<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"set"[m) {
    std::set<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"vector"[m) {
    loopFn(ints.begin(), ints.end(), arg);
    noLoopFn(ints.begin(), ints.end(), arg);[51;80H[K[51;80H31,5-33[7C43%[6;33H[?25h[?25l[51;70H^D[6;33H[51;70H  [6;5H[1;50r[1;1H[25M[1;51r[26;3H}
  [38;5;130melse[m {
    std::cerr << [31m"unknown container "[m << containerSpec << std::endl;
    std::exit([31m1[m);
  }
}

[32mstatic[m [32mvoid[m
usage(std::string progName) {
  std::cerr << [31m"usage: "[m[36;13H<< progName[37;13H<< [31m" CONTAINER_SPEC INTS_DATA_FILE [INT]"[m[38;13H<< std::endl;
  std::exit([31m1[m);
}


[32mint[m
main([32mint[m argc, [32mchar[m* argv[])
{
  [38;5;130mtry[m {
    [38;5;130mif[m (argc != [31m3[m && argc != [31m4[m) usage(argv[[31m0[m]);
    [32mconst[m std::string containerSpec(argv[[31m1[m]);
    [32mconst[m std::string filePath(argv[[31m2[m]);
    std::vector<[32mint[m> ints = readIntsFromFile(filePath);[51;80H[K[51;80H56,5[10C86%[6;5H[?25h[?25l[51;70H^D[6;5H[51;70H  [23;1H[1;50r[1;1H[8M[1;51r[43;5H[32mconst[m [32mint[m arg = (argc == [31m4[m) ? atoi(argv[[31m3[m]) : [31m0[m;
    go(containerSpec, ints, arg);
  }
  [38;5;130mcatch[m ([32mconst[m std::exception& err) {
    std::cerr << err.what() << std::endl;
  }

}[51;80H[K[51;80H81,1[10CBot[23;1H[?25h[?25l[51;70H^U[23;1H[51;70H  [23;5H[1;50r[1;1H[25L[1;51r[1;3H[34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[3;25Hstd::istream_iterator<[32mint[m>());
  [34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}


[32mstatic[m [32mvoid[m
go(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {
    [34m//@[m[30m[103mTODO[m
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"deque"[m) {
    std::deque<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {
    std::forward_list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {[51;80H[K[51;80H56,5[10C56%[23;5H[?25h[?25l[51;70H~@k[23;5H[51;70H   [22;5H[51;81H5[22;5H[?25h[?25l[51;70H~@k[22;5H[51;70H   [21;5H[51;81H4[21;5H[?25h[?25l[51;70H~@k[21;5H[51;70H   [20;5H[51;81H3[20;5H[?25h[?25l[51;70H~@k[20;5H[51;70H   [19;3H[15;38H[106m{[19;3H}[m[51;81H2,3[19;3H[?25h[?25l[51;70H~@k[19;3H[51;70H   [18;5H[15;38H{[19;3H}[51;81H1,5[18;5H[?25h[?25l[51;70H~@k[18;5H[51;70H   [17;5H[51;81H0[17;5H[?25h[?25l[51;70H~@k[17;5H[51;70H   [16;5H[51;80H49[16;5H[?25h[?25l[51;70H~@k[16;5H[51;70H   [15;5H[51;81H8[15;5H[?25h[?25l[51;70H~@k[15;5H[51;70H   [14;3H[12;30H[106m{

[m  [106m}[m[51;81H7,3[14;3H[?25h[?25l[51;70H~@k[14;3H[51;70H   [13;5H[12;30H{

  }[51;81H6,5[13;5H[?25h[?25l[51;70H~@k[13;5H[51;70H   [13;6H[51;83H6[13;6H[?25h[?25l[51;70H~@k[13;6H[51;70H   [13;7H[51;83H7[13;7H[?25h[?25l[51;70Hd[13;7H[?25h[?25l[51;70H [13;3H[12;50r[50;1H
[1;51r[12;3H[38;5;130mif[m (containerSpec == [31m"[]"[m) [106m{
[m  [106m}[m[50;1Husage(std::string progName) {[51;80H[K[51;80H46,3[10C57%[13;3H[?25h[?25l[51;70Hi[13;3H[51;70H [13;3H[51;1H[1m-- INSERT --[m[51;80H[K[51;80H46,3[10C57%[13;3H[?25h[?25l[12;30H{
  }[51;81H5[12;3H[?25h[?25l[51;83H4[12;4H[?25h[?25l[51;83H5[12;5H[?25h[?25l [106m([21C)[m[51;83H6[12;6H[?25h[?25l[51;83H7[12;7H[?25h[?25l([21C)[51;83H8[12;8H[?25h[?25l[51;83H9[12;9H[?25h[?25l[51;83H10[12;10H[?25h[?25l[51;84H1[12;11H[?25h[?25l[51;84H2[12;12H[?25h[?25l[51;84H3[12;13H[?25h[?25l[51;84H4[12;14H[?25h[51;1H[K[12;13H[?25l[51;70H^[[12;13H[51;70H  [12;14H[51;80H45,13[9C57%[12;13H[?25h[?25l[51;70H$[12;13H[51;70H [12;30H[106m{
[m  [106m}[m[51;83H30[12;30H[?25h[?25l[51;70Hi[12;30H[51;70H [12;30H[51;1H[1m-- INSERT --[m[51;80H[K[51;80H45,30[9C57%[12;30H[?25h[?25l[51;84H1[12;31H[?25h[?25l[13;50r[13;1H[L[1;51r[13;10H[106m [m
  }[51;80H[K[51;80H46,4-11[7C56%[12;30H{[13;10H [?25h[?25l[51;83H3-10[13;10H[?25h[?25l[51;83H2-9 [13;9H[?25h[?25l[51;83H1  [13;1H[?25h[?25l[12;50r[50;1H
[1;51r[12;3H[38;5;130mif[m (containerSpec == [31m"[]"[m) {[50;1Husage(std::string progName) {[51;80H[K[51;80H45,31[9C57%[12;30H[106m{
[m  [106m}[12;31H[?25h[?25l[13;50r[m[13;1H[L[1;51r[13;10H[106m [m
  }[51;80H[K[51;80H46,4-11[7C56%[12;30H{[13;10H [?25h[?25l[51;83H3-10[13;10H[?25h[?25l[51;83H2-9 [13;9H[?25h[?25l[51;83H1  [13;1H[?25h[?25l[51;83H2-9[13;9H[?25h[?25l[51;83H1  [13;1H[?25h[?25l[51;83H2[13;2H[?25h[?25l[51;83H3[13;3H[?25h[?25l[51;83H4[13;4H[?25h[?25l[51;83H5[13;5H[?25h[?25l[51;83H6[13;6H[?25h[?25l[51;83H5[13;5H[?25h[?25lc[51;83H6[13;6H[?25h[?25lo[51;83H7[13;7H[?25h[?25lu[51;83H8[13;8H[?25h[?25lt[51;83H9[13;9H[?25h[?25l[51;83H10[13;10H[?25h[?25l[51;83H9 [13;9H[?25h[?25l[14;50r[14;1H[L[1;51r[51;80H[K[51;80H47,6-13[7C55%[14;13H[?25h[?25l[51;83H5-12[14;12H[?25h[?25l[51;83H4-11[14;11H[?25h[?25l[51;83H3-10[14;10H[?25h[?25l[51;83H2-9 [14;9H[?25h[?25l[51;83H1  [14;1H[?25h[?25l[13;50r[50;1H
[1;51r[13;5Hcout[50;1H[32mstatic[m [32mvoid[m[51;80H[K[51;80H46,9[10C56%[13;9H[?25h[?25l[13;8H[K[51;83H8[13;8H[?25h[?25l[13;7H[K[51;83H7[13;7H[?25h[?25l[13;6H[K[51;83H6[13;6H[?25h[?25l[13;5H[K[51;83H5[13;5H[?25h[?25lints[51;83H10[13;10H[?25h[?25l[51;83H9 [13;9H[?25h[?25l[32mint[m[13;8H[K[51;83H8[13;8H[?25h[?25li[13;6H[K[51;83H6[13;6H[?25h[?25l[13;5H[K[51;83H5[13;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1Husage(std::string progName) {
  std::cerr << [31m"usage: "[m[50;13H<< progName[51;80H[K[51;80H46,5[10C62%[10;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;13H<< [31m" CONTAINER_SPEC INTS_DATA_FILE [INT]"[m[49;13H<< std::endl;
  std::exit([31m1[m);[51;80H[K[51;80H46,5[10C67%[7;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H}[51;80H[K[51;80H48,5[10C72%[6;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[32mint[m
main([32mint[m argc, [32mchar[m* argv[])
{[51;80H[K[51;80H51,5[10C77%[6;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[38;5;130mtry[m {
    [38;5;130mif[m (argc != [31m3[m && argc != [31m4[m) usage(argv[[31m0[m]);
    [32mconst[m std::string containerSpec(argv[[31m1[m]);[51;80H[K[51;80H54,5[10C82%[6;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H[32mconst[m std::string filePath(argv[[31m2[m]);
    std::vector<[32mint[m> ints = readIntsFromFile(filePath);
    [32mconst[m [32mint[m arg = (argc == [31m4[m) ? atoi(argv[[31m3[m]) : [31m0[m;[51;80H[K[51;80H57,4[10C87%[2;45H[106m{[6;3H}[?25h[?25l[1;50r[m[1;1H[3M[1;51r[48;5Hgo(containerSpec, ints, arg);
  }
  [38;5;130mcatch[m ([32mconst[m std::exception& err) {[51;80H[K[51;80H60,5[10C93%[3;3H}[6;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hstd::cerr << err.what() << std::endl;
  }[51;80H[K[51;80H63,5[10C98%[6;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H}
[94m~                                                                                                [50;1H~                                                                                                [m[51;80H[K[51;80H66,5[10CBot[6;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[94m~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H[K[51;80H69,5[10CBot[6;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[94m~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H[K[51;80H72,4[10CBot[2;36H[106m{[6;3H}[?25h[?25l[1;50r[m[1;1H[3M[1;51r[48;1H[94m~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H[K[51;80H75,5[10CBot[3;3H}[6;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[94m~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H[K[51;80H78,5[10CBot[6;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5HloopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }[51;80H[K[51;80H78,5[10CBot[9;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H}
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"set"[m) {
    std::set<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H78,5[10CBot[12;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5Hstd::multiset<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H78,5[10CBot[15;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5HnoLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"multiset"[m) {[51;80H[K[51;80H78,5[10CBot[18;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {
    std::list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H78,5[10C98%[21;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5HloopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }[51;80H[K[51;80H78,5[10C93%[24;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H}
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {
    std::forward_list<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H78,5[10C87%[27;5H[1;50r[1;1H[3L[1;51r[1;5Hstd::deque<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H78,5[10C82%[30;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;3H}
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"deque"[m) {[51;80H[K[51;80H78,5[10C77%[33;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1Hgo(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {[51;80H[K[51;80H78,5[10C72%[36;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[3;1H[32mstatic[m [32mvoid[m[51;80H[K[51;80H78,5[10C67%[39;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}[51;80H[K[51;80H78,5[10C62%[42;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[3;25Hstd::istream_iterator<[32mint[m>());[51;80H[K[51;80H78,5[10C56%[45;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;33H[31m": "[m + std::strerror(errno));
  }
  [34m//construct a vector from an istream_iterator on istream in.[m[51;80H[K[51;80H75,5[10C51%[45;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::istream& in = (isStdin) ? std::cin : fstream;
  [38;5;130mif[m (!in) {
    [38;5;130mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[51;80H[K[51;80H72,4[10C46%[41;36H[106m{[45;3H}[?25h[?25l[1;50r[m[1;1H[3L[1;51r[1;3H[32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream fstream;
  [38;5;130mif[m (!isStdin) fstream.open(filePath);[51;80H[K[51;80H69,5[10C41%[44;36H{[48;3H}[45;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{[51;80H[K[51;80H66,5[10C36%[45;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m[51;80H[K[51;80H63,5[10C31%[45;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[35m#include [m[31m"out.hh"[m[51;80H[K[51;80H60,5[10C25%[45;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m[51;80H[K[51;80H57,4[10C20%[41;45H[106m{[45;3H}[?25h[?25l[1;50r[m[1;1H[3L[1;51r[1;1H[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m[51;80H[K[51;80H54,5[10C15%[44;45H{[48;3H}[45;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[35m#include [m[31m<deque>[m
[35m#include [m[31m<forward_list>[m[51;80H[K[51;80H51,5[10C10%[45;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {
    std::list<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H51,5[10C15%[42;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5HloopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }[51;80H[K[51;80H51,5[10C20%[39;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m[51;80H[K[51;80H51,5[10C15%[42;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[35m#include [m[31m<deque>[m
[35m#include [m[31m<forward_list>[m[51;80H[K[51;80H51,5[10C10%[45;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {
    std::list<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H51,5[10C15%[42;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5HloopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }[51;80H[K[51;80H51,5[10C20%[39;5H[?25h[?25ldnoLoopFn(container.begin(), container.end(), arg);[51;83H6[39;6H[?25h[51;1H[K[39;5H[?25l[51;70H^[[39;5H[51;70H  [39;6H[51;80H51,5[10C20%[39;5H[?25h[?25l[51;70Hu[39;5H[51;1H1 change; before #3  1 second ago[51;70H[K[39;5HnoLoopFn(container.begin(), container.end(), arg);[39;55H[K[51;80H51,5[10C20%[51;80H[K[51;80H51,5[10C20%[39;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m[51;1H[K[51;80H51,5[10C15%[42;5H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[35m#include [m[31m<deque>[m
[35m#include [m[31m<forward_list>[m[51;80H[K[51;80H51,5[10C10%[45;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {
    std::list<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H51,5[10C15%[42;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5HloopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }[51;80H[K[51;80H51,5[10C20%[39;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"multiset"[m) {
    std::multiset<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H51,5[10C25%[36;5H[?25h[?25l[51;80H46,4[31;4H[?25h[?25l[51;70Hi[31;4H[51;70H [31;4H[51;1H[1m-- INSERT --[m[51;80H[K[51;80H46,4[10C25%[31;4H[?25h[?25l[51;83H5[31;5H[?25h[?25li[51;83H6[31;6H[?25h[?25ln[51;83H7[31;7H[?25h[?25l[32mint[m[51;83H8[31;8H[?25h[?25l[51;83H9[31;9H[?25h[?25la[51;83H10[31;10H[?25h[?25l[31;9H[K[51;83H9 [31;9H[?25h[?25lf[51;83H10[31;10H[?25h[?25li[51;84H1[31;11H[?25h[?25lx[51;84H2[31;12H[?25h[?25led[51;84H4[31;14H[?25h[?25lA[51;84H5[31;15H[?25h[?25lr[51;84H6[31;16H[?25h[?25lr[51;84H7[31;17H[?25h[?25l[51;84H8[31;18H[?25h[?25l[51;84H7[31;17H[?25h[?25l[
  [97m[101m}[33;38H{[34;56H;[35;52H;[36;54H;
[m  [97m[101m}[38;45H{[39;63H;[40;52H;[41;54H;
[m  [97m[101m}[43;37H{[44;55H;[45;52H;[46;54H;
[m  [97m[101m}[48;41H{[49;59H;[50;52H;[m[51;84H8[31;18H[?25h[?25li[51;84H9[31;19H[?25h[?25lnts.size(
  }[33;38H{[34;56H;[35;52H;[36;54H;
  }[38;45H{[39;63H;[40;52H;[41;54H;
  }[43;37H{[44;55H;[45;52H;[46;54H;
  }[48;41H{[49;59H;[50;52H;[51;83H28[31;28H[?25h[?25l)
  [97m[101m}[33;38H{[34;56H;[35;52H;[36;54H;
[m  [97m[101m}[38;45H{[39;63H;[40;52H;[41;54H;
[m  [97m[101m}[43;37H{[44;55H;[45;52H;[46;54H;
[m  [97m[101m}[48;41H{[49;59H;[50;52H;[m[31;27H[106m()[m[51;84H9[31;29H[?25h[?25l]
  }[33;38H{[34;56H;[35;52H;[36;54H;
  }[38;45H{[39;63H;[40;52H;[41;54H;
  }[43;37H{[44;55H;[45;52H;[46;54H;
  }[48;41H{[49;59H;[50;52H;[31;17H[106m[[m[9C()[106m][m[51;83H30[31;30H[?25h[?25l;[31;17H[[11C][51;84H1[31;31H[?25h[?25l[32;50r[32;1H[L[1;51r[51;80H[K[51;80H47,5[10C25%[32;5H[?25h[?25lf[51;83H6[32;6H[?25h[?25li[51;83H7[32;7H[?25h[?25lr[51;83H8[32;8H[?25h[?25l[32;7H[K[51;83H7[32;7H[?25h[?25l[32;6H[K[51;83H6[32;6H[?25h[?25lo[51;83H7[32;7H[?25h[?25l[38;5;130mfor[m[51;83H8[32;8H[?25h[?25l([51;83H9[32;9H[?25h[?25la[51;83H10[32;10H[?25h[?25lu[51;84H1[32;11H[?25h[?25lt[51;84H2[32;12H[?25h[?25l[32mauto[m[51;84H3[32;13H[?25h[?25l[51;84H4[32;14H[?25h[?25lx[51;84H5[32;15H[?25h[?25l[51;84H6[32;16H[?25h[?25l[51;84H5[32;15H[?25h[?25l[32;14H[K[51;84H4[32;14H[?25h[?25lx[51;84H5[32;15H[?25h[?25l[51;84H6[32;16H[?25h[?25l:[51;84H7[32;17H[?25h[?25l[51;84H8[32;18H[?25h[?25li[51;84H9[32;19H[?25h[?25ln[51;83H20[32;20H[?25h[?25lts[51;84H2[32;22H[?25h[?25l)[32;8H[106m([13C)[m[51;84H3[32;23H[?25h[?25l[33;50r[33;1H[2L[1;51r[33;13HP[34;13H{[51;80H[K[51;80H49,7-14[7C24%[32;8H([13C)[34;13H[106m{
[m  [106m}[34;14H[?25h[?25l[m[34;13H[K[35;3H}[51;83H4-11[34;11H[?25h[?25l[51;83H3-10[34;10H[?25h[?25l[33;50r[50;1H
[1;51r[33;13HP[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"multiset"[m) {[51;80H[K[51;80H48,7-14[7C25%[33;14H[?25h[?25l[33;13H[K[51;83H6-13[33;13H[?25h[?25l[51;83H4-11[33;11H[?25h[?25l[51;83H3-10[33;10H[?25h[?25l[51;83H1   [33;1H[?25h[?25l[32;50r[50;1H
[1;51r[32;5H[38;5;130mfor[m([32mauto[m x : ints)[50;5Hstd::multiset<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H47,23[9C25%[32;8H[106m([13C)[?25h[?25l[33;50r[m[33;1H[L[1;51r[51;80H[K[51;80H48,6-13[7C25%[32;8H([13C)[33;13H[?25h[?25l    {[106m{
[m  [106m}[m[51;84H   [33;6H[?25h[?25l[34;50r[34;1H[L[1;51r[34;10H[106m [m
  }[51;80H[K[51;80H49,6-13[7C24%[33;5H{[34;10H   [?25h[?25l    }[33;5H[106m{
[m    [106m}[m[51;84H   [34;6H[?25h[?25l[51;81H8[33;6H[?25h[?25l[34;50r[34;1H[L[1;51r[34;12H[106m [m
    }[51;80H[K[51;80H49,6-13[7C24%[33;5H{[34;12H [?25h[?25lf[51;83H7-14[34;14H[?25h[?25li[51;83H8-15[34;15H[?25h[?25lx[51;83H9-16[34;16H[?25h[?25le[51;83H10-17[34;17H[?25h[?25ld[51;84H1-18[34;18H[?25h[?25lA[51;84H2-19[34;19H[?25h[?25lr[51;84H3-20[34;20H[?25h[?25lr[51;84H4-21[34;21H[?25h[?25l[33;5H[106m{[35;5H}[m[51;81H8,6    [33;6H[?25h[?25l{[35;5H}[51;81H7,21[32;21H[?25h[?25l[51;81H6[31;21H[?25h[?25l[51;84H2[31;22H[?25h[?25l[51;84H3[31;23H[?25h[?25l[51;83H31[31;31H[?25h[?25l[32;50r[32;1H[L[1;51r[51;80H[K[51;80H47,5[10C23%[32;5H[?25h[?25li[51;83H6[32;6H[?25h[?25ln[51;83H7[32;7H[?25h[?25l[32mint[m[51;83H8[32;8H[?25h[?25l[51;83H9[32;9H[?25h[?25li[51;83H10[32;10H[?25h[?25l[51;84H1[32;11H[?25h[?25l=[51;84H2[32;12H[?25h[?25l[51;84H3[32;13H[?25h[?25l[31m0[m[51;84H4[32;14H[?25h[?25l;[51;84H5[32;15H[?25h[?25l[51;81H8[33;15H[?25h[?25l
    [106m{[36;5H}[m[51;81H9,6 [34;6H[?25h[?25l{[36;5H}[51;80H50,8-15[35;15H[?25h[?25l[51;83H9-16[35;16H[?25h[?25l[51;83H10-17[35;17H[?25h[?25l[51;84H1-18[35;18H[?25h[?25l[51;84H2-19[35;19H[?25h[?25l[51;84H3-20[35;20H[?25h[?25l[51;84H4-21[35;21H[?25h[?25l[
    [97m[101m}
[m  [97m[101m}[38;38H{[39;56H;[40;52H;[41;54H;
[m  [97m[101m}[43;45H{[44;63H;[45;52H;[46;54H;
[m  [97m[101m}[48;37H{[49;55H;[50;52H;[m[51;84H5-22[35;22H[?25h[?25li[51;84H6-23[35;23H[?25h[?25l]
    }
  }[38;38H{[39;56H;[40;52H;[41;54H;
  }[43;45H{[44;63H;[45;52H;[46;54H;
  }[48;37H{[49;55H;[50;52H;[35;21H[106m[[mi[106m][m[51;84H7-24[35;24H[?25h[?25l[i][51;84H8-25[35;25H[?25h[?25l=[51;84H9-26[35;26H[?25h[?25l[51;83H20-27[35;27H[?25h[?25lx[51;84H1-28[35;28H[?25h[?25l;[51;84H2-29[35;29H[?25h[?25l[36;50r[36;1H[L[1;51r[51;80H[K[51;80H51,6-13[7C23%[36;13H[?25h[?25li[51;83H7-14[36;14H[?25h[?25l+[51;83H8-15[36;15H[?25h[?25l+[51;83H9-16[36;16H[?25h[?25l;[51;83H10-17[36;17H[?25h[?25l[34;5H[106m{[37;5H}[m[51;81H2,6    [37;6H[?25h[?25l[34;5H{[37;5H}[51;81H1,10-17[36;17H[?25h[?25l[51;81H0[35;17H[?25h[?25l[51;81H1[36;17H[?25h[?25l[34;5H[106m{[37;5H}[m[51;81H2,6    [37;6H[?25h[?25l[38;50r[38;1H[L[1;51r[51;80H[K[51;80H53,5[10C23%[34;5H{[37;5H}
    [?25h[?25ll[51;83H6[38;6H[?25h[?25lo[51;83H7[38;7H[?25h[?25lo[51;83H8[38;8H[?25h[?25lp[51;83H9[38;9H[?25h[?25lF[51;83H10[38;10H[?25h[?25ln[51;84H1[38;11H[?25h[?25l([51;84H2[38;12H[?25h[?25l)[106m()[m[51;84H3[38;13H[?25h[?25l;()[51;84H4[38;14H[?25h[?25l[39;50r[39;1H[L[1;51r[51;80H[K[51;80H54,5[10C22%[39;5H[?25h[?25ln[51;83H6[39;6H[?25h[?25lo[51;83H7[39;7H[?25h[?25lL[51;83H8[39;8H[?25h[?25lo[51;83H9[39;9H[?25h[?25lop[51;83H11[39;11H[?25h[?25lF[51;84H2[39;12H[?25h[?25ln[51;84H3[39;13H[?25h[?25l()[106m()[m[51;84H5[39;15H[?25h[?25l;()[51;84H6[39;16H[?25h[?25l[51;81H3,14[38;14H[?25h[?25l[106m()[m[51;84H3[38;13H[?25h[?25l[51;84H2[38;12H[?25h[?25l[106mc[m);c[106m)[m[51;84H3[38;13H[?25h[?25l[106mo[mn);on[106m)[m[51;84H5[38;15H[?25h[?25l)[106m;[m[38;16H[K[38;14H[106m)[m;[51;84H4[38;14H[?25h[?25l);[38;14H[K[38;12H[106m)[m[51;84H2[38;12H[?25h[?25l[106mf[mix);fix[106m)[m[51;84H5[38;15H[?25h[?25l[106me[m);e[106m)[m[51;84H6[38;16H[?25h[?25l[106md[m);d[106m)[m[51;84H7[38;17H[?25h[?25l[106mA[m);A[106m)[m[51;84H8[38;18H[?25h[?25l[106mr[m);r[106m)[m[51;84H9[38;19H[?25h[?25l[106mr[m);r[106m)[m[51;83H20[38;20H[?25h[?25l[106my[m);y[106m)[m[51;84H1[38;21H[?25h[?25l[106ma[m);a[106m)[m[51;84H2[38;22H[?25h[?25l)[106m;[m[38;23H[K[38;21H[106m)[m;[51;84H1[38;21H[?25h[?25l)[106m;[m[38;22H[K[38;20H[106m)[m;[51;84H0[38;20H[?25h[?25l[106ma[my);ay[106m)[m[51;84H2[38;22H[?25h[?25l[106m[[m[97m[101m);[39;15H;
[m  [97m[101m}[41;38H{[42;56H;[43;52H;[44;54H;
[m  [97m[101m}[46;45H{[47;63H;[48;52H;[49;54H;
[m  [97m[101m}[m[38;22H[[97m[106m)[m[51;84H3[38;23H[?25h[?25l[31m[106m0[m]);[39;15H;
  }[41;38H{[42;56H;[43;52H;[44;54H;
  }[46;45H{[47;63H;[48;52H;[49;54H;
  }[38;23H[31m0[m][106m)[m[51;84H5[38;25H[?25h[?25l[106m,[m);,[106m)[m[51;84H6[38;26H[?25h[?25l[106m [m); [106m)[m[51;84H7[38;27H[?25h[?25l[106mf[m);f[106m)[m[51;84H8[38;28H[?25h[?25l[106mi[m);i[106m)[m[51;84H9[38;29H[?25h[?25l[106mx[m);x[106m)[m[51;83H30[38;30H[?25h[?25l[106me[m);e[106m)[m[51;84H1[38;31H[?25h[?25l[106md[m);d[106m)[m[51;84H2[38;32H[?25h[?25l[106mA[m);A[106m)[m[51;84H3[38;33H[?25h[?25l[106mr[m);r[106m)[m[51;84H4[38;34H[?25h[?25l[106mr[m);r[106m)[m[51;84H5[38;35H[?25h[?25l[106ma[m);a[106m)[m[51;84H6[38;36H[?25h[?25l[106my[m);y[106m)[m[51;84H7[38;37H[?25h[?25l)[106m;[m[38;38H[K[38;36H[106m)[m;[51;84H6[38;36H[?25h[?25l)[106m;[m[38;37H[K[38;35H[106m)[m;[51;84H5[38;35H[?25h[?25l)[106m;[m[38;36H[K[38;34H[106m)[m;[51;84H4[38;34H[?25h[?25l)[106m;[m[38;35H[K[38;33H[106m)[m;[51;84H3[38;33H[?25h[?25l)[106m;[m[38;34H[K[38;32H[106m)[m;[51;84H2[38;32H[?25h[?25l)[106m;[m[38;33H[K[38;31H[106m)[m;[51;84H1[38;31H[?25h[?25l)[106m;[m[38;32H[K[38;30H[106m)[m;[51;84H0[38;30H[?25h[?25l)[106m;[m[38;31H[K[38;29H[106m)[m;[51;83H29[38;29H[?25h[?25l)[106m;[m[38;30H[K[38;28H[106m)[m;[51;84H8[38;28H[?25h[?25l)[106m;[m[38;29H[K[38;27H[106m)[m;[51;84H7[38;27H[?25h[?25l)[106m;[m[38;28H[K[38;26H[106m)[m;[51;84H6[38;26H[?25h[?25l[106m [m); [106m)[m[51;84H7[38;27H[?25h[?25l[106mi[m);i[106m)[m[51;84H8[38;28H[?25h[?25l[106mn[m);n[106m)[m[51;84H9[38;29H[?25h[?25l[32min[m[32m[106mt[m);[32mt[m[106m)[m[51;83H30[38;30H[?25h[?25lint[106ms[m);s[106m)[m[51;84H1[38;31H[?25h[?25l[106m.[m);.[106m)[m[51;84H2[38;32H[?25h[?25l)[106m;[m[38;33H[K[38;31H[106m)[m;[51;84H1[38;31H[?25h[?25l[32mint[m)[106m;[m[38;32H[K[38;30H[106m)[m;[51;84H0[38;30H[?25h[?25lin)[106m;[m[38;31H[K[38;29H[106m)[m;[51;83H29[38;29H[?25h[?25l)[106m;[m[38;30H[K[38;28H[106m)[m;[51;84H8[38;28H[?25h[?25l)[106m;[m[38;29H[K[38;27H[106m)[m;[51;84H7[38;27H[?25h[?25l[106mf[mix);fix[106m)[m[51;83H30[38;30H[?25h[?25l[106me[m);e[106m)[m[51;84H1[38;31H[?25h[?25l[106md[m);d[106m)[m[51;84H2[38;32H[?25h[?25l[106mA[m);A[106m)[m[51;84H3[38;33H[?25h[?25l[106mr[m);r[106m)[m[51;84H4[38;34H[?25h[?25l[106mr[m);r[106m)[m[51;84H5[38;35H[?25h[?25l[106ma[m);a[106m)[m[51;84H6[38;36H[?25h[?25l[106my[m);y[106m)[m[51;84H7[38;37H[?25h[?25l[106m [m); [106m)[m[51;84H8[38;38H[?25h[?25l[106m+[m);+[106m)[m[51;84H9[38;39H[?25h[?25l[106m [m); [106m)[m[51;83H40[38;40H[?25h[?25l[106mi[m);i[106m)[m[51;84H1[38;41H[?25h[?25l[106mn[m);n[106m)[m[51;84H2[38;42H[?25h[?25l[32min[m[32m[106mt[m);[32mt[m[106m)[m[51;84H3[38;43H[?25h[?25lint[106ms[m);s[106m)[m[51;84H4[38;44H[?25h[?25l[106m.[m);.[106m)[m[51;84H5[38;45H[?25h[?25l[106ms[m);s[106m)[m[51;84H6[38;46H[?25h[?25l[106mi[m);i[106m)[m[51;84H7[38;47H[?25h[?25l[106mz[m);z[106m)[m[51;84H8[38;48H[?25h[?25l[106me[m);e[106m)[m[51;84H9[38;49H[?25h[?25l[106m([m);[38;11H([38C[106m)[m[51;83H50[38;50H[?25h[?25l[1C);[38;11H[106m([m[37C()[106m)[m[51;84H1[38;51H[?25h[?25l[106m;[m);;[106m)[m[51;84H2[38;52H[?25h[?25l)[106m;[m[38;53H[K[38;51H[106m)[m;[51;84H1[38;51H[?25h[?25l[106m,[m );, [106m)[m[51;84H3[38;53H[?25h[?25l[106ma[m);a[106m)[m[51;84H4[38;54H[?25h[?25l[106mr[m);r[106m)[m[51;84H5[38;55H[?25h[?25l[106mg[m);g[106m)[m[51;84H6[38;56H[?25h[?25l[34;5H[106m{[37;5H}[m[38;11H([44C)[51;81H2,6 [37;6H[?25h[?25l[34;5H{[37;5H}[38;11H[106m([44C)[m[51;81H3,56[38;56H[?25h[?25l[34;5H[106m{[37;5H}[m[38;11H([44C)[51;81H2,6 [37;6H[?25h[?25l[34;5H{[37;5H}[38;11H[106m([44C)[m[51;81H3,56[38;56H[?25h[?25l[38;11H([44C)[51;84H5[38;55H[?25h[?25l[51;84H4[38;54H[?25h[?25l[51;84H3[38;53H[?25h[?25l[51;84H2[38;52H[?25h[?25l[106m()[m[51;84H1[38;51H[?25h[?25l[51;84H0[38;50H[?25h[?25l[51;83H49[38;49H[?25h[?25l()[51;84H8[38;48H[?25h[?25l[51;84H7[38;47H[?25h[?25l[51;84H6[38;46H[?25h[?25l[51;84H5[38;45H[?25h[?25l[51;84H4[38;44H[?25h[?25l[51;84H3[38;43H[?25h[?25l[51;84H2[38;42H[?25h[?25l[51;84H1[38;41H[?25h[?25l[51;84H0[38;40H[?25h[?25l[51;83H39[38;39H[?25h[?25l[51;84H8[38;38H[?25h[?25l[51;84H7[38;37H[?25h[?25l[51;84H6[38;36H[?25h[?25l[51;84H5[38;35H[?25h[?25l[51;84H4[38;34H[?25h[?25l[51;84H3[38;33H[?25h[?25l[51;84H2[38;32H[?25h[?25l[51;84H1[38;31H[?25h[?25l[51;84H0[38;30H[?25h[?25l[51;83H29[38;29H[?25h[?25l[51;84H8[38;28H[?25h[?25l[51;84H7[38;27H[?25h[?25l[51;84H6[38;26H[?25h[?25l[106m[[1C][m[51;84H5[38;25H[?25h[?25l[51;84H4[38;24H[?25h[?25l[51;84H3[38;23H[?25h[?25l[51;84H2[38;22H[?25h[?25l[[1C][51;84H1[38;21H[?25h[?25l[51;84H0[38;20H[?25h[?25l[51;83H19[38;19H[?25h[?25l[51;84H8[38;18H[?25h[?25l[51;84H7[38;17H[?25h[?25l[51;84H6[38;16H[?25h[?25l[51;84H5[38;15H[?25h[?25l[51;84H4[38;14H[?25h[?25l[51;84H3[38;13H[?25h[?25l[106m([44C)[m[51;84H2[38;12H[?25h[?25l([44C)[51;81H4[39;12H[?25h[?25l[38;11H[106m([44C)[m[51;81H3[38;12H[?25h[51;1H[K[38;11H[?25l[51;70H^[[38;11H[51;70H  [38;12H[51;80H53,11[9C22%[38;11H[?25h[?25l[51;70HV[38;11H[51;70H1[38;11H[47m    loopFn[1CfixedArray[[m[31m[47m0[m[47m], fixedArray + ints.size(), arg); [m[51;1H[1m-- VISUAL LINE --[m[51;70H[K[51;70H1[38;11H[51;80H53,11[9C22%[38;11H[?25h[?25l[51;70Hy[38;11H[51;70H [38;1H    loopFn(fixedArray[[31m0[m], fixedArray + ints.size(), arg);[38;58H[K[51;1H[K[51;80H53,1[10C22%[38;1H[?25h[?25l[51;70H~@k[38;1H[51;70H   [39;1H[51;81H4[39;1H[?25h[?25l[51;70H~@k[39;1H[51;70H   [39;2H[51;83H2[39;2H[?25h[?25l[51;70H~@k[39;2H[51;70H   [39;3H[51;83H3[39;3H[?25h[?25l[51;70H~@k[39;3H[51;70H   [39;4H[51;83H4[39;4H[?25h[?25l[51;70H~@k[39;4H[51;70H   [39;5H[51;83H5[39;5H[?25h[?25l[51;70H~@k[39;5H[51;70H   [39;6H[51;83H6[39;6H[?25h[?25l[51;70H~@k[39;6H[51;70H   [39;7H[51;83H7[39;7H[?25h[?25l[51;70H~@k[39;7H[51;70H   [39;8H[51;83H8[39;8H[?25h[?25l[51;70H~@k[39;8H[51;70H   [39;9H[51;83H9[39;9H[?25h[?25l[51;70H~@k[39;9H[51;70H   [39;10H[51;83H10[39;10H[?25h[?25l[51;70H~@k[39;10H[51;70H   [39;11H[51;84H1[39;11H[?25h[?25l[51;70H~@k[39;11H[51;70H   [39;12H[51;84H2[39;12H[?25h[?25l[51;70H~@k[39;12H[51;70H   [39;13H[106m()[m[51;84H3[39;13H[?25h[?25l[51;70H~@k[39;13H[51;70H   [39;14H[51;84H4[39;14H[?25h[?25l[51;70H~@k[39;14H[51;70H   [39;15H()[51;84H5[39;15H[?25h[?25l[51;70H~@k[39;15H[51;70H   [39;15H[?25h[?25l[51;70H~@k[39;15H[51;70H   [39;15H[?25h[?25l[51;70H~@k[39;15H[51;70H   [39;15H[?25h[?25l[51;70Hp[39;15H[51;70H [40;5H[40;50r[40;1H[L[1;51r[40;5HloopFn(fixedArray[[31m0[m], fixedArray + ints.size(), arg);[51;80H[K[51;80H55,5[10C22%[40;5H[?25h[?25l[51;70H~@k[40;5H[51;70H   [39;5H[51;81H4[39;5H[?25h[?25l[51;70Hd[39;5H[?25h[?25l[51;71Hd[39;5H[51;70H  [39;5H[39;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H54,5[10C22%[39;5H[?25h[?25l[51;70Hi[39;5H[51;70H [39;5H[51;1H[1m-- INSERT --[m[51;80H[K[51;80H54,5[10C22%[39;5H[?25h[?25l[51;83H6[39;6H[?25h[?25l[51;83H7[39;7H[?25h[?25l[51;83H8[39;8H[?25h[?25l[51;83H7[39;7H[?25h[?25l[51;83H6[39;6H[?25h[?25l[51;83H5[39;5H[?25h[?25lnloopFn(fixedArray[[31m0[m], fixedArray + ints.size(), arg);[51;83H6[39;6H[?25h[?25loloopFn(fixedArray[[31m0[m], fixedArray + ints.size(), arg);[51;83H7[39;7H[?25h[?25lLloopFn(fixedArray[[31m0[m], fixedArray + ints.size(), arg);[51;83H8[39;8H[?25h[?25l[51;83H9[39;9H[?25h[?25loopFn(fixedArray[[31m0[m], fixedArray + ints.size(), arg);[39;60H[K[51;83H8[39;8H[?25h[?25l[51;81H3[38;8H[?25h[?25l[51;81H4[39;8H[?25h[?25l[51;83H9[39;9H[?25h[?25l[51;83H10[39;10H[?25h[?25l[51;84H1[39;11H[?25h[?25l[51;84H2[39;12H[?25h[?25ln[106m([44C)[m[51;84H3[39;13H[?25h[?25l([44C)[51;84H5[39;15H[?25h[?25l[51;84H6[39;16H[?25h[?25l[51;84H7[39;17H[?25h[?25l[51;84H8[39;18H[?25h[?25l[51;84H9[39;19H[?25h[?25l[51;83H20[39;20H[?25h[?25l[51;84H1[39;21H[?25h[?25l[51;84H2[39;22H[?25h[?25l[51;84H3[39;23H[?25h[?25ly[106m[[1C][m[51;84H4[39;24H[?25h[?25l[51;84H5[39;25H[?25h[?25l[51;84H6[39;26H[?25h[?25l[51;84H7[39;27H[?25h[?25l[[1C][51;84H8[39;28H[?25h[?25l[51;84H9[39;29H[?25h[?25l[51;83H30[39;30H[?25h[?25l[51;84H1[39;31H[?25h[?25l[51;84H2[39;32H[?25h[?25l[51;84H3[39;33H[?25h[?25l[51;84H4[39;34H[?25h[?25l[51;84H5[39;35H[?25h[?25l[51;84H6[39;36H[?25h[?25l[51;84H7[39;37H[?25h[?25l[51;84H8[39;38H[?25h[?25l[51;84H9[39;39H[?25h[?25l[51;83H40[39;40H[?25h[?25l[51;84H1[39;41H[?25h[?25l[51;84H2[39;42H[?25h[?25l[51;84H3[39;43H[?25h[?25l[51;84H4[39;44H[?25h[?25l[51;84H5[39;45H[?25h[?25l[51;84H6[39;46H[?25h[?25l[51;84H7[39;47H[?25h[?25l[51;84H8[39;48H[?25h[51;1H[K[39;47H[?25l[51;70H^[[39;47H[51;70H  [39;48H[51;80H54,47[9C22%[39;47H[?25h[?25l[51;70HZ[39;47H[?25h[?25l[51;71HZ[39;47H[?1000l[?2004l[51;1H"main.cc"[51;70H[K[51;11H116L, 3189C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/1-out$ make -f ../Makefile 
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
[01m[Kmain.cc:[m[K In function ‘[01m[Kvoid go(std::__cxx11::string, std::vector<int>, int)[m[K’:
[01m[Kmain.cc:53:12:[m[K [01;31m[Kerror: [m[K‘[01m[KfixedArray[m[K’ was not declared in this scope
     loopFn([01;31m[KfixedArray[m[K[0], fixedArray + ints.size(), arg);
            [01;31m[K^~~~~~~~~~[m[K
[01m[Kmain.cc:53:12:[m[K [01;36m[Knote: [m[Ksuggested alternative: ‘[01m[KfixedArr[m[K’
     loopFn([01;36m[KfixedArray[m[K[0], fixedArray + ints.size(), arg);
            [01;36m[K^~~~~~~~~~[m[K
            [32m[KfixedArr[m[K
make: *** [../Makefile:48: main.o] Error 1
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ make -f ../Makefile [8Pvim main.cc[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 116L, 3189C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"out.hh"[m

[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream fstream;
  [38;5;130mif[m (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  [38;5;130mif[m (!in) {
    [38;5;130mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[22;33H[31m": "[m + std::strerror(errno));
  }
  [34m//construct a vector from an istream_iterator on istream in.
[m  [34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[27;25Hstd::istream_iterator<[32mint[m>());
  [34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}


[32mstatic[m [32mvoid[m
go(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {
    [32mint[m fixedArr[ints.size()];
    [32mint[m i = [31m0[m;
    [38;5;130mfor[m([32mauto[m x : ints)
    {[41;13HfixedArr[i] = x;[42;13Hi++;
    }
    loopFn(fixedArray[[31m0[m], fixedArray + ints.size(), arg);
    noLoopFn(fixedArray[[31m0[m], fixedArray + ints.size(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"deque"[m) {
    std::deque<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);[51;80H54,47[9C13%[45;47H[?25h[?25l[51;70H~@k[45;47H[51;70H   [45;3H[1;50r[50;1H
[1;51r[35;30H[106m{[45;3H}[m[50;3H}[51;1H[K[51;80H55,3[10C15%[45;3H[?25h[?25l[51;70H~@k[45;3H[51;70H   [45;38H[1;50r[50;1H
[1;51r[34;30H{[44;3H}[45;38H[106m{[49;3H}[m
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {[51;80H[K[51;80H56,38[9C16%[45;38H[?25h[?25l[51;70H~@k[45;38H[51;70H   [45;47H[1;50r[50;1H
[1;51r[44;38H{[48;3H}[50;5Hstd::forward_list<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H57,47[9C18%[45;47H[?25h[?25l[51;70H~@k[45;47H[51;70H   [45;47H[1;50r[50;1H
[1;51r[50;5HloopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H58,47[9C19%[45;47H[?25h[?25l[51;70H~@k[45;47H[51;70H   [45;47H[1;50r[50;1H
[1;51r[45;46H[106m()[m[50;5HnoLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H59,47[9C21%[45;47H[?25h[?25l[51;70H~@k[45;47H[51;70H   [44;47H[45;46H()[51;81H8[44;47H[?25h[?25l[51;70H~@k[44;47H[51;70H   [43;47H[51;81H7[43;47H[?25h[?25l[51;70H~@k[43;47H[51;70H   [42;38H[106m{[46;3H}[m[51;81H6,38[42;38H[?25h[?25l[51;70H~@k[42;38H[51;70H   [41;3H[31;30H[106m{[41;3H}[m[42;38H{[46;3H}[51;81H5,3 [41;3H[?25h[?25l[51;70H~@k[41;3H[51;70H   [40;47H[31;30H{[41;3H}[51;81H4,47[40;47H[?25h[?25l[51;70H~@k[40;47H[51;70H   [39;47H[51;81H3[39;47H[?25h[?25l[51;70H~@k[39;47H[51;70H   [38;5H[35;5H[106m{[38;5H}[m[51;81H2,5 [38;5H[?25h[?25l[51;70H~@k[38;5H[51;70H   [38;4H[35;5H{[38;5H}[51;83H4[38;4H[?25h[?25l[51;70H~@k[38;4H[51;70H   [39;4H[51;81H3[39;4H[?25h[?25l[51;70H~@k[39;4H[51;70H   [40;4H[51;81H4[40;4H[?25h[?25l[51;70H~@k[40;4H[51;70H   [40;5H[51;83H5[40;5H[?25h[?25l[51;70H~@k[40;5H[51;70H   [40;6H[51;83H6[40;6H[?25h[?25l[51;83H7[40;7H[?25h[?25l[51;83H8[40;8H[?25h[?25l[51;83H9[40;9H[?25h[?25l[51;83H10[40;10H[?25h[?25l[51;84H1[40;11H[?25h[?25l[51;84H2[40;12H[?25h[?25ln[106m([44C)[m[51;84H3[40;13H[?25h[?25l([44C)[51;84H4[40;14H[?25h[?25l[51;84H5[40;15H[?25h[?25l[51;84H6[40;16H[?25h[?25l[51;84H7[40;17H[?25h[?25l[51;84H8[40;18H[?25h[?25l[51;84H9[40;19H[?25h[?25l[51;83H20[40;20H[?25h[?25l[51;70H~@k[40;20H[51;70H   [40;21H[51;84H1[40;21H[?25h[?25l[51;70H~@k[40;21H[51;70H   [40;22H[51;84H2[40;22H[?25h[?25l[51;70H~@k[40;22H[51;70H   [40;23H[51;84H3[40;23H[?25h[?25l[51;70Hi[40;23H[51;70H [40;23H[51;1H[1m-- INSERT --[m[51;80H[K[51;80H54,23[9C21%[40;23H[?25h[?25ly[106m[[1C][m[51;84H4[40;24H[?25h[?25l[[31m[106m0[m][106m,[m fixedArray + ints.size(), arg);[40;59H[K[40;23H[106m[[m[31m0[m[106m][m,[51;84H3[40;23H[?25h[?25l[[31m[106m0[m][106m,[m fixedArray + ints.size(), arg);[40;58H[K[40;22H[106m[[m[31m0[m[106m][m,[51;84H2[40;22H[?25h[?25l[39;22H[106m[[1C][m[40;22H[[1C][51;81H3[39;22H[?25h[?25l[[1C][51;84H1[39;21H[?25h[?25ly[106m[[1C][m[51;84H2[39;22H[?25h[?25l[[31m0[m[106m][m,[106m [mfixedArray + ints.size(), arg);[39;56H[K[39;20H[106m[[m[3C [51;84H0[39;20H[?25h[?25l[35;5H[106m{[38;5H}[m[39;20H[[1C][51;81H2,6 [38;6H[?25h[?25l[35;5H{[38;5H}[51;81H1,10-17[37;17H[?25h[?25l[35;5H[106m{[38;5H}[m[51;81H2,6    [38;6H[?25h[?25l[35;5H{[38;5H}[39;20H[106m[[1C][m[51;81H3,20[39;20H[?25h[51;1H[K[39;19H[?25l[51;70H^[[39;19H[51;70H  [39;20H[[1C][51;80H53,19[9C21%[39;19H[?25h[?25l[51;70HZ[39;19H[?25h[?25l[51;71HZ[39;19H[?1000l[?2004l[51;1H"main.cc"[51;70H[K[51;11H116L, 3185C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/1-out$ vim main.cc [8@make -f ../Makefile[C
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
[01m[Kmain.cc:[m[K In function ‘[01m[Kvoid go(std::__cxx11::string, std::vector<int>, int)[m[K’:
[01m[Kmain.cc:53:25:[m[K [01;31m[Kerror: [m[K‘[01m[KfixedArray[m[K’ was not declared in this scope
     loopFn(fixedArr[0], [01;31m[KfixedArray[m[K + ints.size(), arg);
                         [01;31m[K^~~~~~~~~~[m[K
[01m[Kmain.cc:53:25:[m[K [01;36m[Knote: [m[Ksuggested alternative: ‘[01m[KfixedArr[m[K’
     loopFn(fixedArr[0], [01;36m[KfixedArray[m[K + ints.size(), arg);
                         [01;36m[K^~~~~~~~~~[m[K
                         [32m[KfixedArr[m[K
make: *** [../Makefile:48: main.o] Error 1
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ make -f ../Makefile [8Pvim main.cc[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 116L, 3185C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<forward_list>[m
[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"out.hh"[m

[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream fstream;
  [38;5;130mif[m (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  [38;5;130mif[m (!in) {
    [38;5;130mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[23;33H[31m": "[m + std::strerror(errno));
  }
  [34m//construct a vector from an istream_iterator on istream in.
[m  [34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[28;25Hstd::istream_iterator<[32mint[m>());
  [34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}


[32mstatic[m [32mvoid[m
go(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {
    [32mint[m fixedArr[ints.size()];
    [32mint[m i = [31m0[m;
    [38;5;130mfor[m([32mauto[m x : ints)
    {[42;13HfixedArr[i] = x;[43;13Hi++;
    }
    loopFn(fixedArr[[31m0[m], fixedArray + ints.size(), arg);
    noLoopFn(fixedArr[[31m0[m], fixedArray + ints.size(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"deque"[m) {
    std::deque<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);[51;80H53,19[9C12%[45;19H[?25h[?25l[51;70H~@k[45;19H[51;70H   [45;19H[1;50r[50;1H
[1;51r[50;5HnoLoopFn(container.begin(), container.end(), arg);[51;1H[K[51;80H54,19[9C13%[45;19H[?25h[?25l[51;70H~@k[45;19H[51;70H   [45;3H[1;50r[50;1H
[1;51r[35;30H[106m{[45;3H}[m[50;3H}[51;80H[K[51;80H55,3[10C15%[45;3H[?25h[?25l[51;70H~@k[45;3H[51;70H   [45;19H[1;50r[50;1H
[1;51r[34;30H{[44;3H}[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {[51;80H[K[51;80H56,19[9C16%[45;19H[?25h[?25l[51;70H~@k[45;19H[51;70H   [45;19H[1;50r[50;1H
[1;51r[50;5Hstd::forward_list<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H57,19[9C18%[45;19H[?25h[?25l[51;70H~@k[45;19H[51;70H   [44;19H[51;81H6[44;19H[?25h[?25l[51;70H~@k[44;19H[51;70H   [43;3H[33;30H[106m{[43;3H}[m[51;81H5,3 [43;3H[?25h[?25l[51;70H~@k[43;3H[51;70H   [42;19H[33;30H{[43;3H}[51;81H4,19[42;19H[?25h[?25l[51;70H~@k[42;19H[51;70H   [41;19H[51;81H3[41;19H[?25h[?25l[51;70H~@k[41;19H[51;70H   [41;20H[106m[[1C][m[51;83H20[41;20H[?25h[?25l[51;70H~@k[41;20H[51;70H   [41;21H[[1C][51;84H1[41;21H[?25h[?25l[51;70H~@k[41;21H[51;70H   [41;22H[106m[[1C][m[51;84H2[41;22H[?25h[?25l[51;70H~@k[41;22H[51;70H   [41;23H[[1C][51;84H3[41;23H[?25h[?25l[51;70H~@k[41;23H[51;70H   [41;24H[51;84H4[41;24H[?25h[?25l[51;70H~@k[41;24H[51;70H   [41;25H[51;84H5[41;25H[?25h[?25l[51;70H~@k[41;25H[51;70H   [41;26H[51;84H6[41;26H[?25h[?25l[51;70H~@k[41;26H[51;70H   [41;27H[51;84H7[41;27H[?25h[?25l[51;84H8[41;28H[?25h[?25l[51;84H9[41;29H[?25h[?25l[51;83H30[41;30H[?25h[?25l[51;84H1[41;31H[?25h[?25l[51;84H2[41;32H[?25h[?25l[51;70H~@k[41;32H[51;70H   [41;33H[51;84H3[41;33H[?25h[?25l[51;70Hi[41;33H[51;70H [41;33H[51;1H[1m-- INSERT --[m[51;80H[K[51;80H53,33[9C18%[41;33H[?25h[?25l[51;84H4[41;34H[?25h[?25l[51;84H5[41;35H[?25h[?25l + ints.size(), arg);[41;55H[K[51;84H4[41;34H[?25h[?25l + ints.size(), arg);[41;54H[K[51;84H3[41;33H[?25h[?25l[51;81H4[42;33H[?25h[?25l[51;84H7[42;37H[?25h[?25l + ints.size(), arg);[42;57H[K[51;84H6[42;36H[?25h[?25l + ints.size(), arg);[42;56H[K[51;84H5[42;35H[?25h[51;1H[K[42;34H[?25l[51;70H^[[42;34H[51;70H  [42;35H[51;80H54,34[9C18%[42;34H[?25h[?25l[51;70HZ[42;34H[?25h[?25l[51;71HZ[42;34H[?1000l[?2004l[51;1H"main.cc"[51;70H[K[51;11H116L, 3181C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/1-out$ vim main.cc [8@make -f ../Makefile[C
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
[01m[Kmain.cc:[m[K In function ‘[01m[Kvoid go(std::__cxx11::string, std::vector<int>, int)[m[K’:
[01m[Kmain.cc:53:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to ‘[01m[KloopFn(int&, int*, int&)[m[K’
     loopFn(fixedArr[0], fixedArr + ints.size(), arg[01;31m[K)[m[K;
                                                    [01;31m[K^[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kout.hh:14:6:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Ktemplate<class Iterator> void loopFn(Iterator, Iterator, int)[m[K’
 void [01;36m[KloopFn[m[K(Iterator begin, Iterator end, int arg) {
      [01;36m[K^~~~~~[m[K
[01m[Kout.hh:14:6:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kmain.cc:53:52:[m[K [01;36m[Knote: [m[K  deduced conflicting types for parameter ‘[01m[KIterator[m[K’ (‘[01m[Kint[m[K’ and ‘[01m[Kint*[m[K’)
     loopFn(fixedArr[0], fixedArr + ints.size(), arg[01;36m[K)[m[K;
                                                    [01;36m[K^[m[K
[01m[Kmain.cc:54:54:[m[K [01;31m[Kerror: [m[Kno matching function for call to ‘[01m[KnoLoopFn(int&, int*, int&)[m[K’
     noLoopFn(fixedArr[0], fixedArr + ints.size(), arg[01;31m[K)[m[K;
                                                      [01;31m[K^[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kout.hh:25:6:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Ktemplate<class Iterator> void noLoopFn(Iterator, Iterator, int)[m[K’
 void [01;36m[KnoLoopFn[m[K(Iterator begin, Iterator end, int arg) {
      [01;36m[K^~~~~~~~[m[K
[01m[Kout.hh:25:6:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kmain.cc:54:54:[m[K [01;36m[Knote: [m[K  deduced conflicting types for parameter ‘[01m[KIterator[m[K’ (‘[01m[Kint[m[K’ and ‘[01m[Kint*[m[K’)
     noLoopFn(fixedArr[0], fixedArr + ints.size(), arg[01;36m[K)[m[K;
                                                      [01;36m[K^[m[K
make: *** [../Makefile:48: main.o] Error 1
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ make -f ../Makefile [8Pvim main.cc[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 116L, 3181C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"out.hh"[m

[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream fstream;
  [38;5;130mif[m (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  [38;5;130mif[m (!in) {
    [38;5;130mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[22;33H[31m": "[m + std::strerror(errno));
  }
  [34m//construct a vector from an istream_iterator on istream in.
[m  [34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[27;25Hstd::istream_iterator<[32mint[m>());
  [34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}


[32mstatic[m [32mvoid[m
go(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {
    [32mint[m fixedArr[ints.size()];
    [32mint[m i = [31m0[m;
    [38;5;130mfor[m([32mauto[m x : ints)
    {[41;13HfixedArr[i] = x;[42;13Hi++;
    }
    loopFn(fixedArr[[31m0[m], fixedArr + ints.size(), arg);
    noLoopFn(fixedArr[[31m0[m], fixedArr + ints.size(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"deque"[m) {
    std::deque<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);[51;80H54,34[9C13%[45;34H[?25h[?25l[51;70H~@k[45;34H[51;70H   [45;3H[1;50r[50;1H
[1;51r[35;30H[106m{[45;3H}[m[50;3H}[51;1H[K[51;80H55,3[10C15%[45;3H[?25h[?25l[51;70H~@k[45;3H[51;70H   [44;34H[35;30H{[45;3H}[51;81H4,34[44;34H[?25h[?25l[51;70H~@k[44;34H[51;70H   [44;33H[51;84H3[44;33H[?25h[?25l[51;84H2[44;32H[?25h[?25l[51;84H1[44;31H[?25h[?25l[51;84H0[44;30H[?25h[?25l[51;83H29[44;29H[?25h[?25l[51;84H8[44;28H[?25h[?25l[51;70H~@k[44;28H[51;70H   [44;27H[51;84H7[44;27H[?25h[?25l[51;84H6[44;26H[?25h[?25l[51;84H5[44;25H[?25h[?25l[106m[[1C][m[51;84H4[44;24H[?25h[?25l[[1C][51;84H3[44;23H[?25h[?25l[106m[[1C][m[51;84H2[44;22H[?25h[?25l[[1C][51;84H1[44;21H[?25h[?25l[51;70Hi[44;21H[51;70H [44;21H[51;1H[1m-- INSERT --[m[51;80H[K[51;80H54,21[9C15%[44;21H[?25h[?25lr[106m[[1C][m[51;84H2[44;22H[?25h[?25l[51;84H4[44;24H[?25h[?25l[51;84H5[44;25H[?25h[?25l[106m,[m fixedArr + ints.size(), arg[97m[101m);[m[44;55H[K[45;3H[97m[101m}[46;38H{[47;56H;[48;52H;[49;54H;
[m  [97m[101m}[m[44;22H[[1C,[51;84H4[44;24H[?25h[?25l, fixedArr + ints.size(), arg[97m[101m);[m[44;54H[K[51;84H3[44;23H[?25h[?25l, fixedArr + ints.size(), arg);[44;53H[K[45;3H}[46;38H{[47;56H;[48;52H;[49;54H;
  }[51;84H2[44;22H[?25h[?25l[43;20H[106m[[1C][m[51;81H3[43;22H[?25h[?25l[51;84H3[43;23H[?25h[?25l[106m,[m fixedArr + ints.size(), arg[97m[101m);[m[43;53H[K[44;52H[97m[101m;
[m  [97m[101m}[46;38H{[47;56H;[48;52H;[49;54H;
[m  [97m[101m}[m[43;20H[[1C,[51;84H2[43;22H[?25h[?25l, fixedArr + ints.size(), arg[97m[101m);[m[43;52H[K[51;84H1[43;21H[?25h[?25l, fixedArr + ints.size(), arg);[43;51H[K[44;52H;
  }[46;38H{[47;56H;[48;52H;[49;54H;
  }[51;84H0[43;20H[?25h[51;1H[K[43;19H[?25l[51;70H^[[43;19H[51;70H  [43;20H[51;80H53,19[9C15%[43;19H[?25h[?25l[51;70HZ[43;19H[?25h[?25l[51;71HZ[43;19H[?1000l[?2004l[51;1H"main.cc"[51;70H[K[51;11H116L, 3175C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/1-out$ vim main.cc [8@make -f ../Makefile[C
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main main.o; do echo $t >>.gitignore; done
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ make -f ../Makefile [8Pvim main.cc[C[8@make -f ../Makefile[C[8Pvim main.cc[C[8@make -f ../Makefile[C[8Pvim main.cc[C[8@make -f ../Makefile[C[8Pvim main.cc[C[15@./main vector ../test.data[Cls[Kcat out.hh [15@./main deque ../test.data[C[1@vector[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3Pset[C[C[C[C[C[C[C[C[C[C[C[C[C[C[5@multi[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Plis[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@multise[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[ 11 12 22 22 42 43 56 64 ]
[ 11 12 22 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main multiset ../test.data [1P[1P[1P[1P[1P[1P[1P[1P[1@[
unknown container [
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main [ ../test.data [1@]
[ 22 43 12 56 64 42 11 22 ]
[ 22 43 12 56 64 42 11 22 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main [] ../test.data [C[1P[1P[1@c[1@v[1@e[1P[1P[1P[1@v[1@e[1@c[1@t[1@o[1@r
[ 22 43 12 56 64 42 11 22 ]
[ 22 43 12 56 64 42 11 22 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ls
main  main.cc  main.o  out.hh
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cd ..
tman1@remote00:~/i240b/submit/lab7/exercises$ sl
bash: sl: command not found
tman1@remote00:~/i240b/submit/lab7/exercises$ cd [K[K[Kls
1-out  2-find  3-sort  4-rm  Makefile  test.data
tman1@remote00:~/i240b/submit/lab7/exercises$ cd 2-find/
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ls
find.hh
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ddd[K[K[Kcat find.hh [K[K[K[K[K[K[K[K[K[K[K[Kcp ../
1-out/     2-find/    3-sort/    4-rm/      Makefile   test.data  
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ cp ../
1-out/     2-find/    3-sort/    4-rm/      Makefile   test.data  
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ cp ../1-out/
.deps/      .gitignore  main        main.cc     main.o      out.hh      
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ cp ../1-out/main.cc ../1-out/out.hh .
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ l
bash: l: command not found
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ sls
bash: sls: command not found
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ls
find.hh  main.cc  out.hh
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ cat find[K[K[K[K[K[K[K[Krm out.hh 
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim main.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 116L, 3175C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<iterator>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<utility>[m

[35m#include [m[31m<deque>[m
[35m#include [m[31m<forward_list>[m
[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"out.hh"[m

[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream fstream;
  [38;5;130mif[m (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  [38;5;130mif[m (!in) {
    [38;5;130mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[31;33H[31m": "[m + std::strerror(errno));
  }
  [34m//construct a vector from an istream_iterator on istream in.
[m  [34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[36;25Hstd::istream_iterator<[32mint[m>());
  [34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}


[32mstatic[m [32mvoid[m
go(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {
    [32mint[m fixedArr[ints.size()];
    [32mint[m i = [31m0[m;
    [38;5;130mfor[m([32mauto[m x : ints)
    {[50;13HfixedArr[i] = x;[51;80H1,1[11CTop[1;1H[?25h[?25l[51;70H~@k[1;1H[51;70H   [2;1H[51;80H2[2;1H[?25h[?25l[51;70H~@k[2;1H[51;70H   [3;1H[51;80H3[3;1H[?25h[?25l[51;70H~@k[3;1H[51;70H   [4;1H[51;80H4[4;1H[?25h[?25l[51;70H~@k[4;1H[51;70H   [5;1H[51;80H5[5;1H[?25h[?25l[51;70H~@k[5;1H[51;70H   [6;1H[51;80H6[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [7;1H[51;80H7,0-1[7;1H[?25h[?25l[51;70H~@k[7;1H[51;70H   [8;1H[51;80H8,1  [8;1H[?25h[?25l[51;70H~@k[8;1H[51;70H   [9;1H[51;80H9[9;1H[?25h[?25l[51;80H10,1[10;1H[?25h[?25l[51;81H1[11;1H[?25h[?25l[51;81H2[12;1H[?25h[?25l[51;81H3,0-1[13;1H[?25h[?25l[51;81H4,1  [14;1H[?25h[?25l[51;81H5[15;1H[?25h[?25l[51;81H6,0-1[16;1H[?25h[?25l[51;81H7,1  [17;1H[?25h[?25l[51;81H8,0-1[18;1H[?25h[?25l[51;81H9,1  [19;1H[?25h[?25l[51;70H~@k[19;1H[51;70H   [20;1H[51;80H20[20;1H[?25h[?25l[51;70H~@k[20;1H[51;70H   [19;1H[51;80H19[19;1H[?25h[?25l[51;70H~@k[19;1H[51;70H   [18;1H[51;81H8,0-1[18;1H[?25h[?25l[51;70H~@k[18;1H[51;70H   [17;1H[51;81H7,1  [17;1H[?25h[?25l[51;70Hi[17;1H[51;70H [17;1H[51;1H[1m-- INSERT --[m[51;13H[K[51;80H17,1[10CTop[17;1H[?25h[?25l[51;83H2[17;2H[?25h[?25l[51;83H3[17;3H[?25h[?25l[51;83H4[17;4H[?25h[?25l[51;83H5[17;5H[?25h[?25l[51;83H6[17;6H[?25h[?25l[51;83H7[17;7H[?25h[?25l[51;83H8[17;8H[?25h[?25l[51;83H9[17;9H[?25h[?25l[51;83H10[17;10H[?25h[?25l[51;84H1[17;11H[?25h[?25l[51;84H2[17;12H[?25h[?25l[51;84H3[17;13H[?25h[?25l[51;84H4[17;14H[?25h[?25l[31m.hh"[m[17;17H[K[51;84H3[17;13H[?25h[?25l[31m.hh"[m[17;16H[K[51;84H2[17;12H[?25h[?25l[31m.hh"[m[17;15H[K[51;84H1[17;11H[?25h[?25l[31mf.hh"[m[51;84H2[17;12H[?25h[?25l[31mi.hh"[m[51;84H3[17;13H[?25h[?25l[31mnd.hh"[m[51;84H5[17;15H[?25h[51;1H[K[17;14H[?25l[51;70H^[[17;14H[51;70H  [17;15H[51;80H17,14[9CTop[17;14H[?25h[?25l[51;70HZ[17;14H[?25h[?25l[51;71HZ[17;14H[?1000l[?2004l[51;1H"main.cc"[51;70H[K[51;11H116L, 3176C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim find.hh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"find.hh" 20L, 434C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef OUT_HH_
#define OUT_HH_

#include [m[31m<vector>[m

[34m/** Output a line containing [m[31m"FOUND"[m[34m if arg is found in [begin, end),
 *  otherwise output [m[31m"NOT FOUND"[m[34m..
 */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m loopFn(Iterator begin, Iterator end, [32mint[m arg) {
  [34m//@[m[30m[103mTODO[m
}

[34m/** Exactly like loopFn() but no loops should be used */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m noLoopFn(Iterator begin, Iterator end, [32mint[m arg) {
  [34m//@[m[30m[103mTODO[m
}

[35m#endif[m [34m//ifndef OUT_HH_[m
[94m~                                                                                                [22;1H~                                                                                                [23;1H~                                                                                                [24;1H~                                                                                                [25;1H~                                                                                                [26;1H~                                                                                                [27;1H~                                                                                                [28;1H~                                                                                                [29;1H~                                                                                                [30;1H~                                                                                                [31;1H~                                                                                                [32;1H~                                                                                                [33;1H~                                                                                                [34;1H~                                                                                                [35;1H~                                                                                                [36;1H~                                                                                                [37;1H~                                                                                                [38;1H~                                                                                                [39;1H~                                                                                                [40;1H~                                                                                                [41;1H~                                                                                                [42;1H~                                                                                                [43;1H~                                                                                                [44;1H~                                                                                                [45;1H~                                                                                                [46;1H~                                                                                                [47;1H~                                                                                                [48;1H~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H1,1[11CAll[1;1H[?25h[?25l[51;70HZ[1;1H[?25h[?25l[51;71HZ[1;1H[51;1H[?1000l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[51;1H[K[51;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/2-find$ cat find.hh 
#ifndef OUT_HH_
#define OUT_HH_

#include <vector>

/** Output a line containing "FOUND" if arg is found in [begin, end),
 *  otherwise output "NOT FOUND"..
 */
template <typename Iterator>
void loopFn(Iterator begin, Iterator end, int arg) {
  //@TODO
}

/** Exactly like loopFn() but no loops should be used */
template <typename Iterator>
void noLoopFn(Iterator begin, Iterator end, int arg) {
  //@TODO
}

#endif //ifndef OUT_HH_
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ cat main.cc 
#include <algorithm>
#include <fstream>
#include <iostream>
#include <iterator>
#include <string>
#include <utility>

#include <deque>
#include <forward_list>
#include <list>
#include <set>
#include <vector>

#include <cstdlib>
#include <cstring>

#include "find.hh"

/** Return vector of int's read from filePath.  If filePath is
 *  "-" read from stdin.
 */
static std::vector<int>
readIntsFromFile(const std::string filePath)
{
  bool isStdin = filePath == "-";
  std::ifstream fstream;
  if (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  if (!in) {
    throw std::invalid_argument(std::string("cannot read ") + filePath +
				": " + std::strerror(errno));
  }
  //construct a vector from an istream_iterator on istream in.
  //The two arguments give the begin and end of the iterator.
  std::vector<int> ints((std::istream_iterator<int>(in)),
			std::istream_iterator<int>());
  //no in.close(); depend on RAII
  return ints;
}


static void
go(std::string containerSpec, std::vector<int> ints, int arg)
{
  if (containerSpec == "[]") {
    int fixedArr[ints.size()];
    int i = 0;
    for(auto x : ints)
    {
	    fixedArr[i] = x;
	    i++;
    }
    loopFn(fixedArr, fixedArr + ints.size(), arg);
    noLoopFn(fixedArr, fixedArr + ints.size(), arg);
  }
  else if (containerSpec == "deque") {
    std::deque<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "forward_list") {
    std::forward_list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "list") {
    std::list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "multiset") {
    std::multiset<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "set") {
    std::set<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "vector") {
    loopFn(ints.begin(), ints.end(), arg);
    noLoopFn(ints.begin(), ints.end(), arg);
  }
  else {
    std::cerr << "unknown container " << containerSpec << std::endl;
    std::exit(1);
  }
}

static void
usage(std::string progName) {
  std::cerr << "usage: "
	    << progName
	    << " CONTAINER_SPEC INTS_DATA_FILE [INT]"
	    << std::endl;
  std::exit(1);
}


int
main(int argc, char* argv[])
{
  try {
    if (argc != 3 && argc != 4) usage(argv[0]);
    const std::string containerSpec(argv[1]);
    const std::string filePath(argv[2]);
    std::vector<int> ints = readIntsFromFile(filePath);
    const int arg = (argc == 4) ? atoi(argv[3]) : 0;
    go(containerSpec, ints, arg);
  }
  catch (const std::exception& err) {
    std::cerr << err.what() << std::endl;
  }

}
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ cat main.cc find.hh[C
#ifndef OUT_HH_
#define OUT_HH_

#include <vector>

/** Output a line containing "FOUND" if arg is found in [begin, end),
 *  otherwise output "NOT FOUND"..
 */
template <typename Iterator>
void loopFn(Iterator begin, Iterator end, int arg) {
  //@TODO
}

/** Exactly like loopFn() but no loops should be used */
template <typename Iterator>
void noLoopFn(Iterator begin, Iterator end, int arg) {
  //@TODO
}

#endif //ifndef OUT_HH_
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim find.hh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"find.hh" 20L, 434C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef OUT_HH_
#define OUT_HH_

#include [m[31m<vector>[m

[34m/** Output a line containing [m[31m"FOUND"[m[34m if arg is found in [begin, end),
 *  otherwise output [m[31m"NOT FOUND"[m[34m..
 */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m loopFn(Iterator begin, Iterator end, [32mint[m arg) {
  [34m//@[m[30m[103mTODO[m
}

[34m/** Exactly like loopFn() but no loops should be used */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m noLoopFn(Iterator begin, Iterator end, [32mint[m arg) {
  [34m//@[m[30m[103mTODO[m
}

[35m#endif[m [34m//ifndef OUT_HH_[m
[94m~                                                                                                [22;1H~                                                                                                [23;1H~                                                                                                [24;1H~                                                                                                [25;1H~                                                                                                [26;1H~                                                                                                [27;1H~                                                                                                [28;1H~                                                                                                [29;1H~                                                                                                [30;1H~                                                                                                [31;1H~                                                                                                [32;1H~                                                                                                [33;1H~                                                                                                [34;1H~                                                                                                [35;1H~                                                                                                [36;1H~                                                                                                [37;1H~                                                                                                [38;1H~                                                                                                [39;1H~                                                                                                [40;1H~                                                                                                [41;1H~                                                                                                [42;1H~                                                                                                [43;1H~                                                                                                [44;1H~                                                                                                [45;1H~                                                                                                [46;1H~                                                                                                [47;1H~                                                                                                [48;1H~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H1,1[11CAll[1;1H[?25h[?25l[51;70H~@k[1;1H[51;70H   [2;1H[51;80H2[2;1H[?25h[?25l[51;70H~@k[2;1H[51;70H   [3;1H[51;80H3,0-1[3;1H[?25h[?25l[51;70H~@k[3;1H[51;70H   [4;1H[51;80H4,1  [4;1H[?25h[?25l[51;70H~@k[4;1H[51;70H   [5;1H[51;80H5,0-1[5;1H[?25h[?25l[51;70H~@k[5;1H[51;70H   [6;1H[51;80H6,1  [6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [7;1H[51;80H7[7;1H[?25h[?25l[51;70H~@k[7;1H[51;70H   [8;1H[51;80H8[8;1H[?25h[?25l[51;70H~@k[8;1H[51;70H   [9;1H[51;80H9[9;1H[?25h[?25l[51;70H~@k[9;1H[51;70H   [10;1H[51;80H10,1[10;1H[?25h[?25l[51;70H~@k[10;1H[51;70H   [11;1H[51;81H1[11;1H[?25h[?25l[51;70H~@k[11;1H[51;70H   [12;1H[10;52H[106m{

}[m[51;81H2[12;1H[?25h[?25l[51;70H~@k[12;1H[51;70H   [13;1H[10;52H{

}[51;81H3,0-1[13;1H[?25h[?25l[51;70H~@k[13;1H[51;70H   [12;1H[10;52H[106m{

}[m[51;81H2,1  [12;1H[?25h[?25l[51;70H~@k[12;1H[51;70H   [11;1H[10;52H{

}[51;81H1[11;1H[?25h[?25l[51;70H~@k[11;1H[51;70H   [11;2H[51;83H2[11;2H[?25h[?25l[51;70H~@k[11;2H[51;70H   [11;3H[51;83H3[11;3H[?25h[?25l[51;70H~@k[11;3H[51;70H   [11;4H[51;83H4[11;4H[?25h[?25l[51;70H~@k[11;4H[51;70H   [11;5H[51;83H5[11;5H[?25h[?25l[51;70H~@k[11;5H[51;70H   [11;6H[51;83H6[11;6H[?25h[?25l[51;70H~@k[11;6H[51;70H   [11;7H[51;83H7[11;7H[?25h[?25l[51;70H~@k[11;7H[51;70H   [11;8H[51;83H8[11;8H[?25h[?25l[51;70H~@k[11;8H[51;70H   [11;9H[51;83H9[11;9H[?25h[?25l[51;70H~@k[11;9H[51;70H   [11;9H[?25h[?25l[51;70H~@k[11;9H[51;70H   [11;9H[?25h[?25l[51;70H~@k[11;9H[51;70H   [11;9H[?25h[?25l[51;70H~@k[11;9H[51;70H   [11;9H[?25h[?25l[51;70H~@k[11;9H[51;70H   [11;9H[?25h[?25l[51;70H~@k[11;9H[51;70H   [11;9H[?25h[?25l[51;70H~@k[11;9H[51;70H   [11;9H[?25h[?25l[51;70H~@k[11;9H[51;70H   [11;9H[?25h[?25l[51;70H~@k[11;9H[51;70H   [11;9H[?25h[?25l[51;70H~@k[11;9H[51;70H   [11;9H[?25h[?25l[51;70Hd[11;9H[?25h[?25l[51;71Hd[11;9H[51;70H  [11;1H[10;50r[50;1H
[1;51r[10;1H[32mvoid[m loopFn(Iterator begin, Iterator end, [32mint[m arg) [106m{
}[m[50;1H[94m~                                                                                                [m[51;1H[K[51;80H11,1[10CAll[11;1H[?25h[?25l[51;70Hi[11;1H[51;70H [11;1H[51;1H[1m-- INSERT --[m[51;80H[K[51;80H11,1[10CAll[11;1H[?25h[?25l[10;52H{
}[51;81H0[10;1H[?25h[?25l[51;83H2[10;2H[?25h[?25l[51;83H3[10;3H[?25h[?25l[51;83H4[10;4H[?25h[51;1H[K[10;3H[?25l[51;70H^[[10;3H[51;70H  [10;4H[51;80H10,3[10CAll[10;3H[?25h[?25l[51;70H$[10;3H[51;70H [10;52H[106m{
}[m[51;83H52[10;52H[?25h[?25l[51;70Hi[10;52H[51;70H [10;52H[51;1H[1m-- INSERT --[m[51;80H[K[51;80H10,52[9CAll[10;52H[?25h[?25l[51;84H3[10;53H[?25h[?25l[11;50r[11;1H[L[1;51r[11;1H[106m        [m
}[51;80H[K[51;80H11,2-9[8CAll[10;52H{
        [?25h[?25lf[51;83H3-10[11;10H[?25h[?25lo[51;83H4-11[11;11H[?25h[?25l[38;5;130mfor[m[51;83H5-12[11;12H[?25h[?25l([51;83H6-13[11;13H[?25h[?25la[51;83H7-14[11;14H[?25h[?25lu[51;83H8-15[11;15H[?25h[?25lt[51;83H9-16[11;16H[?25h[?25l[32mauto[m[51;83H10-17[11;17H[?25h[?25l[51;84H1-18[11;18H[?25h[?25lx[51;84H2-19[11;19H[?25h[?25l[51;84H3-20[11;20H[?25h[?25l:[51;84H4-21[11;21H[?25h[?25l[51;84H5-22[11;22H[?25h[?25l[51;84H4-21[11;21H[?25h[?25l[11;20H[K[51;84H3-20[11;20H[?25h[?25l[51;84H2-19[11;19H[?25h[?25l[11;18H[K[51;84H1-18[11;18H[?25h[?25l[51;84H0-17[11;17H[?25h[?25laut[11;16H[K[51;83H9-16 [11;16H[?25h[?25l[11;15H[K[51;83H8-15[11;15H[?25h[?25l[11;14H[K[51;83H7-14[11;14H[?25h[?25l[11;13H[K[51;83H6-13[11;13H[?25h[?25l[11;12H[K[51;83H5-12[11;12H[?25h[?25lfo[11;11H[K[51;83H4-11[11;11H[?25h[?25l[11;10H[K[51;83H3-10[11;10H[?25h[?25l[11;9H[K[51;83H2-9 [11;9H[?25h[?25lw[51;83H3-10[11;10H[?25h[?25lh[51;83H4-11[11;11H[?25h[?25li[51;83H5-12[11;12H[?25h[?25le[51;83H6-13[11;13H[?25h[?25l[11;12H[K[51;83H5-12[11;12H[?25h[?25ll[51;83H6-13[11;13H[?25h[?25l[38;5;130mwhile[m[51;83H7-14[11;14H[?25h[?25l([51;83H8-15[11;15H[?25h[?25l)[106m()[m[51;83H9-16[11;16H[?25h[?25l[51;83H8-15[11;15H[?25h[?25l[106mb[m)b[106m)[m[51;83H9-16[11;16H[?25h[?25l[106me[m)e[106m)[m[51;83H10-17[11;17H[?25h[?25l[106mg[m)g[106m)[m[51;84H1-18[11;18H[?25h[?25l[106mi[m)i[106m)[m[51;84H2-19[11;19H[?25h[?25l[106mn[m)n[106m)[m[51;84H3-20[11;20H[?25h[?25l[106m [m) [106m)[m[51;84H4-21[11;21H[?25h[?25l[106m![m)![106m)[m[51;84H5-22[11;22H[?25h[?25l[106m=[m)=[106m)[m[51;84H6-23[11;23H[?25h[?25l[106m [m) [106m)[m[51;84H7-24[11;24H[?25h[?25l[106me[m)e[106m)[m[51;84H8-25[11;25H[?25h[?25l[106mn[m)n[106m)[m[51;84H9-26[11;26H[?25h[?25l[106md[m)d[106m)[m[51;83H20-27[11;27H[?25h[?25l[51;84H1-28[11;28H[?25h[?25l[12;50r[12;1H[L[1;51r[51;80H[K[51;80H12,3-17[7CAll[11;14H([12C)[12;17H[?25h[?25li[51;83H4-18[12;18H[?25h[?25l[38;5;130mif[m[51;83H5-19[12;19H[?25h[?25l([51;83H6-20[12;20H[?25h[?25l)[106m()[m[51;83H7-21[12;21H[?25h[?25l[51;83H6-20[12;20H[?25h[?25l[106m*[m)*[106m)[m[51;83H7-21[12;21H[?25h[?25l[106mb[m)b[106m)[m[51;83H8-22[12;22H[?25h[?25l[106me[m)e[106m)[m[51;83H9-23[12;23H[?25h[?25l[106mg[m)g[106m)[m[51;83H10-24[12;24H[?25h[?25l[106mi[m)i[106m)[m[51;84H1-25[12;25H[?25h[?25l[106mn[m)n[106m)[m[51;84H2-26[12;26H[?25h[?25l[106m [m) [106m)[m[51;84H3-27[12;27H[?25h[?25l[106m=[m)=[106m)[m[51;84H4-28[12;28H[?25h[?25l[106m=[m)=[106m)[m[51;84H5-29[12;29H[?25h[?25l[106m [m) [106m)[m[51;84H6-30[12;30H[?25h[?25l[106ma[m)a[106m)[m[51;84H7-31[12;31H[?25h[?25l[106mr[m)r[106m)[m[51;84H8-32[12;32H[?25h[?25l[106mg[m)g[106m)[m[51;84H9-33[12;33H[?25h[?25l[1C[97m[101m)[m[12;19H([13C)[51;83H20-34[12;34H[?25h[?25l[12;34H[K[12;19H[106m([13C)[m[51;83H19-33[12;33H[?25h[?25l[51;83H20-34[12;34H[?25h[?25l[97m[101m][m[12;19H([13C)[51;84H1-35[12;35H[?25h[?25l[12;34H[K[12;19H[106m([13C)[m[51;84H0-34[12;34H[?25h[?25l[13;50r[13;1H[L[1;51r[51;80H[K[51;80H13,4-25[7CAll[12;19H([13C)[13;25H[?25h[?25lc[51;83H5-26[13;26H[?25h[?25lo[51;83H6-27[13;27H[?25h[?25lu[51;83H7-28[13;28H[?25h[?25lt[51;83H8-29[13;29H[?25h[?25l[51;83H9-30[13;30H[?25h[?25l<[51;83H10-31[13;31H[?25h[?25l<[51;84H1-32[13;32H[?25h[?25l[51;84H2-33[13;33H[?25h[?25l[31m"[m[51;84H3-34[13;34H[?25h[?25l[31mF[m[51;84H4-35[13;35H[?25h[?25l[31mO[m[51;84H5-36[13;36H[?25h[?25l[31mU[m[51;84H6-37[13;37H[?25h[?25l[31mN[m[51;84H7-38[13;38H[?25h[?25l[31mD[m[51;84H8-39[13;39H[?25h[?25l[31m"[m[51;84H9-40[13;40H[?25h[?25l[51;83H20-41[13;41H[?25h[?25l<[51;84H1-42[13;42H[?25h[?25l<[51;84H2-43[13;43H[?25h[?25l[51;84H3-44[13;44H[?25h[?25le[51;84H4-45[13;45H[?25h[?25ln[51;84H5-46[13;46H[?25h[?25ld[51;84H6-47[13;47H[?25h[?25ll[51;84H7-48[13;48H[?25h[?25l;[51;84H8-49[13;49H[?25h[?25l[12;19H[106m([13C)[m[51;81H2,20-34[12;34H[?25h[?25l[13;50r[13;1H[L[1;51r[51;80H[K[51;80H13,4-25[7CAll[12;19H([13C)[13;25H[?25h[?25l[13;17H{[106m{

}[m[51;85H18[13;18H[?25h[?25l{

}[51;81H4,3-17[14;17H[?25h[?25l[51;83H4-25[14;25H[?25h[?25l[51;83H5-26[14;26H[?25h[?25l[51;83H6-27[14;27H[?25h[?25l[51;83H7-28[14;28H[?25h[?25l[51;83H8-29[14;29H[?25h[?25l[51;83H9-30[14;30H[?25h[?25l[51;83H10-31[14;31H[?25h[?25l[51;84H1-32[14;32H[?25h[?25l[51;84H2-33[14;33H[?25h[?25l[51;84H3-34[14;34H[?25h[?25l[51;84H4-35[14;35H[?25h[?25l[51;84H5-36[14;36H[?25h[?25l[51;84H6-37[14;37H[?25h[?25l[51;84H7-38[14;38H[?25h[?25l[51;84H8-39[14;39H[?25h[?25l[51;84H9-40[14;40H[?25h[?25l[51;83H20-41[14;41H[?25h[?25l[51;84H1-42[14;42H[?25h[?25l[51;84H2-43[14;43H[?25h[?25l[51;84H3-44[14;44H[?25h[?25l[51;84H4-45[14;45H[?25h[?25l[51;84H5-46[14;46H[?25h[?25l[51;84H6-47[14;47H[?25h[?25l[51;84H7-48[14;48H[?25h[?25l[51;84H8-49[14;49H[?25h[?25l[15;50r[15;1H[L[1;51r[51;80H[K[51;80H15,4-25[7CAll[15;25H[?25h[?25l[15;17H}[13;17H[106m{[15;17H}[m[51;85H18[15;18H[?25h[?25l[13;17H{[15;17H}[51;81H4,3-17[14;17H[?25h[?25l[51;83H4-25[14;25H[?25h[?25l[51;83H5-26[14;26H[?25h[?25l[51;83H6-27[14;27H[?25h[?25l[51;83H7-28[14;28H[?25h[?25l[51;83H8-29[14;29H[?25h[?25l[51;83H9-30[14;30H[?25h[?25l[51;83H10-31[14;31H[?25h[?25l[51;84H1-32[14;32H[?25h[?25l[51;84H2-33[14;33H[?25h[?25l[51;84H3-34[14;34H[?25h[?25l[51;84H4-35[14;35H[?25h[?25l[51;84H5-36[14;36H[?25h[?25l[51;84H6-37[14;37H[?25h[?25l[51;84H7-38[14;38H[?25h[?25l[51;84H8-39[14;39H[?25h[?25l[51;84H9-40[14;40H[?25h[?25l[51;83H20-41[14;41H[?25h[?25l[51;84H1-42[14;42H[?25h[?25l[51;84H2-43[14;43H[?25h[?25l[51;84H3-44[14;44H[?25h[?25l[51;84H4-45[14;45H[?25h[?25l[51;84H5-46[14;46H[?25h[?25l[51;84H6-47[14;47H[?25h[?25l[51;84H7-48[14;48H[?25h[?25l[51;84H8-49[14;49H[?25h[?25l[15;50r[15;1H[L[1;51r[51;80H[K[51;80H15,4-25[7CAll[15;25H[?25h[?25lr[51;83H5-26[15;26H[?25h[?25le[51;83H6-27[15;27H[?25h[?25lt[51;83H7-28[15;28H[?25h[?25lu[51;83H8-29[15;29H[?25h[?25lr[51;83H9-30[15;30H[?25h[?25l[38;5;130mreturn[m[51;83H10-31[15;31H[?25h[?25l;[51;84H1-32[15;32H[?25h[?25l[13;17H[106m{[16;17H}[m[51;81H6,4-18 [16;18H[?25h[?25l[17;50r[17;1H[L[1;51r[51;80H[K[51;80H17,2-9[8CAll[13;17H{[16;17H}[17;9H[?25h[?25lc[51;83H3-10[17;10H[?25h[?25lo[51;83H4-11[17;11H[?25h[?25lu[51;83H5-12[17;12H[?25h[?25lt[51;83H6-13[17;13H[?25h[?25l[51;83H7-14[17;14H[?25h[?25l<[51;83H8-15[17;15H[?25h[?25l<[51;83H9-16[17;16H[?25h[?25l[51;83H10-17[17;17H[?25h[?25l[31m"[m[51;84H1-18[17;18H[?25h[?25l[31mN[m[51;84H2-19[17;19H[?25h[?25l[31mO[m[51;84H3-20[17;20H[?25h[?25l[31mT[m[51;84H4-21[17;21H[?25h[?25l[31m [m[51;84H5-22[17;22H[?25h[?25l[31mF[m[51;84H6-23[17;23H[?25h[?25l[31mO[m[51;84H7-24[17;24H[?25h[?25l[31mU[m[51;84H8-25[17;25H[?25h[?25l[31mN[m[51;84H9-26[17;26H[?25h[?25l[31mD[m[51;83H20-27[17;27H[?25h[?25l[31m [m[51;84H1-28[17;28H[?25h[?25l[17;27H[K[51;84H0-27[17;27H[?25h[?25l[31m"[m[51;84H1-28[17;28H[?25h[?25l[51;84H2-29[17;29H[?25h[?25l<[51;84H3-30[17;30H[?25h[?25l<[51;84H4-31[17;31H[?25h[?25l[51;84H5-32[17;32H[?25h[?25le[51;84H6-33[17;33H[?25h[?25ln[51;84H7-34[17;34H[?25h[?25ld[51;84H8-35[17;35H[?25h[?25ll[51;84H9-36[17;36H[?25h[?25l;[51;83H30-37[17;37H[?25h[?25l;[51;84H1-38[17;38H[?25h[?25l[17;37H[K[51;84H0-37[17;37H[?25h[?25l[13;17H[106m{[16;17H}[m[51;81H6,4-18 [16;18H[?25h[?25l[13;17H{[16;17H}[51;81H7,30-37[17;37H[?25h[?25l[10;52H[106m{[18;1H}[m[51;81H8,2    [18;2H[?25h[?25l[10;52H{[18;1H}[51;81H7,30-37[17;37H[?25h[?25l[13;17H[106m{[16;17H}[m[51;81H6,4-18 [16;18H[?25h[?25l[13;17H{[16;17H}[51;81H7,30-37[17;37H[?25h[?25l[10;52H[106m{[18;1H}[m[51;81H8,2    [18;2H[?25h[?25l[10;52H{[18;1H}[51;81H9,1[19;1H[?25h[?25l[51;80H20,37[20;37H[?25h[?25l[51;81H1,29[21;29H[?25h[?25l[51;81H2,37[22;37H[?25h[?25l[51;81H1,29[21;29H[?25h[?25l[51;81H2,37[22;37H[?25h[?25l[51;81H3,10[23;10H[?25h[?25l[51;80H[K[51;80H23,10[9CAll[23;10H[?25h[?25l[51;81H2,37[22;37H[?25h[?25l[51;84H8[22;38H[?25h[?25l[51;84H9[22;39H[?25h[?25l[51;83H40[22;40H[?25h[?25l[51;84H1[22;41H[?25h[?25l[51;84H2[22;42H[?25h[?25l[51;84H3[22;43H[?25h[?25l[51;84H4[22;44H[?25h[?25l[51;84H5[22;45H[?25h[?25l[51;84H6[22;46H[?25h[?25l[51;84H7[22;47H[?25h[?25l[51;84H8[22;48H[?25h[?25l[51;84H9[22;49H[?25h[?25l[51;83H50[22;50H[?25h[?25l[51;84H1[22;51H[?25h[?25l[22;14H[106m([37C)[m[51;84H2[22;52H[?25h[?25l[51;84H3[22;53H[?25h[?25l[22;14H([37C) [106m{

}[m[51;84H4[22;54H[?25h[?25l[51;84H5[22;55H[?25h[?25l{

}[51;81H3,10[23;10H[?25h[?25l[34mTOD[m[23;9H[K[51;83H9 [23;9H[?25h[?25l[24;50r[24;1H[L[1;51r[24;3H[34m//[m[51;80H[K[51;80H24,5[10CAll[24;5H[?25h[?25l/[24;4H[K[51;83H4[24;4H[?25h[?25l[24;3H[K[51;83H3[24;3H[?25h[?25l[51;83H2[24;2H[?25h[?25l[51;83H1[24;1H[?25h[?25l[23;50r[50;1H
[1;51r[23;3H[34m//@TOD[m[50;1H[94m~                                                                                                [m[51;80H[K[51;80H23,9[10CAll[23;9H[?25h[?25l[23;8H[K[51;83H8[23;8H[?25h[?25l[23;3H[K[51;83H3[23;3H[?25h[?25l[51;83H2[23;2H[?25h[?25l[51;83H1[23;1H[?25h[?25l[22;50r[50;1H
[1;51r[22;1H[32mvoid[m noLoopFn(Iterator begin, Iterator end, [32mint[m arg) {[50;1H[94m~                                                                                                [m[51;80H[K[51;80H22,55[9CAll[22;54H[106m{
}[22;55H[?25h[?25l[23;50r[m[23;1H[L[1;51r[23;1H[106m        [m
}[51;80H[K[51;80H23,2-9[8CAll[22;54H{
        [?25h[?25li[51;83H3-10[23;10H[?25h[?25l[38;5;130mif[m[51;83H4-11[23;11H[?25h[?25l([51;83H5-12[23;12H[?25h[?25l)[106m()[m[51;83H6-13[23;13H[?25h[?25l[51;83H5-12[23;12H[?25h[?25l[106mf[m)f[106m)[m[51;83H6-13[23;13H[?25h[?25l[106mi[m)i[106m)[m[51;83H7-14[23;14H[?25h[?25l[106mn[m)n[106m)[m[51;83H8-15[23;15H[?25h[?25l[106md[m)d[106m)[m[51;83H9-16[23;16H[?25h[?25l[106m([m)[23;11H([5C[106m)[m[51;83H10-17[23;17H[?25h[?25l[1C)[23;11H[106m([mfind()[106m)[m[51;84H1-18[23;18H[?25h[?25l[23;11H(find[106m()[m)[51;84H0-17[23;17H[?25h[?25l[51;83H9-16 [23;16H[?25h[?25l[51;83H10-17[23;17H[?25h[?25l[106mb[m))b[106m)[m[51;84H1-18[23;18H[?25h[?25l[106me[m))e[106m)[m[51;84H2-19[23;19H[?25h[?25l[106mg[m))g[106m)[m[51;84H3-20[23;20H[?25h[?25l[106mi[m))i[106m)[m[51;84H4-21[23;21H[?25h[?25l[106mn[m))n[106m)[m[51;84H5-22[23;22H[?25h[?25l[106m,[m)),[106m)[m[51;84H6-23[23;23H[?25h[?25l[106m [m)) [106m)[m[51;84H7-24[23;24H[?25h[?25l[106me[m))e[106m)[m[51;84H8-25[23;25H[?25h[?25l[106mn[m))n[106m)[m[51;84H9-26[23;26H[?25h[?25l[106md[m))d[106m)[m[51;83H20-27[23;27H[?25h[?25l[106m,[m)),[106m)[m[51;84H1-28[23;28H[?25h[?25l[106m [m)) [106m)[m[51;84H2-29[23;29H[?25h[?25l[106ma[m))a[106m)[m[51;84H3-30[23;30H[?25h[?25l[106mr[m))r[106m)[m[51;84H4-31[23;31H[?25h[?25l[106mg[m))g[106m)[m[51;84H5-32[23;32H[?25h[?25l[23;11H[106m([mfind([15C)[106m)[m[51;84H6-33[23;33H[?25h[?25l[106m [m) [106m)[m[51;84H7-34[23;34H[?25h[?25l[106m![m)![106m)[m[51;84H8-35[23;35H[?25h[?25l[106m=[m)=[106m)[m[51;84H9-36[23;36H[?25h[?25l[106m [m) [106m)[m[51;83H30-37[23;37H[?25h[?25l[106me[m)e[106m)[m[51;84H1-38[23;38H[?25h[?25l[106mn[m)n[106m)[m[51;84H2-39[23;39H[?25h[?25l[106md[m)d[106m)[m[51;84H3-40[23;40H[?25h[?25l[51;84H4-41[23;41H[?25h[?25l[24;50r[24;1H[L[1;51r[51;80H[K[51;80H24,3-17[7CAll[23;11H([28C)[24;17H[?25h[?25lc[51;83H4-18[24;18H[?25h[?25lo[51;83H5-19[24;19H[?25h[?25lu[51;83H6-20[24;20H[?25h[?25lt[51;83H7-21[24;21H[?25h[?25l[51;83H8-22[24;22H[?25h[?25l<[51;83H9-23[24;23H[?25h[?25l<[51;83H10-24[24;24H[?25h[?25l[51;84H1-25[24;25H[?25h[?25l[31m"[m[51;84H2-26[24;26H[?25h[?25l[31mF[m[51;84H3-27[24;27H[?25h[?25l[31mO[m[51;84H4-28[24;28H[?25h[?25l[31mU[m[51;84H5-29[24;29H[?25h[?25l[31mN[m[51;84H6-30[24;30H[?25h[?25l[31mD[m[51;84H7-31[24;31H[?25h[?25l[31m [m[51;84H8-32[24;32H[?25h[?25l[24;31H[K[51;84H7-31[24;31H[?25h[?25l[31m"[m[51;84H8-32[24;32H[?25h[?25l[51;84H9-33[24;33H[?25h[?25l<[51;83H20-34[24;34H[?25h[?25l<[51;84H2-36[24;36H[?25h[?25le[51;84H3-37[24;37H[?25h[?25ln[51;84H4-38[24;38H[?25h[?25ld[51;84H5-39[24;39H[?25h[?25ll[51;84H6-40[24;40H[?25h[?25l;[51;84H7-41[24;41H[?25h[?25l[25;50r[25;1H[L[1;51r[51;80H[K[51;80H25,2-9[8CAll[25;9H[?25h[?25le[51;83H3-10[25;10H[?25h[?25ll[51;83H4-11[25;11H[?25h[?25ls[51;83H5-12[25;12H[?25h[?25l[38;5;130melse[m[51;83H6-13[25;13H[?25h[?25l[26;50r[26;1H[L[1;51r[51;80H[K[51;80H26,3-17[7CAll[26;17H[?25h[?25lc[51;83H4-18[26;18H[?25h[?25lo[51;83H5-19[26;19H[?25h[?25lu[51;83H6-20[26;20H[?25h[?25lt[51;83H7-21[26;21H[?25h[?25l[51;83H8-22[26;22H[?25h[?25l<[51;83H9-23[26;23H[?25h[?25l<[51;83H10-24[26;24H[?25h[?25l[51;84H1-25[26;25H[?25h[?25l[31m"[m[51;84H2-26[26;26H[?25h[?25l[31mN[m[51;84H3-27[26;27H[?25h[?25l[31mO[m[51;84H4-28[26;28H[?25h[?25l[31mT[m[51;84H5-29[26;29H[?25h[?25l[31m [m[51;84H6-30[26;30H[?25h[?25l[31mF[m[51;84H7-31[26;31H[?25h[?25l[31mO[m[51;84H8-32[26;32H[?25h[?25l[31mU[m[51;84H9-33[26;33H[?25h[?25l[31mN[m[51;83H20-34[26;34H[?25h[?25l[31mD[m[51;84H1-35[26;35H[?25h[?25l[31m [m[51;84H2-36[26;36H[?25h[?25l[31mJ[m[51;84H3-37[26;37H[?25h[?25l[26;36H[K[51;84H2-36[26;36H[?25h[?25l[26;35H[K[51;84H1-35[26;35H[?25h[?25l[31m"[m[51;84H2-36[26;36H[?25h[?25l[51;84H3-37[26;37H[?25h[?25l<[51;84H4-38[26;38H[?25h[?25l<[51;84H5-39[26;39H[?25h[?25l[51;84H6-40[26;40H[?25h[?25le[51;84H7-41[26;41H[?25h[?25ln[51;84H8-42[26;42H[?25h[?25ld[51;84H9-43[26;43H[?25h[?25ll[51;83H30-44[26;44H[?25h[?25l;[51;84H1-45[26;45H[?25h[51;1H[K[26;44H[?25l[51;70H^[[26;44H[51;70H  [26;45H[51;80H26,30-44      All[26;44H[?25h[?25l[51;70HZ[26;44H[?25h[?25l[51;71HZ[26;44H[?1000l[?2004l[51;1H"find.hh"[51;70H[K[51;11H29L, 630C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/2-find$ make -f ../Makefile 
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:[m[K In function ‘[01m[Kvoid loopFn(Iterator, Iterator, int)[m[K’:
[01m[Kfind.hh:14:4:[m[K [01;31m[Kerror: [m[K‘[01m[Kcout[m[K’ was not declared in this scope
    [01;31m[Kcout[m[K << "FOUND" << endl;
    [01;31m[K^~~~[m[K
[01m[Kfind.hh:14:4:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[Kmain.cc:3[m[K:
[01m[K/usr/include/c++/8/iostream:61:18:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::cout[m[K’
   extern ostream [01;36m[Kcout[m[K;  /// Linked to standard output
                  [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:14:23:[m[K [01;31m[Kerror: [m[K‘[01m[Kendl[m[K’ was not declared in this scope
    cout << "FOUND" << [01;31m[Kendl[m[K;
                       [01;31m[K^~~~[m[K
[01m[Kfind.hh:14:23:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/8/istream:39[m[K,
                 from [01m[K/usr/include/c++/8/fstream:38[m[K,
                 from [01m[Kmain.cc:2[m[K:
[01m[K/usr/include/c++/8/ostream:590:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::endl[m[K’
     [01;36m[Kendl[m[K(basic_ostream<_CharT, _Traits>& __os)
     [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:17:2:[m[K [01;31m[Kerror: [m[K‘[01m[Kcout[m[K’ was not declared in this scope
  [01;31m[Kcout[m[K << "NOT FOUND" << endl;
  [01;31m[K^~~~[m[K
[01m[Kfind.hh:17:2:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[Kmain.cc:3[m[K:
[01m[K/usr/include/c++/8/iostream:61:18:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::cout[m[K’
   extern ostream [01;36m[Kcout[m[K;  /// Linked to standard output
                  [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:17:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kendl[m[K’ was not declared in this scope
  cout << "NOT FOUND" << [01;31m[Kendl[m[K;
                         [01;31m[K^~~~[m[K
[01m[Kfind.hh:17:25:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/8/istream:39[m[K,
                 from [01m[K/usr/include/c++/8/fstream:38[m[K,
                 from [01m[Kmain.cc:2[m[K:
[01m[K/usr/include/c++/8/ostream:590:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::endl[m[K’
     [01;36m[Kendl[m[K(basic_ostream<_CharT, _Traits>& __os)
     [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:[m[K In function ‘[01m[Kvoid noLoopFn(Iterator, Iterator, int)[m[K’:
[01m[Kfind.hh:24:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcout[m[K’ was not declared in this scope
   [01;31m[Kcout[m[K << "FOUND" << endl;
   [01;31m[K^~~~[m[K
[01m[Kfind.hh:24:3:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[Kmain.cc:3[m[K:
[01m[K/usr/include/c++/8/iostream:61:18:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::cout[m[K’
   extern ostream [01;36m[Kcout[m[K;  /// Linked to standard output
                  [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:24:22:[m[K [01;31m[Kerror: [m[K‘[01m[Kendl[m[K’ was not declared in this scope
   cout << "FOUND" << [01;31m[Kendl[m[K;
                      [01;31m[K^~~~[m[K
[01m[Kfind.hh:24:22:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/8/istream:39[m[K,
                 from [01m[K/usr/include/c++/8/fstream:38[m[K,
                 from [01m[Kmain.cc:2[m[K:
[01m[K/usr/include/c++/8/ostream:590:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::endl[m[K’
     [01;36m[Kendl[m[K(basic_ostream<_CharT, _Traits>& __os)
     [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:26:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcout[m[K’ was not declared in this scope
   [01;31m[Kcout[m[K << "NOT FOUND" << endl;
   [01;31m[K^~~~[m[K
[01m[Kfind.hh:26:3:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[Kmain.cc:3[m[K:
[01m[K/usr/include/c++/8/iostream:61:18:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::cout[m[K’
   extern ostream [01;36m[Kcout[m[K;  /// Linked to standard output
                  [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:26:26:[m[K [01;31m[Kerror: [m[K‘[01m[Kendl[m[K’ was not declared in this scope
   cout << "NOT FOUND" << [01;31m[Kendl[m[K;
                          [01;31m[K^~~~[m[K
[01m[Kfind.hh:26:26:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/8/istream:39[m[K,
                 from [01m[K/usr/include/c++/8/fstream:38[m[K,
                 from [01m[Kmain.cc:2[m[K:
[01m[K/usr/include/c++/8/ostream:590:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::endl[m[K’
     [01;36m[Kendl[m[K(basic_ostream<_CharT, _Traits>& __os)
     [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
find.hh: In instantiation of ‘[01m[Kvoid noLoopFn(Iterator, Iterator, int) [with Iterator = int*][m[K’:
[01m[Kmain.cc:54:51:[m[K   required from here
[01m[Kfind.hh:23:9:[m[K [01;31m[Kerror: [m[K‘[01m[Kfind[m[K’ was not declared in this scope
  if([01;31m[Kfind(begin, end, arg)[m[K != end)
     [01;31m[K~~~~^~~~~~~~~~~~~~~~~[m[K
[01m[Kfind.hh:23:9:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/8/bits/locale_facets.h:48[m[K,
                 from [01m[K/usr/include/c++/8/bits/basic_ios.h:37[m[K,
                 from [01m[K/usr/include/c++/8/ios:44[m[K,
                 from [01m[K/usr/include/c++/8/istream:38[m[K,
                 from [01m[K/usr/include/c++/8/fstream:38[m[K,
                 from [01m[Kmain.cc:2[m[K:
[01m[K/usr/include/c++/8/bits/streambuf_iterator.h:368:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::find[m[K’
     [01;36m[Kfind[m[K(istreambuf_iterator<_CharT> __first,
     [01;36m[K^~~~[m[K
make: *** [../Makefile:48: main.o] Error 1
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ make -f ../Makefile [8Pvim find.hh[Ccat[C[C[C[C[C[C[C[C[Cvim[C[C[C[C[C[C[C[C[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"find.hh" 29L, 630C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef OUT_HH_
#define OUT_HH_

#include [m[31m<vector>[m

[34m/** Output a line containing [m[31m"FOUND"[m[34m if arg is found in [begin, end),
 *  otherwise output [m[31m"NOT FOUND"[m[34m..
 */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m loopFn(Iterator begin, Iterator end, [32mint[m arg) {[11;9H[38;5;130mwhile[m(begin != end)[12;17H[38;5;130mif[m(*begin == arg)[13;17H{[14;25Hcout << [31m"FOUND"[m << endl;[15;25H[38;5;130mreturn[m;[16;17H}[17;9Hcout << [31m"NOT FOUND"[m << endl;
}

[34m/** Exactly like loopFn() but no loops should be used */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m noLoopFn(Iterator begin, Iterator end, [32mint[m arg) {[23;9H[38;5;130mif[m(find(begin, end, arg) != end)[24;17Hcout << [31m"FOUND"[m << endl;[25;9H[38;5;130melse[m[26;17Hcout << [31m"NOT FOUND"[m << endl;
}

[35m#endif[m [34m//ifndef OUT_HH_[m
[94m~                                                                                                [31;1H~                                                                                                [32;1H~                                                                                                [33;1H~                                                                                                [34;1H~                                                                                                [35;1H~                                                                                                [36;1H~                                                                                                [37;1H~                                                                                                [38;1H~                                                                                                [39;1H~                                                                                                [40;1H~                                                                                                [41;1H~                                                                                                [42;1H~                                                                                                [43;1H~                                                                                                [44;1H~                                                                                                [45;1H~                                                                                                [46;1H~                                                                                                [47;1H~                                                                                                [48;1H~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H26,30-44      All[26;44H[?25h[?25l[51;70H~@k[26;44H[51;70H   [25;12H[51;81H5,5-12 [25;12H[?25h[?25l[51;70H~@k[25;12H[51;70H   [24;40H[51;81H4,26-40[24;40H[?25h[?25l[51;70H~@k[24;40H[51;70H   [23;40H[23;11H[106m([28C)[m[51;81H3,33[23;40H[?25h[?25l[51;70H~@k[23;40H[51;70H   [22;44H[23;11H([28C)[51;81H2,44   [22;44H[?25h[?25l[51;70H~@k[22;44H[51;70H   [21;28H[51;81H1,28[21;28H[?25h[?25l[51;81H0,44[20;44H[?25h[?25l[51;80H19,0-1[19;1H[?25h[?25l[10;52H[106m{[18;1H}[m[51;81H8,1  [18;1H[?25h[?25l[10;52H{[18;1H}[51;81H7,29-36[17;36H[?25h[?25l[13;17H[106m{[16;17H}[m[51;81H6,3-17 [16;17H[?25h[?25l[13;17H{[16;17H}[51;81H5,10-31[15;31H[?25h[?25l[51;81H4,23-44[14;44H[?25h[?25l[13;17H[106m{[16;17H}[m[51;81H3,3-17 [13;17H[?25h[?25l[12;19H[106m([13C)[m[13;17H{[16;17H}[51;81H2,19-33[12;33H[?25h[?25l[11;14H[106m([12C)[m[12;19H([13C)[51;81H1,20-27[11;27H[?25h[?25l[11;14H([12C)[51;81H0,44   [10;44H[?25h[?25l[51;80H9,28 [9;28H[?25h[?25l[51;80H8,3 [8;3H[?25h[?25l[51;80H7,34[7;34H[?25h[?25l[51;80H6,4[6;44H[?25h[?25l[51;80H5,0-1[5;1H[?25h[?25l[51;80H4,17 [4;17H[?25h[?25l[51;70H~@k[4;17H[51;70H   [3;1H[51;80H3,0-1[3;1H[?25h[?25l[51;70H~@k[3;1H[51;70H   [2;15H[51;80H2,15 [2;15H[?25h[?25l[51;70H~@k[2;15H[51;70H   [1;15H[51;80H1[1;15H[?25h[?25l[51;70H~@k[1;15H[51;70H   [2;15H[51;80H2[2;15H[?25h[?25l[51;70H~@k[2;15H[51;70H   [3;1H[51;80H3,0-1[3;1H[?25h[?25l[51;70H~@k[3;1H[51;70H   [4;17H[51;80H4,17 [4;17H[?25h[?25l[51;70H~@k[4;17H[51;70H   [4;17H[?25h[?25l[51;70H~@k[4;17H[51;70H   [4;17H[?25h[?25l[51;70Hi[4;17H[51;70H [4;17H[51;1H[1m-- INSERT --[m[51;13H[K[51;80H4,17[10CAll[4;17H[?25h[?25l[51;83H8[4;18H[?25h[?25l[5;50r[5;1H[L[1;51r[51;80H[K[51;80H5,1[11CAll[5;1H[?25h[?25l#[51;82H2[5;2H[?25h[?25li[51;82H3[5;3H[?25h[?25ln[51;82H4[5;4H[?25h[?25lc[51;82H5[5;5H[?25h[?25ll[51;82H6[5;6H[?25h[?25lu[51;82H7[5;7H[?25h[?25ld[51;82H8[5;8H[?25h[?25le[51;82H9[5;9H[?25h[?25l[51;82H10[5;10H[?25h[?25l[35m#include <[m[51;83H1[5;11H[?25h[?25la[51;83H2[5;12H[?25h[?25ll[51;83H3[5;13H[?25h[?25lo[51;83H4[5;14H[?25h[?25lg[51;83H5[5;15H[?25h[?25l[5;14H[K[51;83H4[5;14H[?25h[?25l[5;13H[K[51;83H3[5;13H[?25h[?25lg[51;83H4[5;14H[?25h[?25lo[51;83H5[5;15H[?25h[?25lr[51;83H6[5;16H[?25h[?25lt[51;83H7[5;17H[?25h[?25li[51;83H8[5;18H[?25h[?25lh[51;83H9[5;19H[?25h[?25lm[51;82H20[5;20H[?25h[?25l[5;19H[K[51;82H19[5;19H[?25h[?25l[5;18H[K[51;83H8[5;18H[?25h[?25l[5;17H[K[51;83H7[5;17H[?25h[?25l[5;16H[K[51;83H6[5;16H[?25h[?25li[51;83H7[5;17H[?25h[?25lr[51;83H8[5;18H[?25h[?25lt[51;83H9[5;19H[?25h[?25l[5;18H[K[51;83H8[5;18H[?25h[?25l[5;17H[K[51;83H7[5;17H[?25h[?25lt[51;83H8[5;18H[?25h[?25lh[51;83H9[5;19H[?25h[?25lm[51;82H20[5;20H[?25h[?25l[5;10H[31m<algorithm>[m[51;83H1[5;21H[?25h[51;1H[K[5;20H[?25l[51;70H^[[5;20H[51;70H  [5;21H[51;80H5,20[10CAll[5;20H[?25h[?25l[51;70HZ[5;20H[?25h[?25l[51;71HZ[5;20H[?1000l[?2004l[51;1H"find.hh"[51;70H[K[51;11H30L, 651C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim find.hh [8@make -f ../Makefile[C
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:[m[K In function ‘[01m[Kvoid loopFn(Iterator, Iterator, int)[m[K’:
[01m[Kfind.hh:15:4:[m[K [01;31m[Kerror: [m[K‘[01m[Kcout[m[K’ was not declared in this scope
    [01;31m[Kcout[m[K << "FOUND" << endl;
    [01;31m[K^~~~[m[K
[01m[Kfind.hh:15:4:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[Kmain.cc:3[m[K:
[01m[K/usr/include/c++/8/iostream:61:18:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::cout[m[K’
   extern ostream [01;36m[Kcout[m[K;  /// Linked to standard output
                  [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:15:23:[m[K [01;31m[Kerror: [m[K‘[01m[Kendl[m[K’ was not declared in this scope
    cout << "FOUND" << [01;31m[Kendl[m[K;
                       [01;31m[K^~~~[m[K
[01m[Kfind.hh:15:23:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/8/istream:39[m[K,
                 from [01m[K/usr/include/c++/8/fstream:38[m[K,
                 from [01m[Kmain.cc:2[m[K:
[01m[K/usr/include/c++/8/ostream:590:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::endl[m[K’
     [01;36m[Kendl[m[K(basic_ostream<_CharT, _Traits>& __os)
     [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:18:2:[m[K [01;31m[Kerror: [m[K‘[01m[Kcout[m[K’ was not declared in this scope
  [01;31m[Kcout[m[K << "NOT FOUND" << endl;
  [01;31m[K^~~~[m[K
[01m[Kfind.hh:18:2:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[Kmain.cc:3[m[K:
[01m[K/usr/include/c++/8/iostream:61:18:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::cout[m[K’
   extern ostream [01;36m[Kcout[m[K;  /// Linked to standard output
                  [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:18:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kendl[m[K’ was not declared in this scope
  cout << "NOT FOUND" << [01;31m[Kendl[m[K;
                         [01;31m[K^~~~[m[K
[01m[Kfind.hh:18:25:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/8/istream:39[m[K,
                 from [01m[K/usr/include/c++/8/fstream:38[m[K,
                 from [01m[Kmain.cc:2[m[K:
[01m[K/usr/include/c++/8/ostream:590:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::endl[m[K’
     [01;36m[Kendl[m[K(basic_ostream<_CharT, _Traits>& __os)
     [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:[m[K In function ‘[01m[Kvoid noLoopFn(Iterator, Iterator, int)[m[K’:
[01m[Kfind.hh:25:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcout[m[K’ was not declared in this scope
   [01;31m[Kcout[m[K << "FOUND" << endl;
   [01;31m[K^~~~[m[K
[01m[Kfind.hh:25:3:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[Kmain.cc:3[m[K:
[01m[K/usr/include/c++/8/iostream:61:18:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::cout[m[K’
   extern ostream [01;36m[Kcout[m[K;  /// Linked to standard output
                  [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:25:22:[m[K [01;31m[Kerror: [m[K‘[01m[Kendl[m[K’ was not declared in this scope
   cout << "FOUND" << [01;31m[Kendl[m[K;
                      [01;31m[K^~~~[m[K
[01m[Kfind.hh:25:22:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/8/istream:39[m[K,
                 from [01m[K/usr/include/c++/8/fstream:38[m[K,
                 from [01m[Kmain.cc:2[m[K:
[01m[K/usr/include/c++/8/ostream:590:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::endl[m[K’
     [01;36m[Kendl[m[K(basic_ostream<_CharT, _Traits>& __os)
     [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:27:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcout[m[K’ was not declared in this scope
   [01;31m[Kcout[m[K << "NOT FOUND" << endl;
   [01;31m[K^~~~[m[K
[01m[Kfind.hh:27:3:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[Kmain.cc:3[m[K:
[01m[K/usr/include/c++/8/iostream:61:18:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::cout[m[K’
   extern ostream [01;36m[Kcout[m[K;  /// Linked to standard output
                  [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:27:26:[m[K [01;31m[Kerror: [m[K‘[01m[Kendl[m[K’ was not declared in this scope
   cout << "NOT FOUND" << [01;31m[Kendl[m[K;
                          [01;31m[K^~~~[m[K
[01m[Kfind.hh:27:26:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/8/istream:39[m[K,
                 from [01m[K/usr/include/c++/8/fstream:38[m[K,
                 from [01m[Kmain.cc:2[m[K:
[01m[K/usr/include/c++/8/ostream:590:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::endl[m[K’
     [01;36m[Kendl[m[K(basic_ostream<_CharT, _Traits>& __os)
     [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:17[m[K:
find.hh: In instantiation of ‘[01m[Kvoid noLoopFn(Iterator, Iterator, int) [with Iterator = int*][m[K’:
[01m[Kmain.cc:54:51:[m[K   required from here
[01m[Kfind.hh:24:9:[m[K [01;31m[Kerror: [m[K‘[01m[Kfind[m[K’ was not declared in this scope
  if([01;31m[Kfind(begin, end, arg)[m[K != end)
     [01;31m[K~~~~^~~~~~~~~~~~~~~~~[m[K
[01m[Kfind.hh:24:9:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/8/bits/locale_facets.h:48[m[K,
                 from [01m[K/usr/include/c++/8/bits/basic_ios.h:37[m[K,
                 from [01m[K/usr/include/c++/8/ios:44[m[K,
                 from [01m[K/usr/include/c++/8/istream:38[m[K,
                 from [01m[K/usr/include/c++/8/fstream:38[m[K,
                 from [01m[Kmain.cc:2[m[K:
[01m[K/usr/include/c++/8/bits/streambuf_iterator.h:368:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::find[m[K’
     [01;36m[Kfind[m[K(istreambuf_iterator<_CharT> __first,
     [01;36m[K^~~~[m[K
make: *** [../Makefile:48: main.o] Error 1
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ make -f ../Makefile [8Pvim find.hh[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"find.hh" 30L, 651C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef OUT_HH_
#define OUT_HH_

#include [m[31m<vector>[m
[35m#include [m[31m<algorithm>[m

[34m/** Output a line containing [m[31m"FOUND"[m[34m if arg is found in [begin, end),
 *  otherwise output [m[31m"NOT FOUND"[m[34m..
 */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m loopFn(Iterator begin, Iterator end, [32mint[m arg) {[12;9H[38;5;130mwhile[m(begin != end)[13;17H[38;5;130mif[m(*begin == arg)[14;17H{[15;25Hcout << [31m"FOUND"[m << endl;[16;25H[38;5;130mreturn[m;[17;17H}[18;9Hcout << [31m"NOT FOUND"[m << endl;
}

[34m/** Exactly like loopFn() but no loops should be used */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m noLoopFn(Iterator begin, Iterator end, [32mint[m arg) {[24;9H[38;5;130mif[m(find(begin, end, arg) != end)[25;17Hcout << [31m"FOUND"[m << endl;[26;9H[38;5;130melse[m[27;17Hcout << [31m"NOT FOUND"[m << endl;
}

[35m#endif[m [34m//ifndef OUT_HH_[m
[94m~                                                                                                [32;1H~                                                                                                [33;1H~                                                                                                [34;1H~                                                                                                [35;1H~                                                                                                [36;1H~                                                                                                [37;1H~                                                                                                [38;1H~                                                                                                [39;1H~                                                                                                [40;1H~                                                                                                [41;1H~                                                                                                [42;1H~                                                                                                [43;1H~                                                                                                [44;1H~                                                                                                [45;1H~                                                                                                [46;1H~                                                                                                [47;1H~                                                                                                [48;1H~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H5,20[10CAll[5;20H[?25h[?25l[51;70H~@k[5;20H[51;70H   [6;1H[51;80H6,0-1[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [5;20H[51;80H5,20 [5;20H[?25h[?25l[51;70H~@k[5;20H[51;70H   [6;1H[51;80H6,0-1[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [7;20H[51;80H7,20 [7;20H[?25h[?25l[51;70H~@k[7;20H[51;70H   [8;20H[51;80H8[8;20H[?25h[?25l[51;70H~@k[8;20H[51;70H   [9;3H[51;80H9,3 [9;3H[?25h[?25l[51;70H~@k[9;3H[51;70H   [10;20H[51;80H10,20[10;20H[?25h[?25l[51;70H~@k[10;20H[51;70H   [11;20H[51;81H1[11;20H[?25h[?25l[51;70H~@k[11;20H[51;70H   [12;20H[51;81H2,13-20[12;20H[?25h[?25l[51;70H~@k[12;20H[51;70H   [13;20H[51;81H3,6-20 [13;20H[?25h[?25l[51;70H~@k[13;20H[51;70H   [14;17H[106m{[17;17H}[m[51;81H4,3-17[14;17H[?25h[?25l[51;70H~@k[14;17H[51;70H   [15;24H[14;17H{[17;17H}[51;81H5,3-24[15;24H[?25h[?25l[51;70H~@k[15;24H[51;70H   [16;24H[51;81H6[16;24H[?25h[?25l[51;70H~@k[16;24H[51;70H   [17;17H[14;17H[106m{[17;17H}[m[51;81H7,3-17[17;17H[?25h[?25l[51;70H~@k[17;17H[51;70H   [18;20H[14;17H{[17;17H}[51;81H8,13-20[18;20H[?25h[?25l[51;70H~@k[18;20H[51;70H   [19;1H[11;52H[106m{[19;1H}[m[51;81H9,1    [19;1H[?25h[?25l[51;70H~@k[19;1H[51;70H   [20;1H[11;52H{[19;1H}[51;80H20,0-1[20;1H[?25h[?25l[51;70H~@k[20;1H[51;70H   [21;20H[51;81H1,20 [21;20H[?25h[?25l[51;70H~@k[21;20H[51;70H   [22;20H[51;81H2[22;20H[?25h[?25l[51;70H~@k[22;20H[51;70H   [23;20H[51;81H3[23;20H[?25h[?25l[51;70H~@k[23;20H[51;70H   [24;20H[51;81H4,13-20[24;20H[?25h[?25l[51;70H~@k[24;20H[51;70H   [24;19H[51;84H2-19[24;19H[?25h[?25l[51;70H~@k[24;19H[51;70H   [24;18H[51;84H1-18[24;18H[?25h[?25l[51;70H~@k[24;18H[51;70H   [24;17H[51;84H0-17[24;17H[?25h[?25l[51;70H~@k[24;17H[51;70H   [24;16H[106m([15C)[m[51;83H9-16 [24;16H[?25h[?25l[51;70H~@k[24;16H[51;70H   [24;15Hd([15C)[51;83H8-15[24;15H[?25h[?25l[51;70Hi[24;15H[51;70H [24;15H[51;1H[1m-- INSERT --[m[51;13H[K[51;80H24,8-15[7CAll[24;15H[?25h[?25l[51;83H7-14[24;14H[?25h[?25l[51;83H6-13[24;13H[?25h[?25l[106m([28C)[m[51;83H5-12[24;12H[?25h[?25lsfind(begin, end, arg) != en[106md[m)[24;11H([28Cd[51;83H6-13[24;13H[?25h[?25ltfind(begin, end, arg) != end)[51;83H7-14[24;14H[?25h[?25ldfind(begin, end, arg) != end)[51;83H8-15[24;15H[?25h[?25l:find(begin, end, arg) != end)[51;83H9-16[24;16H[?25h[?25l:find(begin, end, arg) != end)[51;83H10-17[24;17H[?25h[?25lfind(begin, end, arg) != end)[24;45H[K[51;83H9-16 [24;16H[?25h[?25lfind(begin, end, arg) != end)[24;44H[K[51;83H8-15[24;15H[?25h[?25lfind(begin, end, arg) != end)[24;43H[K[51;83H7-14[24;14H[?25h[?25lfind(begin, end, arg) != end)[24;42H[K[51;83H6-13[24;13H[?25h[?25lfind(begin, end, arg) != end)[24;41H[K[24;11H[106m([28C)[m[51;83H5-12[24;12H[?25h[?25l([28C)[51;81H3,12  [23;12H[?25h[?25l[51;81H2[22;12H[?25h[?25l[51;81H1[21;12H[?25h[?25l[51;81H0,1 [20;1H[?25h[?25l[11;52H[106m{[19;1H}[m[51;80H19,2[19;2H[?25h[?25l[11;52H{[19;1H}[51;81H8,5-12[18;12H[?25h[?25l[51;81H7,2-9 [17;9H[?25h[?25l[51;81H6[16;9H[?25h[?25l[51;81H5[15;9H[?25h[?25l[51;81H4[14;9H[?25h[?25l[51;81H3[13;9H[?25h[?25l[51;81H2,5-12[12;12H[?25h[?25l[11;12H[106m([37C)[m[51;81H1,12  [11;12H[?25h[?25l([37C)[51;81H0[10;12H[?25h[?25l[51;80H9,4  [9;4H[?25h[?25l[51;80H8,12[8;12H[?25h[?25l[51;80H7[7;12H[?25h[?25l[51;80H6,1 [6;1H[?25h[?25l[7;50r[7;1H[L[1;51r[51;80H[K[51;80H7,1[11CAll[7;1H[?25h[?25l[8;50r[8;1H[L[1;51r[51;80H[K[51;80H8,1[11CAll[8;1H[?25h[?25l[51;80H7[7;1H[?25h[?25lu[51;82H2[7;2H[?25h[?25ls[51;82H3[7;3H[?25h[?25li[51;82H4[7;4H[?25h[?25ln[51;82H5[7;5H[?25h[?25l[38;5;130musing[m[51;82H6[7;6H[?25h[?25l[51;82H7[7;7H[?25h[?25ln[51;82H8[7;8H[?25h[?25la[51;82H9[7;9H[?25h[?25lm[51;82H10[7;10H[?25h[?25le[51;83H1[7;11H[?25h[?25ld[51;83H2[7;12H[?25h[?25l[7;11H[K[51;83H1[7;11H[?25h[?25ls[51;83H2[7;12H[?25h[?25lp[51;83H3[7;13H[?25h[?25la[51;83H4[7;14H[?25h[?25lc[51;83H5[7;15H[?25h[?25l[7;7H[32mnamespace[m[51;83H6[7;16H[?25h[?25l[51;83H7[7;17H[?25h[?25ls[51;83H8[7;18H[?25h[?25lt[51;83H9[7;19H[?25h[?25ld[51;82H20[7;20H[?25h[?25l;[51;83H1[7;21H[?25h[51;1H[K[7;20H[?25l[51;70H^[[7;20H[51;70H  [7;21H[51;80H7,20[10CAll[7;20H[?25h[?25l[51;70HZ[7;20H[?25h[?25l[51;71HZ[7;20H[?1000l[?2004l[51;1H"find.hh"[51;70H[K[51;11H32L, 673C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/2-find$ mvim find.hh [8@make -f ../Makefile[C
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main main.o; do echo $t >>.gitignore; done
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ make -f ../Makefile [8Pvim find.hh[C[8@make -f ../Makefile[C[8Pvim find.hh[C[8@make -f ../Makefile[C[8Pvim find.hh[Ccat[C[C[C[C[C[C[C[C[Cmain.cc[Cfind.hh[Cvim[C[C[C[C[C[C[C[C[Cmain.cc[C[2Prm out.hh[Cls[Ksls[2Plcp ../1-out/main.cc ../1-out/out.hh .ls[Kcd 2-find/ls[Kslcd ..[3Pls./main vector ../test.data 
7
^C
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ./main vector ../test.data 6
d
^C
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ./main vector ../test.data 6[K6[K./main vector ../test.data 6[K./main vector ../test.data 6[K./main vector ../test.data 6[K./main vector ../test.data 6[K[7Pmake -f ../Makefile[C[8Pvim find.hh[C[8@make -f ../Makefile[C[7@./main vector ../test.data[C6[Kvim main
main     main.cc  main.o   
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim main
main     main.cc  main.o   
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim main.
main.cc  main.o   
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim main.
main.cc  main.o   
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim main.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 116L, 3176C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<iterator>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<utility>[m

[35m#include [m[31m<deque>[m
[35m#include [m[31m<forward_list>[m
[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"find.hh"[m

[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream fstream;
  [38;5;130mif[m (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  [38;5;130mif[m (!in) {
    [38;5;130mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[31;33H[31m": "[m + std::strerror(errno));
  }
  [34m//construct a vector from an istream_iterator on istream in.
[m  [34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[36;25Hstd::istream_iterator<[32mint[m>());
  [34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}


[32mstatic[m [32mvoid[m
go(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {
    [32mint[m fixedArr[ints.size()];
    [32mint[m i = [31m0[m;
    [38;5;130mfor[m([32mauto[m x : ints)
    {[50;13HfixedArr[i] = x;[51;80H17,14[9CTop[17;14H[?25h[?25l[51;70H~@k[17;14H[51;70H   [18;1H[51;81H8,0-1[18;1H[?25h[?25l[51;70H^D[18;1H[51;70H  [18;1H[1;50r[1;1H[25M[1;51r[26;13Hi++;
    }
    loopFn(fixedArr, fixedArr + ints.size(), arg);
    noLoopFn(fixedArr, fixedArr + ints.size(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"deque"[m) {
    std::deque<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {
    std::forward_list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {
    std::list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"multiset"[m) {
    std::multiset<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }[51;1H[K[51;80H43,1[10C37%[18;1H[?25h[?25l[51;70H^U[18;1H[51;70H  [18;1H[1;50r[1;1H[25L[1;51r[1;1H[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<iterator>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<utility>[m

[35m#include [m[31m<deque>[m
[35m#include [m[31m<forward_list>[m
[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"find.hh"[m

[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;[51;80H[K[51;80H18,0-1[8CTop[18;1H[?25h[?25l[51;70H^D[18;1H[51;70H  [18;1H[1;50r[1;1H[25M[1;51r[26;13Hi++;
    }
    loopFn(fixedArr, fixedArr + ints.size(), arg);
    noLoopFn(fixedArr, fixedArr + ints.size(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"deque"[m) {
    std::deque<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {
    std::forward_list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {
    std::list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"multiset"[m) {
    std::multiset<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }[51;80H[K[51;80H43,1[10C37%[18;1H[?25h[?25l[51;70H~@k[18;1H[51;70H   [19;1H[51;81H4[19;1H[?25h[?25l[51;81H5[20;1H[?25h[?25l[51;81H6[21;1H[?25h[?25l[51;81H7[22;1H[?25h[?25l[51;81H8[23;1H[?25h[?25l[51;81H9[24;1H[?25h[?25l[51;80H50,1-8[25;8H[?25h[?25l[51;81H1[26;8H[?25h[?25l[51;81H2,1  [27;1H[?25h[?25l[51;81H3[28;1H[?25h[?25l[51;81H4[29;1H[?25h[?25l[51;81H5[30;1H[?25h[?25l[51;81H6[31;1H[?25h[?25l[51;81H7[32;1H[?25h[?25l[51;81H8[33;1H[?25h[?25l[51;81H9[34;1H[?25h[?25l[51;80H60[35;1H[?25h[?25l[51;81H1[36;1H[?25h[?25l[51;81H2[37;1H[?25h[?25l[51;81H3[38;1H[?25h[?25l[51;81H4[39;1H[?25h[?25l[51;81H5[40;1H[?25h[?25l[51;70H^[[40;1H[51;72HO[40;1H[51;70H   [40;1H[51;81H6[41;1H[?25h[?25l[51;81H7[42;1H[?25h[?25l[51;81H8[43;1H[?25h[?25l[51;70H~@k[43;1H[51;70H   [44;1H[51;81H9[44;1H[?25h[?25l[51;70H~@k[44;1H[51;70H   [45;1H[51;80H70[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"set"[m) {[51;80H[K[51;80H71,1[10C39%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5Hstd::set<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H72,1[10C40%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5HloopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H73,1[10C42%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5HnoLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H74,1[10C43%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H75,1[10C45%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"vector"[m) {[51;80H[K[51;80H76,1[10C46%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5HloopFn(ints.begin(), ints.end(), arg);[51;80H[K[51;80H77,1[10C48%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5HnoLoopFn(ints.begin(), ints.end(), arg);[51;80H[K[51;80H78,1[10C50%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H79,1[10C51%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;3H[38;5;130melse[m {[51;80H[K[51;80H80,1[10C53%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5Hstd::cerr << [31m"unknown container "[m << containerSpec << std::endl;[51;80H[K[51;80H81,1[10C54%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5Hstd::exit([31m1[m);[51;80H[K[51;80H82,1[10C56%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H83,1[10C57%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;1H}[51;80H[K[51;80H84,1[10C59%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[51;80H[K[51;80H85,1[10C60%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;1H[32mstatic[m [32mvoid[m[51;80H[K[51;80H86,1[10C62%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;1Husage(std::string progName) {[51;80H[K[51;80H87,1[10C63%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;3Hstd::cerr << [31m"usage: "[m[51;80H[K[51;80H88,1[10C65%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;13H<< progName[51;80H[K[51;80H89,1[10C66%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;13H<< [31m" CONTAINER_SPEC INTS_DATA_FILE [INT]"[m[51;80H[K[51;80H90,0-1[8C68%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;13H<< std::endl;[51;80H[K[51;80H91,1[10C69%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;3Hstd::exit([31m1[m);[51;80H[K[51;80H92,1[10C71%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;1H}[51;80H[K[51;80H93,1[10C72%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;8H[1;50r[50;1H
[1;51r[51;80H[K[51;80H94,1-8[8C74%[45;8H[?25h[?25l[51;70H~@k[45;8H[51;70H   [45;8H[1;50r[50;1H
[1;51r[51;80H[K[51;80H95,1-8[8C75%[45;8H[?25h[?25l[51;70H~@k[45;8H[51;70H   [45;8H[1;50r[50;1H
[1;51r[50;1H[32mint[m[51;80H[K[51;80H96,1-8[8C77%[45;8H[?25h[?25l[51;70H~@k[45;8H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;1Hmain([32mint[m argc, [32mchar[m* argv[])[51;80H[K[51;80H97,1[10C78%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [44;8H[51;81H6,1-8[44;8H[?25h[?25l[51;70H~@k[44;8H[51;70H   [43;8H[51;81H5[43;8H[?25h[?25l[51;70H~@k[43;8H[51;70H   [42;8H[51;81H4[42;8H[?25h[?25l[51;70H~@k[42;8H[51;70H   [41;1H[51;81H3,1  [41;1H[?25h[?25l[51;70H~@k[41;1H[51;70H   [40;1H[51;81H2[40;1H[?25h[?25l[51;70H~@k[40;1H[51;70H   [39;1H[51;81H1[39;1H[?25h[?25l[51;70H~@k[39;1H[51;70H   [38;1H[51;81H0,0-1[38;1H[?25h[?25l[51;70H~@k[38;1H[51;70H   [37;1H[51;80H89,1  [37;1H[?25h[?25l[51;70H~@k[37;1H[51;70H   [36;1H[51;81H8[36;1H[?25h[?25l[51;70H~@k[36;1H[51;70H   [35;1H[51;81H7[35;1H[?25h[?25l[51;70H~@k[35;1H[51;70H   [34;1H[51;81H6[34;1H[?25h[?25l[51;70H~@k[34;1H[51;70H   [33;1H[51;81H5[33;1H[?25h[?25l[51;70H~@k[33;1H[51;70H   [32;1H[51;81H4[32;1H[?25h[?25l[51;70H~@k[32;1H[51;70H   [31;1H[51;81H3[31;1H[?25h[?25l[51;70H~@k[31;1H[51;70H   [30;1H[51;81H2[30;1H[?25h[?25l[51;70H~@k[30;1H[51;70H   [29;1H[51;81H1[29;1H[?25h[?25l[51;70H~@k[29;1H[51;70H   [28;1H[51;81H0[28;1H[?25h[?25l[51;70H~@k[28;1H[51;70H   [27;1H[51;80H79[27;1H[?25h[?25l[51;70H~@k[27;1H[51;70H   [26;1H[51;81H8[26;1H[?25h[?25l[51;70H~@k[26;1H[51;70H   [25;1H[51;81H7[25;1H[?25h[?25l[51;70H~@k[25;1H[51;70H   [24;1H[51;81H6[24;1H[?25h[?25l[51;70H~@k[24;1H[51;70H   [23;1H[51;81H5[23;1H[?25h[?25l[51;70H~@k[23;1H[51;70H   [22;1H[51;81H4[22;1H[?25h[?25l[51;70H~@k[22;1H[51;70H   [21;1H[51;81H3[21;1H[?25h[?25l[51;70H~@k[21;1H[51;70H   [20;1H[51;81H2[20;1H[?25h[?25l[51;70H~@k[20;1H[51;70H   [19;1H[51;81H1[19;1H[?25h[?25l[51;70H~@k[19;1H[51;70H   [18;1H[51;81H0[18;1H[?25h[?25l[51;70H~@k[18;1H[51;70H   [17;1H[51;80H69[17;1H[?25h[?25l[51;70H~@k[17;1H[51;70H   [16;1H[51;81H8[16;1H[?25h[?25l[51;70H~@k[16;1H[51;70H   [15;1H[51;81H7[15;1H[?25h[?25l[51;70H~@k[15;1H[51;70H   [14;1H[51;81H6[14;1H[?25h[?25l[51;70H~@k[14;1H[51;70H   [13;1H[51;81H5[13;1H[?25h[?25l[51;70H~@k[13;1H[51;70H   [12;1H[51;81H4[12;1H[?25h[?25l[51;70H~@k[12;1H[51;70H   [11;1H[51;81H3[11;1H[?25h[?25l[51;70H~@k[11;1H[51;70H   [10;1H[51;81H2[10;1H[?25h[?25l[51;70H~@k[10;1H[51;70H   [9;1H[51;81H1[9;1H[?25h[?25l[51;70H~@k[9;1H[51;70H   [8;1H[51;81H0[8;1H[?25h[?25l[51;70H~@k[8;1H[51;70H   [7;1H[51;80H59[7;1H[?25h[?25l[51;70H~@k[7;1H[51;70H   [6;1H[51;81H8[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;5H}[51;80H[K[51;80H57,1[10C77%[6;1H[?25h[?25l[51;70HZ[6;1H[?25h[?25l[51;71HZ[6;1H[51;1H[?1000l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[51;70H[K[51;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim di[K[Kfind.hh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"find.hh" 32L, 673C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef OUT_HH_
#define OUT_HH_

#include [m[31m<vector>[m
[35m#include [m[31m<algorithm>[m

[38;5;130musing[m [32mnamespace[m std;

[34m/** Output a line containing [m[31m"FOUND"[m[34m if arg is found in [begin, end),
 *  otherwise output [m[31m"NOT FOUND"[m[34m..
 */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m loopFn(Iterator begin, Iterator end, [32mint[m arg) {[14;9H[38;5;130mwhile[m(begin != end)[15;17H[38;5;130mif[m(*begin == arg)[16;17H{[17;25Hcout << [31m"FOUND"[m << endl;[18;25H[38;5;130mreturn[m;[19;17H}[20;9Hcout << [31m"NOT FOUND"[m << endl;
}

[34m/** Exactly like loopFn() but no loops should be used */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m noLoopFn(Iterator begin, Iterator end, [32mint[m arg) {[26;9H[38;5;130mif[m(find(begin, end, arg) != end)[27;17Hcout << [31m"FOUND"[m << endl;[28;9H[38;5;130melse[m[29;17Hcout << [31m"NOT FOUND"[m << endl;
}

[35m#endif[m [34m//ifndef OUT_HH_[m
[94m~                                                                                                [34;1H~                                                                                                [35;1H~                                                                                                [36;1H~                                                                                                [37;1H~                                                                                                [38;1H~                                                                                                [39;1H~                                                                                                [40;1H~                                                                                                [41;1H~                                                                                                [42;1H~                                                                                                [43;1H~                                                                                                [44;1H~                                                                                                [45;1H~                                                                                                [46;1H~                                                                                                [47;1H~                                                                                                [48;1H~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H7,20[10CAll[7;20H[?25h[?25l[51;80H6,0-1[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [5;20H[51;80H5,20 [5;20H[?25h[?25l[51;70H~@k[5;20H[51;70H   [4;17H[51;80H4,17[4;17H[?25h[?25l[51;70H~@k[4;17H[51;70H   [3;1H[51;80H3,0-1[3;1H[?25h[?25l[51;70H~@k[3;1H[51;70H   [4;17H[51;80H4,17 [4;17H[?25h[?25l[51;70H~@k[4;17H[51;70H   [5;20H[51;80H5,20[5;20H[?25h[?25l[51;70H~@k[5;20H[51;70H   [6;1H[51;80H6,0-1[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [7;20H[51;80H7,20 [7;20H[?25h[?25l[51;70H~@k[7;20H[51;70H   [8;1H[51;80H8,0-1[8;1H[?25h[?25l[51;70H~@k[8;1H[51;70H   [9;20H[51;80H9,20 [9;20H[?25h[?25l[51;70H~@k[9;20H[51;70H   [10;20H[51;80H10,20[10;20H[?25h[?25l[51;70H~@k[10;20H[51;70H   [11;3H[51;81H1,3 [11;3H[?25h[?25l[51;70H~@k[11;3H[51;70H   [12;20H[51;81H2,20[12;20H[?25h[?25l[51;70H~@k[12;20H[51;70H   [13;20H[51;81H3[13;20H[?25h[?25l[51;70H~@k[13;20H[51;70H   [14;20H[51;81H4,13-20[14;20H[?25h[?25l[51;70H~@k[14;20H[51;70H   [15;20H[51;81H5,6-20 [15;20H[?25h[?25l[51;70H~@k[15;20H[51;70H   [16;17H[106m{[19;17H}[m[51;81H6,3-17[16;17H[?25h[?25l[51;70H~@k[16;17H[51;70H   [17;24H[16;17H{[19;17H}[51;81H7,3-24[17;24H[?25h[?25l[51;70H~@k[17;24H[51;70H   [18;24H[51;81H8[18;24H[?25h[?25l[51;70H~@k[18;24H[51;70H   [19;17H[16;17H[106m{[19;17H}[m[51;81H9,3-17[19;17H[?25h[?25l[51;70HZZ[19;17H[51;1H[?1000l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[51;1H[K[51;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim main.
main.cc  main.o   
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim main.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 116L, 3176C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"find.hh"[m

[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream fstream;
  [38;5;130mif[m (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  [38;5;130mif[m (!in) {
    [38;5;130mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[19;33H[31m": "[m + std::strerror(errno));
  }
  [34m//construct a vector from an istream_iterator on istream in.
[m  [34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[24;25Hstd::istream_iterator<[32mint[m>());
  [34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}


[32mstatic[m [32mvoid[m
go(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {
    [32mint[m fixedArr[ints.size()];
    [32mint[m i = [31m0[m;
    [38;5;130mfor[m([32mauto[m x : ints)
    {[38;13HfixedArr[i] = x;[39;13Hi++;
    }
    loopFn(fixedArr, fixedArr + ints.size(), arg);
    noLoopFn(fixedArr, fixedArr + ints.size(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"deque"[m) {
    std::deque<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {
    std::forward_list<[32mint[m> container(ints.begin(), ints.end());[51;80H57,1[10C18%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [44;1H[51;81H6[44;1H[?25h[?25l[51;81H5[43;1H[?25h[?25l[51;81H4[42;1H[?25h[?25l[51;81H3[41;1H[?25h[?25l[51;81H2[40;1H[?25h[?25l[51;81H1,1-8[39;8H[?25h[?25l[51;81H0[38;8H[?25h[?25l[51;80H49,1  [37;1H[?25h[?25l[51;81H8[36;1H[?25h[?25l[51;81H7[35;1H[?25h[?25l[51;81H6[34;1H[?25h[?25l[51;81H5[33;1H[?25h[?25l[51;81H4[32;1H[?25h[?25l[51;81H3[31;1H[?25h[?25l[51;70H~@k[31;1H[51;70H   [30;1H[51;81H2[30;1H[?25h[?25l[51;70H~@k[30;1H[51;70H   [29;1H[51;81H1,0-1[29;1H[?25h[?25l[51;70H~@k[29;1H[51;70H   [28;1H[51;81H0[28;1H[?25h[?25l[51;70H~@k[28;1H[51;70H   [27;1H[12;1H[106m{[27;1H}[m[51;80H39,1  [27;1H[?25h[?25l[51;70H~@k[27;1H[51;70H   [26;1H[12;1H{[27;1H}[51;81H8[26;1H[?25h[?25l[51;70H~@k[26;1H[51;70H   [25;1H[51;81H7[25;1H[?25h[?25l[51;70H~@k[25;1H[51;70H   [24;8H[51;81H6,1-8[24;8H[?25h[?25l[51;70H~@k[24;8H[51;70H   [23;1H[51;81H5,1  [23;1H[?25h[?25l[51;70H~@k[23;1H[51;70H   [22;1H[51;81H4[22;1H[?25h[?25l[51;70H~@k[22;1H[51;70H   [21;1H[51;81H3[21;1H[?25h[?25l[51;70H~@k[21;1H[51;70H   [20;1H[51;81H2[20;1H[?25h[?25l[51;70H~@k[20;1H[51;70H   [19;8H[51;81H1,1-8[19;8H[?25h[?25l[51;70H~@k[19;8H[51;70H   [18;1H[51;81H0,1  [18;1H[?25h[?25l[51;70H~@k[18;1H[51;70H   [17;1H[51;80H29[17;1H[?25h[?25l[51;70H~@k[17;1H[51;70H   [16;1H[51;81H8[16;1H[?25h[?25l[51;70H~@k[16;1H[51;70H   [15;1H[51;81H7[15;1H[?25h[?25l[51;70H~@k[15;1H[51;70H   [14;1H[51;81H6[14;1H[?25h[?25l[51;70H~@k[14;1H[51;70H   [13;1H[51;81H5[13;1H[?25h[?25l[51;70H~@k[13;1H[51;70H   [12;1H[106m{[27;1H}[m[51;81H4[12;1H[?25h[?25l[51;70H~@k[12;1H[51;70H   [11;1H
{[27;1H}[51;81H3[11;1H[?25h[?25l[51;70H~@k[11;1H[51;70H   [10;1H[51;81H2[10;1H[?25h[?25l[51;70H~@k[10;1H[51;70H   [9;1H[51;81H1[9;1H[?25h[?25l[51;70H~@k[9;1H[51;70H   [8;1H[51;81H0[8;1H[?25h[?25l[51;70H~@k[8;1H[51;70H   [7;1H[51;80H19[7;1H[?25h[?25l[51;70H~@k[7;1H[51;70H   [6;1H[51;81H8,0-1[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;1H[35m#include [m[31m<vector>[m[51;1H[K[51;80H17,1[10C16%[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;1H[35m#include [m[31m<set>[m[51;80H[K[51;80H16,0-1[8C15%[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;1H[35m#include [m[31m<list>[m[51;80H[K[51;80H15,1[10C13%[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;1H[35m#include [m[31m<forward_list>[m[51;80H[K[51;80H14,1[10C12%[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;1H[35m#include [m[31m<deque>[m[51;80H[K[51;80H13,0-1[8C10%[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[51;80H[K[51;80H12,1[11C9%[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;1H[35m#include [m[31m<utility>[m[51;80H[K[51;80H11,1[11C7%[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;1H[35m#include [m[31m<string>[m[51;80H[K[51;80H10,1[11C6%[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;1H[35m#include [m[31m<iterator>[m[51;80H[K[51;80H9,1[12C4%[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;1H[35m#include [m[31m<iostream>[m[51;80H[K[51;80H8,1[12C3%[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;1H[35m#include [m[31m<fstream>[m[51;80H[K[51;80H7,0-1[10C1%[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;1H[35m#include [m[31m<algorithm>[m[51;80H[K[51;80H6,1[11CTop[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [5;1H[51;80H5[5;1H[?25h[?25l[51;70H~@k[5;1H[51;70H   [4;1H[51;80H4[4;1H[?25h[?25l[51;70H~@k[4;1H[51;70H   [3;1H[51;80H3[3;1H[?25h[?25l[51;70HZ[3;1H[?25h[?25l[51;71HZ[3;1H[51;1H[?1000l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[51;70H[K[51;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ls
find.hh  main  main.cc	main.o
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ make -f ../Makefile [1@c[1@l[1@e[1@a[1@n[1@ 
rm -rf *.o *~ main .deps .gitignore
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ls
find.hh  main.cc
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ make -f ../Makefile 
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main main.o; do echo $t >>.gitignore; done
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ make -f ../Makefile ls[Kmake clean -f ../Makefile ls[Kvim main.cc find.hh[Cmain.cc[C./main vector ../test.data 6[K
56
3
4


d ^C
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim main.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 116L, 3176C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<iterator>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<utility>[m

[35m#include [m[31m<deque>[m
[35m#include [m[31m<forward_list>[m
[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"find.hh"[m

[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream fstream;
  [38;5;130mif[m (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  [38;5;130mif[m (!in) {
    [38;5;130mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[31;33H[31m": "[m + std::strerror(errno));
  }
  [34m//construct a vector from an istream_iterator on istream in.
[m  [34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[36;25Hstd::istream_iterator<[32mint[m>());
  [34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}


[32mstatic[m [32mvoid[m
go(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {
    [32mint[m fixedArr[ints.size()];
    [32mint[m i = [31m0[m;
    [38;5;130mfor[m([32mauto[m x : ints)
    {[50;13HfixedArr[i] = x;[51;80H3,1[11CTop[3;1H[?25h[?25l[51;70H~@k[3;1H[51;70H   [4;1H[51;80H4[4;1H[?25h[?25l[51;80H5[5;1H[?25h[?25l[51;80H6[6;1H[?25h[?25l[51;80H7,0-1[7;1H[?25h[?25l[51;80H8,1  [8;1H[?25h[?25l[51;80H9[9;1H[?25h[?25l[51;80H10,1[10;1H[?25h[?25l[51;81H1[11;1H[?25h[?25l[51;81H2[12;1H[?25h[?25l[51;81H3,0-1[13;1H[?25h[?25l[51;81H4,1  [14;1H[?25h[?25l[51;81H5[15;1H[?25h[?25l[51;81H6,0-1[16;1H[?25h[?25l[51;81H7,1  [17;1H[?25h[?25l[51;81H8,0-1[18;1H[?25h[?25l[51;81H9,1  [19;1H[?25h[?25l[51;80H20[20;1H[?25h[?25l[51;81H1[21;1H[?25h[?25l[51;81H2[22;1H[?25h[?25l[51;81H3[23;1H[?25h[?25l
[106m{[39;1H}[m[51;81H4[24;1H[?25h[?25l{[39;1H}[51;81H5[25;1H[?25h[?25l[51;81H6[26;1H[?25h[?25l[51;70H^[[26;1H[51;70H  [26;1H[51;70H~@k[26;1H[51;70H   [27;1H[51;81H7[27;1H[?25h[?25l[51;81H8[28;1H[?25h[?25l[51;81H9[29;1H[?25h[?25l[51;80H30[30;1H[?25h[?25l[51;70H~@k[30;1H[51;70H   [31;8H[51;81H1,1-8[31;8H[?25h[?25l[51;70H~@k[31;8H[51;70H   [32;1H[51;81H2,1  [32;1H[?25h[?25l[51;70H~@k[32;1H[51;70H   [33;1H[51;81H3[33;1H[?25h[?25l[51;70H~@k[33;1H[51;70H   [34;1H[51;81H4[34;1H[?25h[?25l[51;70H~@k[34;1H[51;70H   [35;1H[51;81H5[35;1H[?25h[?25l[51;70H~@k[35;1H[51;70H   [36;8H[51;81H6,1-8[36;8H[?25h[?25l[51;70H~@k[36;8H[51;70H   [37;1H[51;81H7,1  [37;1H[?25h[?25l[51;70H~@k[37;1H[51;70H   [38;1H[51;81H8[38;1H[?25h[?25l[51;70H~@k[38;1H[51;70H   [39;1H[24;1H[106m{[39;1H}[m[51;81H9[39;1H[?25h[?25l[51;70H~@k[39;1H[51;70H   [40;1H[24;1H{[39;1H}[51;80H40,0-1[40;1H[?25h[?25l[51;70H~@k[40;1H[51;70H   [41;1H[51;81H1[41;1H[?25h[?25l[51;70H~@k[41;1H[51;70H   [42;1H[51;81H2,1  [42;1H[?25h[?25l[51;70H~@k[42;1H[51;70H   [43;1H[51;81H3[43;1H[?25h[?25l[51;70H~@k[43;1H[51;70H   [44;1H[51;81H4[44;1H[?25h[?25l[51;70H~@k[44;1H[51;70H   [45;1H[51;81H5[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;13Hi++;[51;1H[K[51;80H46,1[11C1%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5H}[51;80H[K[51;80H47,1[11C3%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5HloopFn(fixedArr, fixedArr + ints.size(), arg);[51;80H[K[51;80H48,1[11C4%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5HnoLoopFn(fixedArr, fixedArr + ints.size(), arg);[51;80H[K[51;80H49,1[11C6%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;8H[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H50,1-8[9C7%[45;8H[?25h[?25l[51;70H~@k[45;8H[51;70H   [45;8H[1;50r[50;1H
[1;51r[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"deque"[m) {[51;80H[K[51;80H51,1-8[9C9%[45;8H[?25h[?25l[51;70H~@k[45;8H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5Hstd::deque<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H52,1[10C10%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5HloopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H53,1[10C12%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5HnoLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H54,1[10C13%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H55,1[10C15%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {[51;80H[K[51;80H56,1[10C16%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5Hstd::forward_list<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H57,1[10C18%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5HloopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H58,1[10C19%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5HnoLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H59,1[10C21%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H60,1[10C22%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {[51;80H[K[51;80H61,1[10C24%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5Hstd::list<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H62,1[10C25%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5HloopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H63,1[10C27%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5HnoLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H64,1[10C28%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H65,1[10C30%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"multiset"[m) {[51;80H[K[51;80H66,1[10C31%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5Hstd::multiset<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H67,1[10C33%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5HloopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H68,1[10C34%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5HnoLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H69,1[10C36%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H70,1[10C37%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"set"[m) {[51;80H[K[51;80H71,1[10C39%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5Hstd::set<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H72,1[10C40%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5HloopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H73,1[10C42%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5HnoLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H74,1[10C43%[45;1H[?25h[?25l[51;70H^[[45;1H[51;70H  [45;1H[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H75,1[10C45%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"vector"[m) {[51;80H[K[51;80H76,1[10C46%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5HloopFn(ints.begin(), ints.end(), arg);[51;80H[K[51;80H77,1[10C48%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5HnoLoopFn(ints.begin(), ints.end(), arg);[51;80H[K[51;80H78,1[10C50%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H79,1[10C51%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H[38;5;130melse[m {[51;80H[K[51;80H80,1[10C53%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5Hstd::cerr << [31m"unknown container "[m << containerSpec << std::endl;[51;80H[K[51;80H81,1[10C54%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5Hstd::exit([31m1[m);[51;80H[K[51;80H82,1[10C56%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H83,1[10C57%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H}[51;80H[K[51;80H84,1[10C59%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[51;80H[K[51;80H85,1[10C60%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[32mstatic[m [32mvoid[m[51;80H[K[51;80H86,1[10C62%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;1Husage(std::string progName) {[51;80H[K[51;80H87,1[10C63%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3Hstd::cerr << [31m"usage: "[m[51;80H[K[51;80H88,1[10C65%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;13H<< progName[51;80H[K[51;80H89,1[10C66%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;13H<< [31m" CONTAINER_SPEC INTS_DATA_FILE [INT]"[m[51;80H[K[51;80H90,0-1[8C68%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;13H<< std::endl;[51;80H[K[51;80H91,1[10C69%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3Hstd::exit([31m1[m);[51;80H[K[51;80H92,1[10C71%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H}[51;80H[K[51;80H93,1[10C72%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[51;80H[K[51;80H94,1-8[8C74%[45;8H[?25h[?25l[1;50r[50;1H
[1;51r[51;80H[K[51;80H95,1-8[8C75%[45;8H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[32mint[m[51;80H[K[51;80H96,1-8[8C77%[45;8H[?25h[?25l[1;50r[50;1H
[1;51r[50;1Hmain([32mint[m argc, [32mchar[m* argv[])[51;80H[K[51;80H97,1[10C78%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[39;29H[106m{[45;1H}[m[50;1H{[51;80H[K[51;80H98,1[10C80%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[38;29H{[44;1H}[50;3H[38;5;130mtry[m {[51;80H[K[51;80H99,0-1[8C81%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5H[38;5;130mif[m (argc != [31m3[m && argc != [31m4[m) usage(argv[[31m0[m]);[51;80H[K[51;80H100,0-1[7C83%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5H[32mconst[m std::string containerSpec(argv[[31m1[m]);[51;80H[K[51;80H101,1[9C84%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5H[32mconst[m std::string filePath(argv[[31m2[m]);[51;80H[K[51;80H102,1[9C86%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;5Hstd::vector<[32mint[m> ints = readIntsFromFile(filePath);[51;80H[K[51;80H103,1[9C87%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5H[32mconst[m [32mint[m arg = (argc == [31m4[m) ? atoi(argv[[31m3[m]) : [31m0[m;[51;80H[K[51;80H104,1[9C89%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5Hgo(containerSpec, ints, arg);[51;80H[K[51;80H105,1[9C90%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H106,1[9C92%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H[38;5;130mcatch[m ([32mconst[m std::exception& err) {[51;80H[K[51;80H107,1[9C93%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;5Hstd::cerr << err.what() << std::endl;[51;80H[K[51;80H108,1[9C95%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H109,1[9C96%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[51;80H[K[51;80H110,1[9C98%[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [45;1H[1;50r[50;1H
[1;51r[50;1H}[51;80H[K[51;80H111,1[9CBot[45;1H[?25h[?25l[51;70H~@k[45;1H[51;70H   [44;1H[51;82H0[44;1H[?25h[?25l[51;70HZ[44;1H[?25h[?25l[51;71HZ[44;1H[51;1H[?1000l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[51;70H[K[51;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim main.cc [15@./main vector ../test.data[C[1P[1P[1P[1P[1P[1P[1@[[1@][C[C[C[C[C[C[C[C[C[C[C[C[C[C5
45
^C
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ;[Kls
find.hh  main  main.cc	main.o
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ./main 
usage: ./main CONTAINER_SPEC INTS_DATA_FILE [INT]
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ./main vector - 56
3
4
2
23
56
4

/n
^C
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ cat main.cc 
#include <algorithm>
#include <fstream>
#include <iostream>
#include <iterator>
#include <string>
#include <utility>

#include <deque>
#include <forward_list>
#include <list>
#include <set>
#include <vector>

#include <cstdlib>
#include <cstring>

#include "find.hh"

/** Return vector of int's read from filePath.  If filePath is
 *  "-" read from stdin.
 */
static std::vector<int>
readIntsFromFile(const std::string filePath)
{
  bool isStdin = filePath == "-";
  std::ifstream fstream;
  if (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  if (!in) {
    throw std::invalid_argument(std::string("cannot read ") + filePath +
				": " + std::strerror(errno));
  }
  //construct a vector from an istream_iterator on istream in.
  //The two arguments give the begin and end of the iterator.
  std::vector<int> ints((std::istream_iterator<int>(in)),
			std::istream_iterator<int>());
  //no in.close(); depend on RAII
  return ints;
}


static void
go(std::string containerSpec, std::vector<int> ints, int arg)
{
  if (containerSpec == "[]") {
    int fixedArr[ints.size()];
    int i = 0;
    for(auto x : ints)
    {
	    fixedArr[i] = x;
	    i++;
    }
    loopFn(fixedArr, fixedArr + ints.size(), arg);
    noLoopFn(fixedArr, fixedArr + ints.size(), arg);
  }
  else if (containerSpec == "deque") {
    std::deque<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "forward_list") {
    std::forward_list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "list") {
    std::list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "multiset") {
    std::multiset<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "set") {
    std::set<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "vector") {
    loopFn(ints.begin(), ints.end(), arg);
    noLoopFn(ints.begin(), ints.end(), arg);
  }
  else {
    std::cerr << "unknown container " << containerSpec << std::endl;
    std::exit(1);
  }
}

static void
usage(std::string progName) {
  std::cerr << "usage: "
	    << progName
	    << " CONTAINER_SPEC INTS_DATA_FILE [INT]"
	    << std::endl;
  std::exit(1);
}


int
main(int argc, char* argv[])
{
  try {
    if (argc != 3 && argc != 4) usage(argv[0]);
    const std::string containerSpec(argv[1]);
    const std::string filePath(argv[2]);
    std::vector<int> ints = readIntsFromFile(filePath);
    const int arg = (argc == 4) ? atoi(argv[3]) : 0;
    go(containerSpec, ints, arg);
  }
  catch (const std::exception& err) {
    std::cerr << err.what() << std::endl;
  }

}
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ZZ[K[Kcd ..
tman1@remote00:~/i240b/submit/lab7/exercises$ ls
1-out  2-find  3-sort  4-rm  Makefile  test.data
tman1@remote00:~/i240b/submit/lab7/exercises$ cd 1-out/
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ls
main  main.cc  main.o  out.hh
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main ls[Kcd 1-out/ls[Kcd ..at main.cc ./main vector - 56
3
45
234
3
[ 3 45 234 3 ]
[ 3 45 234 3 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ ./main vector - 56[C[1P[1P[1P[1P[1P[1P[2@[]
234
23
[ 234 23 ]
[ 234 23 ]
tman1@remote00:~/i240b/submit/lab7/exercises/1-out$ cd ..
tman1@remote00:~/i240b/submit/lab7/exercises$ cd 2-find/
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ls
find.hh  main  main.cc	main.o
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ .lscd 2-find/..[K./main [] - 56[9Pcd ..2-find/..[K./main [] - 56[1P[1P[1@v[1@e[1@c[1@t[1@o[1@r[C[C[1P 56. 56. 56/ 56
1-out/     2-find/    3-sort/    4-rm/      Makefile   test.data  
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ./main vector ../ 56t 56est.data 56
^C
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim find.hh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"find.hh" 32L, 673C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef OUT_HH_
#define OUT_HH_

#include [m[31m<vector>[m
[35m#include [m[31m<algorithm>[m

[38;5;130musing[m [32mnamespace[m std;

[34m/** Output a line containing [m[31m"FOUND"[m[34m if arg is found in [begin, end),
 *  otherwise output [m[31m"NOT FOUND"[m[34m..
 */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m loopFn(Iterator begin, Iterator end, [32mint[m arg) {[14;9H[38;5;130mwhile[m(begin != end)[15;17H[38;5;130mif[m(*begin == arg)[16;17H[106m{[m[17;25Hcout << [31m"FOUND"[m << endl;[18;25H[38;5;130mreturn[m;[19;17H[106m}[m[20;9Hcout << [31m"NOT FOUND"[m << endl;
}

[34m/** Exactly like loopFn() but no loops should be used */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m noLoopFn(Iterator begin, Iterator end, [32mint[m arg) {[26;9H[38;5;130mif[m(find(begin, end, arg) != end)[27;17Hcout << [31m"FOUND"[m << endl;[28;9H[38;5;130melse[m[29;17Hcout << [31m"NOT FOUND"[m << endl;
}

[35m#endif[m [34m//ifndef OUT_HH_[m
[94m~                                                                                                [34;1H~                                                                                                [35;1H~                                                                                                [36;1H~                                                                                                [37;1H~                                                                                                [38;1H~                                                                                                [39;1H~                                                                                                [40;1H~                                                                                                [41;1H~                                                                                                [42;1H~                                                                                                [43;1H~                                                                                                [44;1H~                                                                                                [45;1H~                                                                                                [46;1H~                                                                                                [47;1H~                                                                                                [48;1H~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H19,3-17[7CAll[19;17H[?25h[?25l[51;70H~@k[19;17H[51;70H   [18;24H[16;17H{[19;17H}[51;81H8,3-24[18;24H[?25h[?25l[51;70H~@k[18;24H[51;70H   [17;24H[51;81H7[17;24H[?25h[?25l[51;70H~@k[17;24H[51;70H   [16;17H[106m{[19;17H}[m[51;81H6,3-17[16;17H[?25h[?25l{[19;17H}[51;81H5[15;17H[?25h[?25l[51;81H4,10-17[14;17H[?25h[?25l[51;81H3,17   [13;17H[?25h[?25l[51;81H2[12;17H[?25h[?25l[51;81H1,3 [11;3H[?25h[?25l[51;81H0,17[10;17H[?25h[?25l[51;80H9,17 [9;17H[?25h[?25l[51;80H8,0-1[8;1H[?25h[?25l[51;80H7,17 [7;17H[?25h[?25l[51;80H6,0-1[6;1H[?25h[?25l[51;80H5,17 [5;17H[?25h[?25l[51;80H4[4;17H[?25h[?25l[51;80H3,0-1[3;1H[?25h[?25l[51;70H~@k[3;1H[51;70H   [2;15H[51;80H2,15 [2;15H[?25h[?25l[51;70H~@k[2;15H[51;70H   [3;1H[51;80H3,0-1[3;1H[?25h[?25l[51;70H~@k[3;1H[51;70H   [4;17H[51;80H4,17 [4;17H[?25h[?25l[51;70H~@k[4;17H[51;70H   [5;17H[51;80H5[5;17H[?25h[?25l[51;70H~@k[5;17H[51;70H   [6;1H[51;80H6,0-1[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [7;17H[51;80H7,17 [7;17H[?25h[?25l[51;70H~@k[7;17H[51;70H   [8;1H[51;80H8,0-1[8;1H[?25h[?25l[51;70H~@k[8;1H[51;70H   [9;17H[51;80H9,17 [9;17H[?25h[?25l[51;70H~@k[9;17H[51;70H   [10;17H[51;80H10,17[10;17H[?25h[?25l[51;70H~@k[10;17H[51;70H   [11;3H[51;81H1,3 [11;3H[?25h[?25l[51;70H~@k[11;3H[51;70H   [12;17H[51;81H2,17[12;17H[?25h[?25l[51;70H~@k[12;17H[51;70H   [13;17H[51;81H3[13;17H[?25h[?25l[51;70H~@k[13;17H[51;70H   [14;17H[51;81H4,10-17[14;17H[?25h[?25l[51;70H~@k[14;17H[51;70H   [15;17H[51;81H5,3-17 [15;17H[?25h[?25l[51;70H~@k[15;17H[51;70H   [16;17H[106m{[19;17H}[m[51;81H6[16;17H[?25h[?25l[51;70H~@k[16;17H[51;70H   [17;24H[16;17H{[19;17H}[51;81H7,3-24[17;24H[?25h[?25l[51;70H~@k[17;24H[51;70H   [18;24H[51;81H8[18;24H[?25h[?25l[51;70H~@k[18;24H[51;70H   [19;17H[16;17H[106m{[19;17H}[m[51;81H9,3-17[19;17H[?25h[?25l[51;70H~@k[19;17H[51;70H   [18;24H[16;17H{[19;17H}[51;81H8,3-24[18;24H[?25h[?25l[51;70H~@k[18;24H[51;70H   [17;24H[51;81H7[17;24H[?25h[?25l[51;70H~@k[17;24H[51;70H   [16;17H[106m{[19;17H}[m[51;81H6,3-17[16;17H[?25h[?25l[51;70H~@k[16;17H[51;70H   [15;17H[16;17H{[19;17H}[51;81H5[15;17H[?25h[?25l[51;70H~@k[15;17H[51;70H   [14;17H[51;81H4,10-17[14;17H[?25h[?25l[51;70H~@k[14;17H[51;70H   [13;17H[51;81H3,17   [13;17H[?25h[?25l[51;70H~@k[13;17H[51;70H   [12;17H[51;81H2[12;17H[?25h[?25l[51;70H~@k[12;17H[51;70H   [11;3H[51;81H1,3 [11;3H[?25h[?25l[51;70H~@k[11;3H[51;70H   [10;17H[51;81H0,17[10;17H[?25h[?25l[51;70H~@k[10;17H[51;70H   [9;17H[51;80H9,17 [9;17H[?25h[?25l[51;70H~@k[9;17H[51;70H   [8;1H[51;80H8,0-1[8;1H[?25h[?25l[51;70H~@k[8;1H[51;70H   [7;17H[51;80H7,17 [7;17H[?25h[?25l[51;70H~@k[7;17H[51;70H   [6;1H[51;80H6,0-1[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [5;17H[51;80H5,17 [5;17H[?25h[?25l[51;70H~@k[5;17H[51;70H   [4;17H[51;80H4[4;17H[?25h[?25l[51;70H~@k[4;17H[51;70H   [3;1H[51;80H3,0-1[3;1H[?25h[?25l[51;70H~@k[3;1H[51;70H   [4;17H[51;80H4,17 [4;17H[?25h[?25l[51;80H5[5;17H[?25h[?25l[51;80H6,0-1[6;1H[?25h[?25l[51;80H7,17 [7;17H[?25h[?25l[51;80H8,0-1[8;1H[?25h[?25l[51;80H9,17 [9;17H[?25h[?25l[51;70H~@k[9;17H[51;70H   [10;17H[51;80H10,17[10;17H[?25h[?25l[51;70H~@k[10;17H[51;70H   [11;3H[51;81H1,3 [11;3H[?25h[?25l[51;81H2,17[12;17H[?25h[?25l[51;81H3[13;17H[?25h[?25l[51;70H~@k[13;17H[51;70H   [14;17H[51;81H4,10-17[14;17H[?25h[?25l[51;70H~@k[14;17H[51;70H   [15;17H[51;81H5,3-17 [15;17H[?25h[?25l[51;70H~@k[15;17H[51;70H   [16;17H[106m{[19;17H}[m[51;81H6[16;17H[?25h[?25l[51;70H~@k[16;17H[51;70H   [15;17H[16;17H{[19;17H}[51;81H5[15;17H[?25h[?25l[51;70H~@k[15;17H[51;70H   [15;18H[51;83H4-18[15;18H[?25h[?25l[51;70H~@k[15;18H[51;70H   [14;18H[51;81H4,11-18[14;18H[?25h[?25l[51;70H~@k[14;18H[51;70H   [14;19H[51;84H2-19[14;19H[?25h[?25l[51;70H~@k[14;19H[51;70H   [14;20H[51;84H3-20[14;20H[?25h[?25l[51;70H~@k[14;20H[51;70H   [14;21H[51;84H4-21[14;21H[?25h[?25l[51;70H~@k[14;21H[51;70H   [14;22H[51;84H5-22[14;22H[?25h[?25l[51;70H~@k[14;22H[51;70H   [14;23H[51;84H6-23[14;23H[?25h[?25l[51;70H~@k[14;23H[51;70H   [14;24H[51;84H7-24[14;24H[?25h[?25l[51;70H~@k[14;24H[51;70H   [14;25H[51;84H8-25[14;25H[?25h[?25l[51;70H~@k[14;25H[51;70H   [14;26H[51;84H9-26[14;26H[?25h[?25l[51;70H~@k[14;26H[51;70H   [14;27H[14;14H[106m([12C)[m[51;83H20-27[14;27H[?25h[?25l[51;70H~@k[14;27H[51;70H   [14;27H[?25h[?25l[51;70H~@k[14;27H[51;70H   [14;27H[?25h[?25l[51;70H~@k[14;27H[51;70H   [14;27H[?25h[?25l[51;70H~@k[14;27H[51;70H   [14;27H[?25h[?25l[51;70H~@k[14;27H[51;70H   [14;27H[?25h[?25l[51;70H~@k[14;27H[51;70H   [14;27H[?25h[?25l[51;70H~@k[14;27H[51;70H   [14;27H[?25h[?25l[51;70H~@k[14;27H[51;70H   [14;27H[?25h[?25l[51;70H~@k[14;27H[51;70H   [14;27H[?25h[?25l[51;70H~@k[14;27H[51;70H   [14;27H[?25h[?25l[51;70H~@k[14;27H[51;70H   [14;27H[?25h[?25l[51;70H~@k[14;27H[51;70H   [14;27H[?25h[?25l[51;70Hi[14;27H[51;70H [14;27H[51;1H[1m-- INSERT --[m[51;13H[K[51;80H14,20-27      All[14;27H[?25h[?25l[51;84H1-28[14;28H[?25h[?25l[15;50r[15;1H[L[1;51r[51;80H[K[51;80H15,3-17[7CAll[14;14H([12C)[15;17H[?25h[?25l}[13;52H[106m{

}[m[51;83H2   [15;2H[?25h[?25l[51;83H1[15;1H[?25h[?25l[106m        [m}        [106m}[m[51;83H2-9[15;9H[?25h[?25l[13;52H{[15;9H}[51;81H6[16;9H[?25h[?25l[51;81H7[17;9H[?25h[?25l[51;81H8[18;9H[?25h[?25l[51;81H9[19;9H[?25h[?25l[51;80H20[20;9H[?25h[?25l[17;17H[106m{[20;17H}[m[51;83H3-17[20;17H[?25h[?25l[51;83H4-18[20;18H[?25h[?25l[21;50r[21;1H[L[1;51r[21;1H}[51;80H[K[51;80H21,2[10CAll[17;17H{[20;17H}
}[?25h[?25l[51;83H1[21;1H[?25h[?25l [7C}[51;83H2-9[21;9H[?25h[?25l[51;83H3-10[21;10H[?25h[?25l[51;81H0,2-9 [20;9H[?25h[?25l[17;17H[106m{[20;17H}[m[51;83H3-17[20;17H[?25h[?25l[51;83H4-18[20;18H[?25h[?25l[21;50r[21;1H[L[1;51r[51;80H[K[51;80H21,1[10CAll[17;17H{[20;17H}
[?25h[?25lb[51;83H2[21;2H[?25h[?25le[51;83H3[21;3H[?25h[?25lg[51;83H4[21;4H[?25h[?25li[51;83H5[21;5H[?25h[?25ln[51;83H6[21;6H[?25h[?25l[21;5H[K[51;83H5[21;5H[?25h[?25l[21;4H[K[51;83H4[21;4H[?25h[?25l[21;3H[K[51;83H3[21;3H[?25h[?25l[21;2H[K[51;83H2[21;2H[?25h[?25l[21;1H[K[51;83H1[21;1H[?25h[?25l[20;50r[50;1H
[1;51r[20;17H}[50;1H[94m~                                                                                                [m[51;80H[K[51;80H20,4-18[7CAll[17;17H[106m{[20;17H}[?25h[?25l[21;50r[m[21;1H[L[1;51r[51;80H[K[51;80H21,1[10CAll[17;17H{[20;17H}
[?25h[?25l[51;83H2-9[21;9H[?25h[?25lb[51;83H3-10[21;10H[?25h[?25le[51;83H4-11[21;11H[?25h[?25l[21;10H[K[51;83H3-10[21;10H[?25h[?25l[21;9H[K[51;83H2-9 [21;9H[?25h[?25l[51;83H3-17[21;17H[?25h[?25lb[51;83H4-18[21;18H[?25h[?25le[51;83H5-19[21;19H[?25h[?25lg[51;83H6-20[21;20H[?25h[?25li[51;83H7-21[21;21H[?25h[?25ln[51;83H8-22[21;22H[?25h[?25l+[51;83H9-23[21;23H[?25h[?25l+[51;83H10-24[21;24H[?25h[?25l;[51;84H1-25[21;25H[?25h[51;1H[K[21;24H[?25l[51;70H^[[21;24H[51;70H  [21;25H[51;80H21,10-24      All[21;24H[?25h[?25l[51;70HZ[21;24H[?25h[?25l[51;71HZ[21;24H[?1000l[?2004l[51;1H"find.hh"[51;70H[K[51;11H35L, 690C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/2-find$ make -f ../Makefile 
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
In file included from [01m[Kmain.cc:17[m[K:
[01m[Kfind.hh:[m[K In function ‘[01m[Kvoid loopFn(Iterator, Iterator, int)[m[K’:
[01m[Kfind.hh:15:2:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K}[m[K’ token
  [01;31m[K}[m[K
  [01;31m[K^[m[K
[01m[Kfind.hh:[m[K At global scope:
[01m[Kfind.hh:16:3:[m[K [01;31m[Kerror: [m[Kexpected unqualified-id before ‘[01m[Kif[m[K’
   [01;31m[Kif[m[K(*begin == arg)
   [01;31m[K^~[m[K
[01m[Kfind.hh:21:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbegin[m[K’ does not name a type; did you mean ‘[01m[Krewind[m[K’?
   [01;31m[Kbegin[m[K++;
   [01;31m[K^~~~~[m[K
   [32m[Krewind[m[K
[01m[Kfind.hh:22:2:[m[K [01;31m[Kerror: [m[Kexpected declaration before ‘[01m[K}[m[K’ token
  [01;31m[K}[m[K
  [01;31m[K^[m[K
make: *** [../Makefile:48: main.o] Error 1
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ make -f ../Makefile [8Pvim find.hh[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"find.hh" 35L, 690C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef OUT_HH_
#define OUT_HH_

#include [m[31m<vector>[m
[35m#include [m[31m<algorithm>[m

[38;5;130musing[m [32mnamespace[m std;

[34m/** Output a line containing [m[31m"FOUND"[m[34m if arg is found in [begin, end),
 *  otherwise output [m[31m"NOT FOUND"[m[34m..
 */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m loopFn(Iterator begin, Iterator end, [32mint[m arg) {[14;9H[38;5;130mwhile[m(begin != end)[15;9H}[16;17H[38;5;130mif[m(*begin == arg)[17;17H{[18;25Hcout << [31m"FOUND"[m << endl;[19;25H[38;5;130mreturn[m;[20;17H}[21;17Hbegin++;[22;9H}[23;9Hcout << [31m"NOT FOUND"[m << endl;
}

[34m/** Exactly like loopFn() but no loops should be used */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m noLoopFn(Iterator begin, Iterator end, [32mint[m arg) {[29;9H[38;5;130mif[m(find(begin, end, arg) != end)[30;17Hcout << [31m"FOUND"[m << endl;[31;9H[38;5;130melse[m[32;17Hcout << [31m"NOT FOUND"[m << endl;
}

[35m#endif[m [34m//ifndef OUT_HH_[m
[94m~                                                                                                [37;1H~                                                                                                [38;1H~                                                                                                [39;1H~                                                                                                [40;1H~                                                                                                [41;1H~                                                                                                [42;1H~                                                                                                [43;1H~                                                                                                [44;1H~                                                                                                [45;1H~                                                                                                [46;1H~                                                                                                [47;1H~                                                                                                [48;1H~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H21,10-24      All[21;24H[?25h[?25l[51;70H~@k[21;24H[51;70H   [22;9H[51;81H2,2-9  [22;9H[?25h[?25l[51;81H3,17-24[23;24H[?25h[?25l[51;81H4,1    [24;1H[?25h[?25l[51;81H5,0-1[25;1H[?25h[?25l[26;24H[34m[106m()[m[51;81H6,24 [26;24H[?25h[?25l[34m()[m[51;81H7[27;24H[?25h[?25l[51;81H8[28;24H[?25h[?25l[51;81H9,17-24[29;24H[?25h[?25l[51;80H30,10[30;24H[?25h[?25l[51;81H1,5-12 [31;12H[?25h[?25l[51;81H2,10-24[32;24H[?25h[?25l[28;54H[106m{[33;1H}[m[51;81H3,1    [33;1H[?25h[?25l[51;70H~@k[33;1H[51;70H   [32;24H[28;54H{[33;1H}[51;81H2,10-24[32;24H[?25h[?25l[51;70H~@k[32;24H[51;70H   [31;12H[51;81H1,5-12 [31;12H[?25h[?25l[51;70H~@k[31;12H[51;70H   [30;24H[51;81H0,10-24[30;24H[?25h[?25l[51;70H~@k[30;24H[51;70H   [29;24H[51;80H29,17[29;24H[?25h[?25l[51;70H~@k[29;24H[51;70H   [28;24H[51;81H8,24   [28;24H[?25h[?25l[51;70H~@k[28;24H[51;70H   [27;24H[51;81H7[27;24H[?25h[?25l[51;70H~@k[27;24H[51;70H   [26;24H[34m[106m()[m[51;81H6[26;24H[?25h[?25l[51;70H~@k[26;24H[51;70H   [25;1H[26;24H[34m()[m[51;81H5,0-1[25;1H[?25h[?25l[51;70H~@k[25;1H[51;70H   [24;1H[51;81H4,1  [24;1H[?25h[?25l[51;70H~@k[24;1H[51;70H   [23;24H[51;81H3,17-24[23;24H[?25h[?25l[51;70H~@k[23;24H[51;70H   [22;9H[51;81H2,2-9  [22;9H[?25h[?25l[51;70H~@k[22;9H[51;70H   [21;24H[51;81H1,10-24[21;24H[?25h[?25l[51;70H~@k[21;24H[51;70H   [20;17H[17;17H[106m{[20;17H}[m[51;81H0,3-17 [20;17H[?25h[?25l[51;70H~@k[20;17H[51;70H   [19;24H[17;17H{[20;17H}[51;80H19,3-24[19;24H[?25h[?25l[51;70H~@k[19;24H[51;70H   [18;24H[51;81H8[18;24H[?25h[?25l[51;70H~@k[18;24H[51;70H   [17;17H[106m{[20;17H}[m[51;81H7,3-17[17;17H[?25h[?25l[51;70H~@k[17;17H[51;70H   [16;24H[17;17H{[20;17H}[51;81H6,10-24[16;24H[?25h[?25l[51;70H~@k[16;24H[51;70H   [15;9H[13;52H[106m{[15;9H}[m[51;81H5,2-9  [15;9H[?25h[?25l[51;70H~@k[15;9H[51;70H   [15;8H[13;52H{[15;9H}[51;83H1-8[15;8H[?25h[?25l[51;70H~@k[15;8H[51;70H   [14;8H[51;81H4[14;8H[?25h[?25l[51;70H~@k[14;8H[51;70H   [14;9H[51;83H2-9[14;9H[?25h[?25l[51;70H~@k[14;9H[51;70H   [15;9H[13;52H[106m{[15;9H}[m[51;81H5[15;9H[?25h[?25l[51;70H~@k[15;9H[51;70H   [14;9H[13;52H{[15;9H}[51;81H4[14;9H[?25h[?25l[51;70H~@k[14;9H[51;70H   [14;10H[51;83H3-10[14;10H[?25h[?25l[51;70H~@k[14;10H[51;70H   [14;11H[51;83H4-11[14;11H[?25h[?25l[51;70H~@k[14;11H[51;70H   [14;12H[51;83H5-12[14;12H[?25h[?25l[51;70H~@k[14;12H[51;70H   [15;9H[13;52H[106m{[15;9H}[m[51;81H5,2-9 [15;9H[?25h[?25l[51;70H~@k[15;9H[51;70H   [15;8H[13;52H{[15;9H}[51;83H1-8[15;8H[?25h[?25l[51;70H~@k[15;8H[51;70H   [15;9H[13;52H[106m{[15;9H}[m[51;83H2-9[15;9H[?25h[?25l[51;70Hi[15;9H[51;70H [15;9H[51;1H[1m-- INSERT --[m[51;13H[K[51;80H15,2-9[8CAll[15;9H[?25h[?25l[51;83H3-10[15;10H[?25h[?25l[15;9H[K[13;52H{[51;83H2-9 [15;9H[?25h[?25l{[106m{[22;9H}[m[51;83H3-10[15;10H[?25h[?25l{[22;9H}[51;81H6,2-9 [16;9H[?25h[?25l[51;81H7[17;9H[?25h[?25l[51;81H8[18;9H[?25h[?25l[51;81H9[19;9H[?25h[?25l[51;80H20[20;9H[?25h[?25l[51;81H1[21;9H[?25h[?25l[15;9H[106m{[22;9H}[m[51;81H2,3-10[22;10H[?25h[?25l[15;9H{[22;9H}[51;81H1,2-9 [21;9H[?25h[?25l[51;83H3-17[21;17H[?25h[?25l[51;83H2-9 [21;9H[?25h[?25l/[51;83H3-10[21;10H[?25h[?25l[34m//      begin++;[m[51;83H4-11[21;11H[?25h[51;1H[K[21;10H[?25l[51;70H^[[21;10H[51;70H  [21;11H[51;80H21,3-10[7CAll[21;10H[?25h[?25l[51;70HZ[21;10H[?25h[?25l[51;71HZ[21;10H[?1000l[?2004l[51;1H"find.hh"[51;70H[K[51;11H35L, 692C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim find.hh [8@make -f ../Makefile[C[8Pvim find.hh[C[8@make -f ../Makefile[C
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ main.o -o main
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ make -f ../Makefile [8Pvim find.hh[C[8@make -f ../Makefile[C[8Pvim find.hh[C./main vector ../test.data 56
^C
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ./main vector ../test.data 56[9Pmake -f ../Makefile [8Pvim find.hh[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"find.hh" 35L, 692C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef OUT_HH_
#define OUT_HH_

#include [m[31m<vector>[m
[35m#include [m[31m<algorithm>[m

[38;5;130musing[m [32mnamespace[m std;

[34m/** Output a line containing [m[31m"FOUND"[m[34m if arg is found in [begin, end),
 *  otherwise output [m[31m"NOT FOUND"[m[34m..
 */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m loopFn(Iterator begin, Iterator end, [32mint[m arg) {[14;9H[38;5;130mwhile[m(begin != end)[15;9H{[16;17H[38;5;130mif[m(*begin == arg)[17;17H{[18;25Hcout << [31m"FOUND"[m << endl;[19;25H[38;5;130mreturn[m;[20;17H}[21;9H[34m//      begin++;[m[22;9H}[23;9Hcout << [31m"NOT FOUND"[m << endl;
}

[34m/** Exactly like loopFn() but no loops should be used */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m noLoopFn(Iterator begin, Iterator end, [32mint[m arg) {[29;9H[38;5;130mif[m(find(begin, end, arg) != end)[30;17Hcout << [31m"FOUND"[m << endl;[31;9H[38;5;130melse[m[32;17Hcout << [31m"NOT FOUND"[m << endl;
}

[35m#endif[m [34m//ifndef OUT_HH_[m
[94m~                                                                                                [37;1H~                                                                                                [38;1H~                                                                                                [39;1H~                                                                                                [40;1H~                                                                                                [41;1H~                                                                                                [42;1H~                                                                                                [43;1H~                                                                                                [44;1H~                                                                                                [45;1H~                                                                                                [46;1H~                                                                                                [47;1H~                                                                                                [48;1H~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H21,3-10[7CAll[21;10H[?25h[?25l[51;70H~@k[21;10H[51;70H   [22;9H[15;9H[106m{[22;9H}[m[51;81H2,2-9 [22;9H[?25h[?25l[51;70H~@k[22;9H[51;70H   [21;10H[15;9H{[22;9H}[51;81H1,3-10[21;10H[?25h[?25l[51;70Hi[21;10H[51;70H [21;10H[51;1H[1m-- INSERT --[m[51;13H[K[51;80H21,3-10[7CAll[21;10H[?25h[?25l[51;83H4-11[21;11H[?25h[?25l/       begin++;[51;83H3-10[21;10H[?25h[?25l [51;83H2-9 [21;9H[?25h[51;1H[K[21;8H[?25l[51;70H^[[21;8H[51;70H  [21;9H[51;80H21,1-8[8CAll[21;8H[?25h[?25l[51;70HZ[21;8H[?25h[?25l[51;71HZ[21;8H[?1000l[?2004l[51;1H"find.hh"[51;70H[K[51;11H35L, 690C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim find.hh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"find.hh" 35L, 690C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef OUT_HH_
#define OUT_HH_

#include [m[31m<vector>[m
[35m#include [m[31m<algorithm>[m

[38;5;130musing[m [32mnamespace[m std;

[34m/** Output a line containing [m[31m"FOUND"[m[34m if arg is found in [begin, end),
 *  otherwise output [m[31m"NOT FOUND"[m[34m..
 */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m loopFn(Iterator begin, Iterator end, [32mint[m arg) {[14;9H[38;5;130mwhile[m(begin != end)[15;9H{[16;17H[38;5;130mif[m(*begin == arg)[17;17H{[18;25Hcout << [31m"FOUND"[m << endl;[19;25H[38;5;130mreturn[m;[20;17H}[21;17Hbegin++;[22;9H}[23;9Hcout << [31m"NOT FOUND"[m << endl;
}

[34m/** Exactly like loopFn() but no loops should be used */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m noLoopFn(Iterator begin, Iterator end, [32mint[m arg) {[29;9H[38;5;130mif[m(find(begin, end, arg) != end)[30;17Hcout << [31m"FOUND"[m << endl;[31;9H[38;5;130melse[m[32;17Hcout << [31m"NOT FOUND"[m << endl;
}

[35m#endif[m [34m//ifndef OUT_HH_[m
[94m~                                                                                                [37;1H~                                                                                                [38;1H~                                                                                                [39;1H~                                                                                                [40;1H~                                                                                                [41;1H~                                                                                                [42;1H~                                                                                                [43;1H~                                                                                                [44;1H~                                                                                                [45;1H~                                                                                                [46;1H~                                                                                                [47;1H~                                                                                                [48;1H~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H21,1-8[8CAll[21;8H[?25h[?25l[51;70H~@k[21;8H[51;70H   [21;16H[51;83H2-16[21;16H[?25h[?25l[51;70H~@k[21;16H[51;70H   [21;17H[51;83H3-17[21;17H[?25h[?25l[51;70H~@k[21;17H[51;70H   [21;18H[51;83H4-18[21;18H[?25h[?25l[51;70Hi[21;18H[51;70H [21;18H[51;1H[1m-- INSERT --[m[51;13H[K[51;80H21,4-18[7CAll[21;18H[?25h[?25l[51;83H3-17[21;17H[?25h[?25l[51;83H2-9 [21;9H[?25h[?25l[51;83H1  [21;1H[?25h[?25l[51;83H2-9[21;9H[?25h[?25l[51;83H3-17[21;17H[?25h[?25l[51;83H4-18[21;18H[?25h[?25l[51;83H3-17[21;17H[?25h[?25l[51;83H2-9 [21;9H[?25h[?25l[51;83H1  [21;1H[?25h[51;1H[K[21;1H[?25l[51;70H^[[21;1H[51;70H  [21;1H[51;80H21,1-8[8CAll[21;8H[?25h[?25l[51;70HZ[21;8H[?25h[?25l[51;71HZ[21;8H[51;1H[?1000l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[51;70H[K[51;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/2-find$ vim find.hh ./main vector ../test.data 56[9Pmake -f ../Makefile [8Pvim find.hh[C[8@make -f ../Makefile[C./main vector ../test.data 56[9Pmake -f ../Makefile 
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ main.o -o main
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ make -f ../Makefile [8Pvim find.hh[C./main vector ../test.data 56
FOUND
FOUND
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ cat ../test.data 
22
43
12
56
64
42
11
22
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ cat ../test.data ./main vector ../test.data 56[9Pmake -f ../Makefile ./main vector ../test.data 56[12Pcat ../test.data ./main vector ../test.data 56[9Pmake -f ../Makefile [8Pvim find.hh[C./main vector ../test.data 56[9Pmake -f ../Makefile [8Pvim find.hh[C[8@make -f ../Makefile[C./main vector ../test.data 56[17Pvim find.hh ./main vector ../test.data 56[K[K5
NOT FOUND
NOT FOUND
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ./main vector ../test.data 5[K11
FOUND
FOUND
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ./main vector ../test.data 11[K2
FOUND
FOUND
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ./main vector ../test.data 12[1P[1P[1P[1P[1P[1P[1@[[1@]
FOUND
FOUND
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ ./main [] ../test.data 12[K3
NOT FOUND
NOT FOUND
tman1@remote00:~/i240b/submit/lab7/exercises/2-find$ cd ..
tman1@remote00:~/i240b/submit/lab7/exercises$ sl
bash: sl: command not found
tman1@remote00:~/i240b/submit/lab7/exercises$ cd [K[K[Kls
1-out  2-find  3-sort  4-rm  Makefile  test.data
tman1@remote00:~/i240b/submit/lab7/exercises$ cd 3-sort/
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ ls
sort.hh
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ cat sort.hh 
#ifndef OUT_HH_
#define OUT_HH_

#include <algorithm>
#include <vector>

template <typename Iterator>
void
outContainer(Iterator begin, Iterator end) 
{
  std::cout << "[ ";
  auto print = [](const int& i) { std::cout << i << " " ; };
  std::for_each(begin, end, print);
  std::cout << "]" << std::endl;
}

template <typename Iterator>
void loopFn(Iterator begin, Iterator end, int arg) {
  std::sort(begin, end);
  outContainer(begin, end);
}

/** Exactly like loopFn() but no loops should be used */
template <typename Iterator>
void noLoopFn(Iterator begin, Iterator end, int arg) {
  loopFn<Iterator>(begin, end, arg);
}


#endif //ifndef OUT_HH_
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ cp ../1-out/
.deps/      .gitignore  main        main.cc     main.o      out.hh      
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ cp ../1-out/main.cc 
cp: missing destination file operand after '../1-out/main.cc'
Try 'cp --help' for more information.
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ cp ../1-out/main.cc .
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ ls
main.cc  sort.hh
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ vim main.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 116L, 3175C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<iterator>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<utility>[m

[35m#include [m[31m<deque>[m
[35m#include [m[31m<forward_list>[m
[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"out.hh"[m

[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream fstream;
  [38;5;130mif[m (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  [38;5;130mif[m (!in) {
    [38;5;130mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[31;33H[31m": "[m + std::strerror(errno));
  }
  [34m//construct a vector from an istream_iterator on istream in.
[m  [34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[36;25Hstd::istream_iterator<[32mint[m>());
  [34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}


[32mstatic[m [32mvoid[m
go(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {
    [32mint[m fixedArr[ints.size()];
    [32mint[m i = [31m0[m;
    [38;5;130mfor[m([32mauto[m x : ints)
    {[50;13HfixedArr[i] = x;[51;80H1,1[11CTop[1;1H[?25h[?25l[51;70H~@k[1;1H[51;70H   [2;1H[51;80H2[2;1H[?25h[?25l[51;70H~@k[2;1H[51;70H   [3;1H[51;80H3[3;1H[?25h[?25l[51;70H~@k[3;1H[51;70H   [4;1H[51;80H4[4;1H[?25h[?25l[51;70H~@k[4;1H[51;70H   [5;1H[51;80H5[5;1H[?25h[?25l[51;70H~@k[5;1H[51;70H   [6;1H[51;80H6[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [7;1H[51;80H7,0-1[7;1H[?25h[?25l[51;70H~@k[7;1H[51;70H   [8;1H[51;80H8,1  [8;1H[?25h[?25l[51;70H~@k[8;1H[51;70H   [9;1H[51;80H9[9;1H[?25h[?25l[51;70H~@k[9;1H[51;70H   [10;1H[51;80H10,1[10;1H[?25h[?25l[51;70H~@k[10;1H[51;70H   [11;1H[51;81H1[11;1H[?25h[?25l[51;70H~@k[11;1H[51;70H   [12;1H[51;81H2[12;1H[?25h[?25l[51;70H~@k[12;1H[51;70H   [13;1H[51;81H3,0-1[13;1H[?25h[?25l[51;70H~@k[13;1H[51;70H   [14;1H[51;81H4,1  [14;1H[?25h[?25l[51;70H~@k[14;1H[51;70H   [15;1H[51;81H5[15;1H[?25h[?25l[51;70H~@k[15;1H[51;70H   [16;1H[51;81H6,0-1[16;1H[?25h[?25l[51;70H~@k[16;1H[51;70H   [17;1H[51;81H7,1  [17;1H[?25h[?25l[51;70H~@k[17;1H[51;70H   [17;2H[51;83H2[17;2H[?25h[?25l[51;70H~@k[17;2H[51;70H   [17;3H[51;83H3[17;3H[?25h[?25l[51;70H~@k[17;3H[51;70H   [17;4H[51;83H4[17;4H[?25h[?25l[51;70H~@k[17;4H[51;70H   [17;5H[51;83H5[17;5H[?25h[?25l[51;70H~@k[17;5H[51;70H   [17;6H[51;83H6[17;6H[?25h[?25l[51;70H~@k[17;6H[51;70H   [17;7H[51;83H7[17;7H[?25h[?25l[51;70H~@k[17;7H[51;70H   [17;8H[51;83H8[17;8H[?25h[?25l[51;70H~@k[17;8H[51;70H   [17;9H[51;83H9[17;9H[?25h[?25l[51;70H~@k[17;9H[51;70H   [17;10H[51;83H10[17;10H[?25h[?25l[51;70H~@k[17;10H[51;70H   [17;11H[51;84H1[17;11H[?25h[?25l[51;70H~@k[17;11H[51;70H   [17;12H[51;84H2[17;12H[?25h[?25l[51;70Hi[17;12H[51;70H [17;12H[51;1H[1m-- INSERT --[m[51;13H[K[51;80H17,12[9CTop[17;12H[?25h[?25l[51;84H3[17;13H[?25h[?25l[51;84H4[17;14H[?25h[?25l[31m.hh"[m[17;17H[K[51;84H3[17;13H[?25h[?25l[31m.hh"[m[17;16H[K[51;84H2[17;12H[?25h[?25l[31m.hh"[m[17;15H[K[51;84H1[17;11H[?25h[?25l[31ms.hh"[m[51;84H2[17;12H[?25h[?25l[31mo.hh"[m[51;84H3[17;13H[?25h[?25l[31mr.hh"[m[51;84H4[17;14H[?25h[?25l[31mt.hh"[m[51;84H5[17;15H[?25h[51;1H[K[17;14H[?25l[51;70H^[[17;14H[51;70H  [17;15H[51;80H17,14[9CTop[17;14H[?25h[?25l[51;70HZ[17;14H[?25h[?25l[51;71HZ[17;14H[?1000l[?2004l[51;1H"main.cc"[51;70H[K[51;11H116L, 3176C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ cat sort.hh 
#ifndef OUT_HH_
#define OUT_HH_

#include <algorithm>
#include <vector>

template <typename Iterator>
void
outContainer(Iterator begin, Iterator end) 
{
  std::cout << "[ ";
  auto print = [](const int& i) { std::cout << i << " " ; };
  std::for_each(begin, end, print);
  std::cout << "]" << std::endl;
}

template <typename Iterator>
void loopFn(Iterator begin, Iterator end, int arg) {
  std::sort(begin, end);
  outContainer(begin, end);
}

/** Exactly like loopFn() but no loops should be used */
template <typename Iterator>
void noLoopFn(Iterator begin, Iterator end, int arg) {
  loopFn<Iterator>(begin, end, arg);
}


#endif //ifndef OUT_HH_
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ vim main.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 116L, 3176C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<iterator>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<utility>[m

[35m#include [m[31m<deque>[m
[35m#include [m[31m<forward_list>[m
[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"sort.hh"[m

[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream fstream;
  [38;5;130mif[m (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  [38;5;130mif[m (!in) {
    [38;5;130mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[31;33H[31m": "[m + std::strerror(errno));
  }
  [34m//construct a vector from an istream_iterator on istream in.
[m  [34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[36;25Hstd::istream_iterator<[32mint[m>());
  [34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}


[32mstatic[m [32mvoid[m
go(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {
    [32mint[m fixedArr[ints.size()];
    [32mint[m i = [31m0[m;
    [38;5;130mfor[m([32mauto[m x : ints)
    {[50;13HfixedArr[i] = x;[51;80H17,14[9CTop[17;14H[?25h[?25l[51;70H~@k[17;14H[51;70H   [18;1H[51;81H8,0-1[18;1H[?25h[?25l[51;70H~@k[18;1H[51;70H   [19;14H[51;81H9,14 [19;14H[?25h[?25l[51;70H~@k[19;14H[51;70H   [20;14H[51;80H20[20;14H[?25h[?25l[51;70H~@k[20;14H[51;70H   [21;3H[51;81H1,3 [21;3H[?25h[?25l[51;70H~@k[21;3H[51;70H   [22;14H[51;81H2,14[22;14H[?25h[?25l[51;70H~@k[22;14H[51;70H   [23;14H[51;81H3[23;14H[?25h[?25l[51;70H~@k[23;14H[51;70H   [24;1H[106m{[39;1H}[m[51;81H4,1 [24;1H[?25h[?25l[51;70H~@k[24;1H[51;70H   [25;14H[24;1H{[39;1H}[51;81H5,14[25;14H[?25h[?25l[51;70H~@k[25;14H[51;70H   [26;14H[51;81H6[26;14H[?25h[?25l[51;70H~@k[26;14H[51;70H   [27;14H[51;81H7[27;14H[?25h[?25l[51;70H~@k[27;14H[51;70H   [28;14H[51;81H8[28;14H[?25h[?25l[51;70H~@k[28;14H[51;70H   [29;12H[106m{[32;3H}[m[51;81H9,12[29;12H[?25h[?25l[51;70H~@k[29;12H[51;70H   [30;14H[29;12H{[32;3H}[51;80H30,14[30;14H[?25h[?25l[51;70H~@k[30;14H[51;70H   [31;16H[51;81H1,2-16[31;16H[?25h[?25l[51;70H~@k[31;16H[51;70H   [32;3H[29;12H[106m{[32;3H}[m[51;81H2,3   [32;3H[?25h[?25l[51;70H~@k[32;3H[51;70H   [33;14H[29;12H{[32;3H}[51;81H3,14[33;14H[?25h[?25l[51;70H~@k[33;14H[51;70H   [34;14H[51;81H4[34;14H[?25h[?25l[51;70H~@k[34;14H[51;70H   [35;14H[51;81H5[35;14H[?25h[?25l[51;70H~@k[35;14H[51;70H   [36;16H[51;81H6,2-16[36;16H[?25h[?25l[51;70H~@k[36;16H[51;70H   [37;14H[51;81H7,14  [37;14H[?25h[?25l[51;70H~@k[37;14H[51;70H   [38;14H[51;81H8[38;14H[?25h[?25l[51;70H~@k[38;14H[51;70H   [39;1H[24;1H[106m{[39;1H}[m[51;81H9,1 [39;1H[?25h[?25l[51;70H~@k[39;1H[51;70H   [40;1H[24;1H{[39;1H}[51;80H40,0-1[40;1H[?25h[?25l[51;70H~@k[40;1H[51;70H   [41;1H[51;81H1[41;1H[?25h[?25l[51;70H~@k[41;1H[51;70H   [42;11H[51;81H2,11 [42;11H[?25h[?25l[51;70H~@k[42;11H[51;70H   [43;14H[51;81H3,14[43;14H[?25h[?25l[51;70H~@k[43;14H[51;70H   [44;1H[51;81H4,1 [44;1H[?25h[?25l[51;70H~@k[44;1H[51;70H   [45;14H[51;81H5,14[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;13Hi++;[51;1H[K[51;80H46,14[10C1%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5H}[51;80H[K[51;80H47,14[10C3%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5HloopFn(fixedArr, fixedArr + ints.size(), arg);[51;80H[K[51;80H48,14[10C4%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;5H[1;50r[50;1H
[1;51r[45;5H[106m{[48;5H}[m[50;5HnoLoopFn(fixedArr, fixedArr + ints.size(), arg);[51;80H[K[51;80H49,5[11C6%[45;5H[?25h[?25l[51;70H~@k[45;5H[51;70H   [45;14H[1;50r[50;1H
[1;51r[44;5H{[47;5H}[50;3H}[51;80H[K[51;80H50,7-14[8C7%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"deque"[m) {[51;80H[K[51;80H51,7-14[8C9%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;5H[1;50r[50;1H
[1;51r[42;5H[106m{[45;5H}[m[50;5Hstd::deque<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H52,5[10C10%[45;5H[?25h[?25l[51;70H~@k[45;5H[51;70H   [45;14H[1;50r[50;1H
[1;51r[41;5H{[44;5H}[50;5HloopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H53,14[9C12%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5HnoLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H54,14[9C13%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;3H[1;50r[50;1H
[1;51r[35;30H[106m{[45;3H}[m[50;3H}[51;80H[K[51;80H55,3[10C15%[45;3H[?25h[?25l[51;70H~@k[45;3H[51;70H   [45;14H[1;50r[50;1H
[1;51r[34;30H{[44;3H}[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {[51;80H[K[51;80H56,14[9C16%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5Hstd::forward_list<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H57,14[9C18%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5HloopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H58,14[9C19%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5HnoLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H59,14[9C21%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;3H[1;50r[50;1H
[1;51r[41;38H[106m{[45;3H}[m[50;3H}[51;80H[K[51;80H60,3[10C22%[45;3H[?25h[?25l[51;70H~@k[45;3H[51;70H   [45;14H[1;50r[50;1H
[1;51r[40;38H{[44;3H}[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {[51;80H[K[51;80H61,14[9C24%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5Hstd::list<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H62,14[9C25%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5HloopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H63,14[9C27%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5HnoLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H64,14[9C28%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;3H[1;50r[50;1H
[1;51r[41;45H[106m{[45;3H}[m[50;3H}[51;80H[K[51;80H65,3[10C30%[45;3H[?25h[?25l[51;70H~@k[45;3H[51;70H   [45;14H[1;50r[50;1H
[1;51r[40;45H{[44;3H}[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"multiset"[m) {[51;80H[K[51;80H66,14[9C31%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5Hstd::multiset<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H67,14[9C33%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [44;14H[51;81H6[44;14H[?25h[?25l[51;70H~@k[44;14H[51;70H   [45;14H[51;81H7[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5HloopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H68,14[9C34%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5HnoLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H69,14[9C36%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;3H[1;50r[50;1H
[1;51r[41;37H[106m{[45;3H}[m[50;3H}[51;80H[K[51;80H70,3[10C37%[45;3H[?25h[?25l[51;70H~@k[45;3H[51;70H   [45;14H[1;50r[50;1H
[1;51r[40;37H{[44;3H}[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"set"[m) {[51;80H[K[51;80H71,14[9C39%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5Hstd::set<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H72,14[9C40%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5HloopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H73,14[9C42%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5HnoLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H74,14[9C43%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;3H[1;50r[50;1H
[1;51r[41;41H[106m{[45;3H}[m[50;3H}[51;80H[K[51;80H75,3[10C45%[45;3H[?25h[?25l[51;70H~@k[45;3H[51;70H   [45;14H[1;50r[50;1H
[1;51r[40;41H{[44;3H}[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"vector"[m) {[51;80H[K[51;80H76,14[9C46%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5HloopFn(ints.begin(), ints.end(), arg);[51;80H[K[51;80H77,14[9C48%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;5HnoLoopFn(ints.begin(), ints.end(), arg);[51;80H[K[51;80H78,14[9C50%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [45;14H[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H79,14[9C51%[45;14H[?25h[?25l[51;70H~@k[45;14H[51;70H   [44;14H[51;81H8[44;14H[?25h[?25l[51;70H~@k[44;14H[51;70H   [43;14H[51;81H7[43;14H[?25h[?25l[51;70H~@k[43;14H[51;70H   [42;14H[51;81H6[42;14H[?25h[?25l[51;70H~@k[42;14H[51;70H   [41;3H[37;41H[106m{[41;3H}[m[51;81H5,3 [41;3H[?25h[?25l[51;70H~@k[41;3H[51;70H   [40;14H[37;41H{[41;3H}[51;81H4,14[40;14H[?25h[?25l[51;70H~@k[40;14H[51;70H   [39;14H[51;81H3[39;14H[?25h[?25l[51;70H~@k[39;14H[51;70H   [38;14H[51;81H2[38;14H[?25h[?25l[51;70H~@k[38;14H[51;70H   [37;14H[51;81H1[37;14H[?25h[?25l[51;70H~@k[37;14H[51;70H   [36;3H[32;37H[106m{[36;3H}[m[51;81H0,3 [36;3H[?25h[?25l[51;70H~@k[36;3H[51;70H   [35;14H[32;37H{[36;3H}[51;80H69,14[35;14H[?25h[?25l[51;70H~@k[35;14H[51;70H   [34;14H[51;81H8[34;14H[?25h[?25l[51;70H~@k[34;14H[51;70H   [33;14H[51;81H7[33;14H[?25h[?25l[51;70H~@k[33;14H[51;70H   [32;14H[51;81H6[32;14H[?25h[?25l[51;70H~@k[32;14H[51;70H   [31;3H[27;45H[106m{[31;3H}[m[51;81H5,3 [31;3H[?25h[?25l[51;70H~@k[31;3H[51;70H   [30;14H[27;45H{[31;3H}[51;81H4,14[30;14H[?25h[?25l[51;70H~@k[30;14H[51;70H   [29;14H[51;81H3[29;14H[?25h[?25l[51;70H~@k[29;14H[51;70H   [30;14H[51;81H4[30;14H[?25h[?25l[51;70H~@k[30;14H[51;70H   [29;14H[51;81H3[29;14H[?25h[?25l[51;70H~@k[29;14H[51;70H   [28;14H[51;81H2[28;14H[?25h[?25l[51;70H~@k[28;14H[51;70H   [27;14H[51;81H1[27;14H[?25h[?25l[51;70H~@k[27;14H[51;70H   [26;3H[22;38H[106m{[26;3H}[m[51;81H0,3 [26;3H[?25h[?25l[51;70H~@k[26;3H[51;70H   [25;14H[22;38H{[26;3H}[51;80H59,14[25;14H[?25h[?25l[51;70H~@k[25;14H[51;70H   [26;3H[22;38H[106m{[26;3H}[m[51;80H60,3 [26;3H[?25h[?25l[51;70H~@k[26;3H[51;70H   [27;14H[22;38H{[26;3H}[51;81H1,14[27;14H[?25h[?25l[51;70H~@k[27;14H[51;70H   [26;3H[22;38H[106m{[26;3H}[m[51;81H0,3 [26;3H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H}
  [34m//construct a vector from an istream_iterator on istream in.
[m  [34m//The two arguments give the begin and end of the iterator.[m[51;80H[K[51;80H60,3[10C46%[29;3H[?25h[?25l[51;70HZ[29;3H[?25h[?25l[51;71HZ[29;3H[51;1H[?1000l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[51;70H[K[51;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ make -f ../m[KMakefile 
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
/usr/include/c++/8/bits/stl_algo.h: In instantiation of ‘[01m[Kvoid std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = std::_Fwd_list_iterator<int>; _Compare = __gnu_cxx::__ops::_Iter_less_iter][m[K’:
[01m[K/usr/include/c++/8/bits/stl_algo.h:4834:18:[m[K   required from ‘[01m[Kvoid std::sort(_RAIter, _RAIter) [with _RAIter = std::_Fwd_list_iterator<int>][m[K’
[01m[Ksort.hh:19:12:[m[K   required from ‘[01m[Kvoid loopFn(Iterator, Iterator, int) [with Iterator = std::_Fwd_list_iterator<int>][m[K’
[01m[Kmain.cc:63:51:[m[K   required from here
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;31m[Kerror: [m[Kno match for ‘[01m[Koperator-[m[K’ (operand types are ‘[01m[Kstd::_Fwd_list_iterator<int>[m[K’ and ‘[01m[Kstd::_Fwd_list_iterator<int>[m[K’)
     std::__lg([01;31m[K__last - __first[m[K) * 2,
               [01;31m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/bits/stl_algobase.h:67[m[K,
                 from [01m[K/usr/include/c++/8/algorithm:61[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_iterator.h:392:5:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Ktemplate<class _IteratorL, class _IteratorR> constexpr decltype ((__y.base() - __x.base())) std::operator-(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)[m[K’
     [01;36m[Koperator[m[K-(const reverse_iterator<_IteratorL>& __x,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_iterator.h:392:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::_Fwd_list_iterator<int>[m[K’ is not derived from ‘[01m[Kconst std::reverse_iterator<_Iterator>[m[K’
     std::__lg([01;36m[K__last - __first[m[K) * 2,
               [01;36m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/bits/stl_algobase.h:67[m[K,
                 from [01m[K/usr/include/c++/8/algorithm:61[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_iterator.h:1188:5:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Ktemplate<class _IteratorL, class _IteratorR> constexpr decltype ((__x.base() - __y.base())) std::operator-(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)[m[K’
     [01;36m[Koperator[m[K-(const move_iterator<_IteratorL>& __x,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_iterator.h:1188:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::_Fwd_list_iterator<int>[m[K’ is not derived from ‘[01m[Kconst std::move_iterator<_IteratorL>[m[K’
     std::__lg([01;36m[K__last - __first[m[K) * 2,
               [01;36m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/deque:64[m[K,
                 from [01m[Kmain.cc:8[m[K:
[01m[K/usr/include/c++/8/bits/stl_deque.h:352:5:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Ktemplate<class _Tp, class _Ref, class _Ptr> typename std::_Deque_iterator<_Tp, _Ref, _Ptr>::difference_type std::operator-(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref, _Ptr>&)[m[K’
     [01;36m[Koperator[m[K-(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_deque.h:352:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::_Fwd_list_iterator<int>[m[K’ is not derived from ‘[01m[Kconst std::_Deque_iterator<_Tp, _Ref, _Ptr>[m[K’
     std::__lg([01;36m[K__last - __first[m[K) * 2,
               [01;36m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/deque:64[m[K,
                 from [01m[Kmain.cc:8[m[K:
[01m[K/usr/include/c++/8/bits/stl_deque.h:364:5:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Ktemplate<class _Tp, class _RefL, class _PtrL, class _RefR, class _PtrR> typename std::_Deque_iterator<_Tp, _Ref, _Ptr>::difference_type std::operator-(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)[m[K’
     [01;36m[Koperator[m[K-(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_deque.h:364:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::_Fwd_list_iterator<int>[m[K’ is not derived from ‘[01m[Kconst std::_Deque_iterator<_Tp, _Ref, _Ptr>[m[K’
     std::__lg([01;36m[K__last - __first[m[K) * 2,
               [01;36m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/vector:65[m[K,
                 from [01m[Kmain.cc:12[m[K:
[01m[K/usr/include/c++/8/bits/stl_bvector.h:210:3:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Kstd::ptrdiff_t std::operator-(const std::_Bit_iterator_base&, const std::_Bit_iterator_base&)[m[K’
   [01;36m[Koperator[m[K-(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
   [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_bvector.h:210:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from ‘[01m[Kstd::_Fwd_list_iterator<int>[m[K’ to ‘[01m[Kconst std::_Bit_iterator_base&[m[K’
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
/usr/include/c++/8/bits/stl_algo.h: In instantiation of ‘[01m[Kvoid std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = std::_List_iterator<int>; _Compare = __gnu_cxx::__ops::_Iter_less_iter][m[K’:
[01m[K/usr/include/c++/8/bits/stl_algo.h:4834:18:[m[K   required from ‘[01m[Kvoid std::sort(_RAIter, _RAIter) [with _RAIter = std::_List_iterator<int>][m[K’
[01m[Ksort.hh:19:12:[m[K   required from ‘[01m[Kvoid loopFn(Iterator, Iterator, int) [with Iterator = std::_List_iterator<int>][m[K’
[01m[Kmain.cc:68:51:[m[K   required from here
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;31m[Kerror: [m[Kno match for ‘[01m[Koperator-[m[K’ (operand types are ‘[01m[Kstd::_List_iterator<int>[m[K’ and ‘[01m[Kstd::_List_iterator<int>[m[K’)
     std::__lg([01;31m[K__last - __first[m[K) * 2,
               [01;31m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/bits/stl_algobase.h:67[m[K,
                 from [01m[K/usr/include/c++/8/algorithm:61[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_iterator.h:392:5:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Ktemplate<class _IteratorL, class _IteratorR> constexpr decltype ((__y.base() - __x.base())) std::operator-(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)[m[K’
     [01;36m[Koperator[m[K-(const reverse_iterator<_IteratorL>& __x,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_iterator.h:392:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::_List_iterator<int>[m[K’ is not derived from ‘[01m[Kconst std::reverse_iterator<_Iterator>[m[K’
     std::__lg([01;36m[K__last - __first[m[K) * 2,
               [01;36m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/bits/stl_algobase.h:67[m[K,
                 from [01m[K/usr/include/c++/8/algorithm:61[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_iterator.h:1188:5:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Ktemplate<class _IteratorL, class _IteratorR> constexpr decltype ((__x.base() - __y.base())) std::operator-(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)[m[K’
     [01;36m[Koperator[m[K-(const move_iterator<_IteratorL>& __x,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_iterator.h:1188:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::_List_iterator<int>[m[K’ is not derived from ‘[01m[Kconst std::move_iterator<_IteratorL>[m[K’
     std::__lg([01;36m[K__last - __first[m[K) * 2,
               [01;36m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/deque:64[m[K,
                 from [01m[Kmain.cc:8[m[K:
[01m[K/usr/include/c++/8/bits/stl_deque.h:352:5:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Ktemplate<class _Tp, class _Ref, class _Ptr> typename std::_Deque_iterator<_Tp, _Ref, _Ptr>::difference_type std::operator-(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref, _Ptr>&)[m[K’
     [01;36m[Koperator[m[K-(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_deque.h:352:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::_List_iterator<int>[m[K’ is not derived from ‘[01m[Kconst std::_Deque_iterator<_Tp, _Ref, _Ptr>[m[K’
     std::__lg([01;36m[K__last - __first[m[K) * 2,
               [01;36m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/deque:64[m[K,
                 from [01m[Kmain.cc:8[m[K:
[01m[K/usr/include/c++/8/bits/stl_deque.h:364:5:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Ktemplate<class _Tp, class _RefL, class _PtrL, class _RefR, class _PtrR> typename std::_Deque_iterator<_Tp, _Ref, _Ptr>::difference_type std::operator-(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)[m[K’
     [01;36m[Koperator[m[K-(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_deque.h:364:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::_List_iterator<int>[m[K’ is not derived from ‘[01m[Kconst std::_Deque_iterator<_Tp, _Ref, _Ptr>[m[K’
     std::__lg([01;36m[K__last - __first[m[K) * 2,
               [01;36m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/vector:65[m[K,
                 from [01m[Kmain.cc:12[m[K:
[01m[K/usr/include/c++/8/bits/stl_bvector.h:210:3:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Kstd::ptrdiff_t std::operator-(const std::_Bit_iterator_base&, const std::_Bit_iterator_base&)[m[K’
   [01;36m[Koperator[m[K-(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
   [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_bvector.h:210:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from ‘[01m[Kstd::_List_iterator<int>[m[K’ to ‘[01m[Kconst std::_Bit_iterator_base&[m[K’
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
/usr/include/c++/8/bits/stl_algo.h: In instantiation of ‘[01m[Kvoid std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = std::_Rb_tree_const_iterator<int>; _Compare = __gnu_cxx::__ops::_Iter_less_iter][m[K’:
[01m[K/usr/include/c++/8/bits/stl_algo.h:4834:18:[m[K   required from ‘[01m[Kvoid std::sort(_RAIter, _RAIter) [with _RAIter = std::_Rb_tree_const_iterator<int>][m[K’
[01m[Ksort.hh:19:12:[m[K   required from ‘[01m[Kvoid loopFn(Iterator, Iterator, int) [with Iterator = std::_Rb_tree_const_iterator<int>][m[K’
[01m[Kmain.cc:73:51:[m[K   required from here
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;31m[Kerror: [m[Kno match for ‘[01m[Koperator-[m[K’ (operand types are ‘[01m[Kstd::_Rb_tree_const_iterator<int>[m[K’ and ‘[01m[Kstd::_Rb_tree_const_iterator<int>[m[K’)
     std::__lg([01;31m[K__last - __first[m[K) * 2,
               [01;31m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/bits/stl_algobase.h:67[m[K,
                 from [01m[K/usr/include/c++/8/algorithm:61[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_iterator.h:392:5:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Ktemplate<class _IteratorL, class _IteratorR> constexpr decltype ((__y.base() - __x.base())) std::operator-(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)[m[K’
     [01;36m[Koperator[m[K-(const reverse_iterator<_IteratorL>& __x,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_iterator.h:392:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::_Rb_tree_const_iterator<int>[m[K’ is not derived from ‘[01m[Kconst std::reverse_iterator<_Iterator>[m[K’
     std::__lg([01;36m[K__last - __first[m[K) * 2,
               [01;36m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/bits/stl_algobase.h:67[m[K,
                 from [01m[K/usr/include/c++/8/algorithm:61[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_iterator.h:1188:5:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Ktemplate<class _IteratorL, class _IteratorR> constexpr decltype ((__x.base() - __y.base())) std::operator-(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)[m[K’
     [01;36m[Koperator[m[K-(const move_iterator<_IteratorL>& __x,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_iterator.h:1188:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::_Rb_tree_const_iterator<int>[m[K’ is not derived from ‘[01m[Kconst std::move_iterator<_IteratorL>[m[K’
     std::__lg([01;36m[K__last - __first[m[K) * 2,
               [01;36m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/deque:64[m[K,
                 from [01m[Kmain.cc:8[m[K:
[01m[K/usr/include/c++/8/bits/stl_deque.h:352:5:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Ktemplate<class _Tp, class _Ref, class _Ptr> typename std::_Deque_iterator<_Tp, _Ref, _Ptr>::difference_type std::operator-(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref, _Ptr>&)[m[K’
     [01;36m[Koperator[m[K-(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_deque.h:352:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::_Rb_tree_const_iterator<int>[m[K’ is not derived from ‘[01m[Kconst std::_Deque_iterator<_Tp, _Ref, _Ptr>[m[K’
     std::__lg([01;36m[K__last - __first[m[K) * 2,
               [01;36m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/deque:64[m[K,
                 from [01m[Kmain.cc:8[m[K:
[01m[K/usr/include/c++/8/bits/stl_deque.h:364:5:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Ktemplate<class _Tp, class _RefL, class _PtrL, class _RefR, class _PtrR> typename std::_Deque_iterator<_Tp, _Ref, _Ptr>::difference_type std::operator-(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)[m[K’
     [01;36m[Koperator[m[K-(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_deque.h:364:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kmain.cc:1[m[K:
[01m[K/usr/include/c++/8/bits/stl_algo.h:1969:22:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::_Rb_tree_const_iterator<int>[m[K’ is not derived from ‘[01m[Kconst std::_Deque_iterator<_Tp, _Ref, _Ptr>[m[K’
     std::__lg([01;36m[K__last - __first[m[K) * 2,
               [01;36m[K~~~~~~~^~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/vector:65[m[K,
                 from [01m[Kmain.cc:12[m[K:
[01m[K/usr/include/c++/8/bits/stl_bvector.h:210:3:[m[K [01;36m[Knote: [m[Kcandidate: ‘[01m[Kstd::ptrdiff_t std::operator-(const std::_Bit_iterator_base&, const std::_Bit_iterator_base&)[m[K’
   [01;36m[Koperator[m[K-(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
   [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_bvector.h:210:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from ‘[01m[Kstd::_Rb_tree_const_iterator<int>[m[K’ to ‘[01m[Kconst std::_Bit_iterator_base&[m[K’
make: *** [../Makefile:48: main.o] Error 1
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ make -f ../Makefile [8Pvim main.cc[Ccat sort.hh[Cvim main.cc[C
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 116L, 3176C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[35m#include [m[31m"sort.hh"[m

[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream fstream;
  [38;5;130mif[m (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  [38;5;130mif[m (!in) {
    [38;5;130mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[16;33H[31m": "[m + std::strerror(errno));
  }
  [34m//construct a vector from an istream_iterator on istream in.
[m  [34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[21;25Hstd::istream_iterator<[32mint[m>());
  [34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}


[32mstatic[m [32mvoid[m
go(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {
    [32mint[m fixedArr[ints.size()];
    [32mint[m i = [31m0[m;
    [38;5;130mfor[m([32mauto[m x : ints)
    {[35;13HfixedArr[i] = x;[36;13Hi++;
    }
    loopFn(fixedArr, fixedArr + ints.size(), arg);
    noLoopFn(fixedArr, fixedArr + ints.size(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"deque"[m) [106m{[m
    std::deque<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  [106m}[m
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {
    std::forward_list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }[51;80H60,3[10C22%[45;3H[?25h[?25l[51;70H~@k[45;3H[51;70H   [45;3H[1;50r[50;1H
[1;51r[40;38H{[44;3H}[50;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {[51;1H[K[51;80H61,3[10C24%[45;3H[?25h[?25l[51;70H~@k[45;3H[51;70H   [44;3H[40;38H[106m{[44;3H}[m[51;81H0[44;3H[?25h[?25l[51;70H~@k[44;3H[51;70H   [43;3H[40;38H{[44;3H}[51;80H59[43;3H[?25h[?25l[51;70H~@k[43;3H[51;70H   [44;3H[40;38H[106m{[44;3H}[m[51;80H60[44;3H[?25h[?25l[51;70H~@k[44;3H[51;70H   [45;3H[40;38H{[44;3H}[51;81H1[45;3H[?25h[?25l[51;70H~@k[45;3H[51;70H   [44;3H[40;38H[106m{[44;3H}[m[51;81H0[44;3H[?25h[?25l[51;70H~@k[44;3H[51;70H   [44;3H[?25h[?25l[51;70H~@k[44;3H[51;70H   [44;3H[?25h[?25l[51;70Hi[44;3H[51;70H [44;3H[51;1H[1m-- INSERT --[m[51;80H[K[51;80H60,3[10C24%[44;3H[?25h[?25l[51;83H4[44;4H[?25h[?25l[45;50r[45;1H[L[1;51r[51;80H[K[51;80H61,3[10C23%[40;38H{[44;3H}
  [?25h[?25l#[51;83H2[45;2H[?25h[?25li[51;83H3[45;3H[?25h[?25l[35m#if[m[51;83H4[45;4H[?25h[?25l[35m [m[51;83H5[45;5H[?25h[?25l[35m0[m
[34m  else if (containerSpec == "forward_list") {
    std::forward_list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }[m[51;83H6[45;6H[?25h[?25l[51;83H5[45;5H[?25h[?25l[51;83H4[45;4H[?25h[?25l[51;83H3[45;3H[?25h[?25l[51;83H2[45;2H[?25h[?25l[51;83H1[45;1H[?25h[?25l        [35m#if 0[m[51;83H2-9[45;9H[?25h[?25l[35m#if 0[m[45;9H[K[51;83H1  [45;1H[?25h[?25l [35m#if 0[m[51;83H2[45;2H[?25h[?25l [35m#if 0[m[51;83H3[45;3H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m  else if (containerSpec == "list") {[m[51;80H[K[51;80H62,3[10C25%[45;3H[?25h[?25l[51;81H1[44;3H[?25h[?25l[39;38H[106m{[43;3H}[m[51;81H0[43;3H[?25h[?25l[39;38H{[43;3H}[51;81H1[44;3H[?25h[?25l[35m#if 0[m[44;7H[K[51;83H2[44;2H[?25h[?25l[51;81H2[45;2H[?25h[?25l[51;81H1[44;2H[?25h[?25l[35m#if 0[m[44;6H[K[51;83H1[44;1H[?25h[?25l[43;50r[50;1H
[1;51r[43;1H  }#[38;5;130mif[m [31m0[m
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {
    std::forward_list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {
    std::list<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H60,4[10C25%[39;38H[106m{[43;3H}[?25h[?25l[44;50r[m[44;1H[L[1;51r[43;4H[K[44;1H[35m#if 0[m
[34m  else if (containerSpec == "forward_list") {
    std::forward_list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "list") {[m[51;80H[K[51;80H61,1[10C25%[39;38H{[43;3H}
[?25h[?25l[51;81H2[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m    std::list<int> container(ints.begin(), ints.end());[m[51;80H[K[51;80H63,1[10C26%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m    loopFn(container.begin(), container.end(), arg);[m[51;80H[K[51;80H64,1[10C28%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m    noLoopFn(container.begin(), container.end(), arg);[m[51;80H[K[51;80H65,1[10C29%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m  }[m[51;80H[K[51;80H66,1[10C31%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m  else if (containerSpec == "multiset") {[m[51;80H[K[51;80H67,1[10C32%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m    std::multiset<int> container(ints.begin(), ints.end());[m[51;80H[K[51;80H68,1[10C34%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m    loopFn(container.begin(), container.end(), arg);[m[51;80H[K[51;80H69,1[10C35%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m    noLoopFn(container.begin(), container.end(), arg);[m[51;80H[K[51;80H70,1[10C37%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m  }[m[51;80H[K[51;80H71,1[10C38%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m  else if (containerSpec == "set") {[m[51;80H[K[51;80H72,1[10C40%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m    std::set<int> container(ints.begin(), ints.end());[m[51;80H[K[51;80H73,1[10C41%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m    loopFn(container.begin(), container.end(), arg);[m[51;80H[K[51;80H74,1[10C43%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m    noLoopFn(container.begin(), container.end(), arg);[m[51;80H[K[51;80H75,1[10C44%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m  }[m[51;80H[K[51;80H76,1[10C46%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m  else if (containerSpec == "vector") {[m[51;80H[K[51;80H77,1[10C47%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m    loopFn(ints.begin(), ints.end(), arg);[m[51;80H[K[51;80H78,1[10C49%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m    noLoopFn(ints.begin(), ints.end(), arg);[m[51;80H[K[51;80H79,1[10C50%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m  }[m[51;80H[K[51;80H80,1[10C52%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m  else {[m[51;80H[K[51;80H81,1[10C53%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m    std::cerr << "unknown container " << containerSpec << std::endl;[m[51;80H[K[51;80H82,1[10C55%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m    std::exit(1);[m[51;80H[K[51;80H83,1[10C56%[45;1H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[34m  }[m[51;80H[K[51;80H84,1[10C58%[45;1H[?25h[?25l[51;81H3[44;1H[?25h[?25l[51;81H2[43;1H[?25h[?25l[51;83H2[43;2H[?25h[?25l[51;83H3[43;3H[?25h[?25l[38;36H[34m[106m{[42;3H}[m[51;81H1[42;3H[?25h[?25l[51;83H4[42;4H[?25h[?25l[43;50r[43;1H[L[1;51r[43;1H[34m  [m[51;80H[K[51;80H82,3[10C57%[38;36H[34m{[42;3H}
  [?25h[?25l[m[43;2H[K[51;83H2[43;2H[?25h[?25l[34m#[m[51;83H3[43;3H[?25h[?25l[34me[m[51;83H4[43;4H[?25h[?25l[34mn[m[51;83H5[43;5H[?25h[?25l[34md[m[51;83H6[43;6H[?25h[?25l[34mi[m[51;83H7[43;7H[?25h[?25l[35m #endif[m
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"vector"[m) {
    loopFn(ints.begin(), ints.end(), arg);
    noLoopFn(ints.begin(), ints.end(), arg);
  }
  [38;5;130melse[m {
    std::cerr << [31m"unknown container "[m << containerSpec << std::endl;
    std::exit([31m1[m);[51;83H8[43;8H[?25h[?25l[38;36H[34m[106m{[42;3H}[m[51;81H1,4[42;4H[?25h[?25l[38;36H[34m{[42;3H}[m[51;81H2,8[43;8H[?25h[?25l[51;83H7[43;7H[?25h[?25l[51;83H6[43;6H[?25h[?25l[51;83H5[43;5H[?25h[?25l[51;83H4[43;4H[?25h[?25l[51;83H3[43;3H[?25h[?25l[51;83H2[43;2H[?25h[?25l[51;83H1[43;1H[?25h[?25l[51;83H2[43;2H[?25h[?25l[35m#endif[m[43;7H[K[51;83H1[43;1H[?25h[?25l[42;50r[50;1H
[1;51r[42;1H[34m  }#endif
  else if (containerSpec == "vector") {
    loopFn(ints.begin(), ints.end(), arg);
    noLoopFn(ints.begin(), ints.end(), arg);
  }
  else {
    std::cerr << "unknown container " << containerSpec << std::endl;
    std::exit(1);
  }[m[51;80H[K[51;80H81,4[10C58%[38;36H[34m[106m{[42;3H}[?25h[?25l[43;50r[m[43;1H[L[1;51r[42;4H[K[43;1H[35m#endif[m
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"vector"[m) {
    loopFn(ints.begin(), ints.end(), arg);
    noLoopFn(ints.begin(), ints.end(), arg);
  }
  [38;5;130melse[m {
    std::cerr << [31m"unknown container "[m << containerSpec << std::endl;
    std::exit([31m1[m);[51;80H[K[51;80H82,1[10C57%[38;36H[34m{[42;3H}
[?25h[?25l[m[51;83H2[43;2H[?25h[?25l[51;83H3[43;3H[?25h[?25l[51;83H4[43;4H[?25h[?25l[51;83H5[43;5H[?25h[?25l[51;83H6[43;6H[?25h[?25l[51;83H7[43;7H[?25h[?25l[51;81H4[45;7H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H}[51;80H[K[51;80H85,7[10C58%[45;7H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H}[51;80H[K[51;80H86,4[10C60%[42;39H[106m{[45;3H}[?25h[?25l[1;50r[m[50;1H
[1;51r[51;80H[K[51;80H87,7[10C61%[41;39H{[44;3H}[45;7H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H[32mstatic[m [32mvoid[m[51;80H[K[51;80H88,7[10C63%[45;7H[?25h[?25l[1;50r[50;1H
[1;51r[50;1Husage(std::string progName) {[51;80H[K[51;80H89,7[10C64%[45;7H[?25h[?25l[1;50r[50;1H
[1;51r[50;3Hstd::cerr << [31m"usage: "[m[51;80H[K[51;80H90,4[10C66%[42;8H[106m{[45;3H}[?25h[?25l[1;50r[m[50;1H
[1;51r[50;13H<< progName[51;80H[K[51;80H91,2[10C67%[41;8H{[44;3H}
}[?25h[51;1H[K[45;1H[?25l[51;70H^[[45;1H[51;70H  [45;2H[51;80H91,1[10C67%[45;1H[?25h[?25l[51;70HZ[45;1H[?25h[?25l[51;71HZ[45;1H[?1000l[?2004l[51;1H"main.cc"[51;70H[K[51;11H118L, 3189C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ vim main.cc [8@make -f ../Makefile[C
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main main.o; do echo $t >>.gitignore; done
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ ./make -f ../Makefile [8Pvim main.cc[C[8@make -f ../Makefile[C[8Pvim main.cc[Ccat sort.hh[Cvim main.cc[Cls[Kcp ../1-out/main.cc .[K[8Pat sort.hh[Cls[Kcd 3-sort/ls[Kslcd .../main [] ../test.data 132
[ 11 12 22 22 42 43 56 64 ]
[ 11 12 22 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ ./main [] ../test.data 12[C[1P[1P[1@d[1@e[1@q[1@u[1@e
[ 11 12 22 22 42 43 56 64 ]
[ 11 12 22 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ ./main deque ../test.data 12[1P[1P[1P[1P[1P[1@v[1@e[1@c[1@t[1@o[1@r
[ 11 12 22 22 42 43 56 64 ]
[ 11 12 22 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ ./main vector ../test.data 12[1P[1P[1P[1P[1P[1P[1@s[1@e[1@t
unknown container set
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ ./main set ../test.data 12[Kvim main.cc 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 118L, 3189C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m  else if (containerSpec == "list") {
    std::list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "multiset") {
    std::multiset<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "set") {
    std::set<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }[m
[35m#endif[m
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"vector"[m) {
    loopFn(ints.begin(), ints.end(), arg);
    noLoopFn(ints.begin(), ints.end(), arg);
  }
  [38;5;130melse[m {
    std::cerr << [31m"unknown container "[m << containerSpec << std::endl;
    std::exit([31m1[m);
  }
}

[32mstatic[m [32mvoid[m
usage(std::string progName) {
  std::cerr << [31m"usage: "[m[30;13H<< progName[31;13H<< [31m" CONTAINER_SPEC INTS_DATA_FILE [INT]"[m[32;13H<< std::endl;
  std::exit([31m1[m);
}


[32mint[m
main([32mint[m argc, [32mchar[m* argv[])
{
  [38;5;130mtry[m {
    [38;5;130mif[m (argc != [31m3[m && argc != [31m4[m) usage(argv[[31m0[m]);
    [32mconst[m std::string containerSpec(argv[[31m1[m]);
    [32mconst[m std::string filePath(argv[[31m2[m]);
    std::vector<[32mint[m> ints = readIntsFromFile(filePath);
    [32mconst[m [32mint[m arg = (argc == [31m4[m) ? atoi(argv[[31m3[m]) : [31m0[m;
    go(containerSpec, ints, arg);
  }
  [38;5;130mcatch[m ([32mconst[m std::exception& err) {
    std::cerr << err.what() << std::endl;
  }[51;80H91,1[10C97%[25;1H[?25h[?25l[51;70H~@k[25;1H[51;70H   [24;1H[51;81H0[24;1H[?25h[?25l[51;70H~@k[24;1H[51;70H   [25;1H[51;81H1[25;1H[?25h[?25l[51;70H~@k[25;1H[51;70H   [24;1H[51;81H0[24;1H[?25h[?25l[51;80H89[23;1H[?25h[?25l[51;81H8[22;1H[?25h[?25l[51;81H7[21;1H[?25h[?25l[51;81H6[20;1H[?25h[?25l[51;81H5[19;1H[?25h[?25l[51;81H4[18;1H[?25h[?25l[51;81H3[17;1H[?25h[?25l[51;81H2[16;1H[?25h[?25l[51;81H1[15;1H[?25h[?25l[51;81H0[14;1H[?25h[?25l[51;80H79[13;1H[?25h[?25l[51;81H8[12;1H[?25h[?25l[51;81H7[11;1H[?25h[?25l[51;81H6[10;1H[?25h[?25l[51;81H5[9;1H[?25h[?25l[51;81H4[8;1H[?25h[?25l[51;81H3[7;1H[?25h[?25l[51;81H2[6;1H[?25h[?25l[1;50r[1;1H[L[1;51r[1;1H[34m  }[m[51;1H[K[51;80H71,1[10C95%[6;1H[?25h[?25l[1;50r[1;1H[L[1;51r[1;1H[34m    noLoopFn(container.begin(), container.end(), arg);[m[51;80H[K[51;80H70,1[10C94%[6;1H[?25h[?25l[1;50r[1;1H[L[1;51r[1;1H[34m    loopFn(container.begin(), container.end(), arg);[m[51;80H[K[51;80H69,1[10C92%[6;1H[?25h[?25l[51;70H^[[6;1H[51;72HO[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;1H[34m    std::forward_list<int> container(ints.begin(), ints.end());[m[51;80H[K[51;80H68,1[10C91%[6;1H[?25h[?25l[1;50r[1;1H[L[1;51r[1;1H[34m  else if (containerSpec == "forward_list") {[m[51;80H[K[51;80H67,1[10C89%[6;1H[?25h[?25l[1;50r[1;1H[L[1;51r[1;1H[35m#if 0[m[51;80H[K[51;80H66,1[10C88%[6;1H[?25h[?25l[1;50r[1;1H[L[1;51r[1;3H}[51;80H[K[51;80H65,1[10C86%[6;1H[?25h[?25l[1;50r[1;1H[L[1;51r[1;5HnoLoopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H64,1[10C85%[6;1H[?25h[?25l[1;50r[1;1H[L[1;51r[1;5HloopFn(container.begin(), container.end(), arg);[51;80H[K[51;80H63,1[10C83%[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;5Hstd::deque<[32mint[m> container(ints.begin(), ints.end());[51;80H[K[51;80H62,1[10C82%[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;1H[1;50r[1;1H[L[1;51r[1;3H[38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"deque"[m) {[51;80H[K[51;80H61,1[10C80%[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [7;1H[51;81H2[7;1H[?25h[?25l[51;70H~@k[7;1H[51;70H   [6;1H[51;81H1[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [6;2H[51;83H2[6;2H[?25h[?25l[51;83H3[6;3H[?25h[?25l[51;83H4[6;4H[?25h[?25l[51;83H5[6;5H[?25h[?25l[51;70Hi[6;5H[51;70H [6;5H[51;1H[1m-- INSERT --[m[51;80H[K[51;80H61,5[10C80%[6;5H[?25h[?25l[51;83H6[6;6H[?25h[?25l[6;5H[K[7;1H  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {
    std::forward_list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {
    std::list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"multiset"[m) {
    std::multiset<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"set"[m) {
    std::set<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }[51;83H5[6;5H[?25h[?25l[35m1[m[51;83H6[6;6H[?25h[?25l[6;5H[K[51;83H5[6;5H[?25h[?25l[35m0[m
[34m  else if (containerSpec == "forward_list") {
    std::forward_list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "list") {
    std::list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "multiset") {
    std::multiset<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "set") {
    std::set<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }[m[51;83H6[6;6H[?25h[?25l[6;5H[K[7;1H  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"forward_list"[m) {
    std::forward_list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"list"[m) {
    std::list<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"multiset"[m) {
    std::multiset<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  [38;5;130melse[m [38;5;130mif[m (containerSpec == [31m"set"[m) {
    std::set<[32mint[m> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }[51;83H5[6;5H[?25h[?25l[35m1[m[51;83H6[6;6H[?25h[?25l[6;5H[K[51;83H5[6;5H[?25h[?25l[35m0[m
[34m  else if (containerSpec == "forward_list") {
    std::forward_list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "list") {
    std::list<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "multiset") {
    std::multiset<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }
  else if (containerSpec == "set") {
    std::set<int> container(ints.begin(), ints.end());
    loopFn(container.begin(), container.end(), arg);
    noLoopFn(container.begin(), container.end(), arg);
  }[m[51;83H6[6;6H[?25h[51;1H[K[6;5H[?25l[51;70H^[[6;5H[51;70H  [6;6H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;1H1 change; before #1  10 seconds ago[51;80H[K[51;80H61,5[10C80%[51;80H[K[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;1HAlready at oldest change[51;25H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;80H[K[51;80H61,5[10C80%[6;5H[?25h[?25l[51;80H[K[51;80H61,5[10C80%[6;5H[?25h[?25l[51;80H[K[51;80H61,5[10C80%[6;5H[?25h[?25l[51;80H[K[51;80H61,5[10C80%[6;5H[?25h[?25l[51;80H[K[51;80H61,5[10C80%[6;5H[?25h[?25l[51;80H[K[51;80H61,5[10C80%[6;5H[?25h[?25l[51;80H[K[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70Hu[6;5H[51;70H[K[6;5H[51;80H61,5[10C80%[6;5H[?25h[?25l[51;70H:[6;5H[51;1H[K[51;1H:[?2004h[?25hq[?25l[?25h[?25l[?1000l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[51;1H[K[51;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ ls
main  main.cc  main.o  sort.hh
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ ls
main  main.cc  main.o  sort.hh
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ make -f ../M<[Kakefile 
make: Nothing to be done for 'all'.
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ make -f ../Makefile [C[1@c[1@l[1@e[2@an[1@ 
rm -rf *.o *~ main .deps .gitignore
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ make clean -f ../Makefile [6P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main main.o; do echo $t >>.gitignore; done
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ make -f ../Makefile [6@clean [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[6P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kvim main.cc ./main set ../test.data 12[3@vector[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pdeque[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[ 11 12 22 22 42 43 56 64 ]
[ 11 12 22 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ ./main deque ../test.data 12[K[K56[C[C[C[C[C[C[C[C[C[C[C[1P[1P[1P[1P[1P[6@cector[1P[1@v
[ 11 12 22 22 42 43 56 64 ]
[ 11 12 22 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/3-sort$ cd ..
tman1@remote00:~/i240b/submit/lab7/exercises$ cd 4[K[K[K[Kls
1-out  2-find  3-sort  4-rm  Makefile  test.data
tman1@remote00:~/i240b/submit/lab7/exercises$ cd 4-rm/
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ ls
rm.hh
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ cp ../1-out/main
main     main.cc  main.o   
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ cp ../1-out/main.cc .
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ ls
main.cc  rm.hh
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ vim main.cc .[K
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 116L, 3175C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<iterator>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<utility>[m

[35m#include [m[31m<deque>[m
[35m#include [m[31m<forward_list>[m
[35m#include [m[31m<list>[m
[35m#include [m[31m<set>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"out.hh"[m

[34m/** Return vector of int's read from filePath.  If filePath is
 *  [m[31m"-"[m[34m read from stdin.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream fstream;
  [38;5;130mif[m (!isStdin) fstream.open(filePath);
  std::istream& in = (isStdin) ? std::cin : fstream;
  [38;5;130mif[m (!in) {
    [38;5;130mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[31;33H[31m": "[m + std::strerror(errno));
  }
  [34m//construct a vector from an istream_iterator on istream in.
[m  [34m//The two arguments give the begin and end of the iterator.[m
  std::vector<[32mint[m> ints((std::istream_iterator<[32mint[m>(in)),[36;25Hstd::istream_iterator<[32mint[m>());
  [34m//no in.close(); depend on RAII[m
  [38;5;130mreturn[m ints;
}


[32mstatic[m [32mvoid[m
go(std::string containerSpec, std::vector<[32mint[m> ints, [32mint[m arg)
{
  [38;5;130mif[m (containerSpec == [31m"[]"[m) {
    [32mint[m fixedArr[ints.size()];
    [32mint[m i = [31m0[m;
    [38;5;130mfor[m([32mauto[m x : ints)
    {[50;13HfixedArr[i] = x;[51;80H1,1[11CTop[1;1H[?25h[?25l[51;70H~@k[1;1H[51;70H   [2;1H[51;80H2[2;1H[?25h[?25l[51;70H~@k[2;1H[51;70H   [3;1H[51;80H3[3;1H[?25h[?25l[51;70H~@k[3;1H[51;70H   [4;1H[51;80H4[4;1H[?25h[?25l[51;70H~@k[4;1H[51;70H   [5;1H[51;80H5[5;1H[?25h[?25l[51;70H~@k[5;1H[51;70H   [6;1H[51;80H6[6;1H[?25h[?25l[51;80H7,0-1[7;1H[?25h[?25l[51;70H~@k[7;1H[51;70H   [8;1H[51;80H8,1  [8;1H[?25h[?25l[51;70H~@k[8;1H[51;70H   [9;1H[51;80H9[9;1H[?25h[?25l[51;70H~@k[9;1H[51;70H   [10;1H[51;80H10,1[10;1H[?25h[?25l[51;70H~@k[10;1H[51;70H   [11;1H[51;81H1[11;1H[?25h[?25l[51;70H~@k[11;1H[51;70H   [12;1H[51;81H2[12;1H[?25h[?25l[51;70H~@k[12;1H[51;70H   [13;1H[51;81H3,0-1[13;1H[?25h[?25l[51;70H~@k[13;1H[51;70H   [14;1H[51;81H4,1  [14;1H[?25h[?25l[51;70H~@k[14;1H[51;70H   [15;1H[51;81H5[15;1H[?25h[?25l[51;70H~@k[15;1H[51;70H   [16;1H[51;81H6,0-1[16;1H[?25h[?25l[51;70H~@k[16;1H[51;70H   [17;1H[51;81H7,1  [17;1H[?25h[?25l[51;70H~@k[17;1H[51;70H   [18;1H[51;81H8,0-1[18;1H[?25h[?25l[51;81H7,1  [17;1H[?25h[?25l[51;70Hi[17;1H[51;70H [17;1H[51;1H[1m-- INSERT --[m[51;13H[K[51;80H17,1[10CTop[17;1H[?25h[?25l[51;83H2[17;2H[?25h[?25l[51;83H3[17;3H[?25h[?25l[51;83H4[17;4H[?25h[?25l[51;83H5[17;5H[?25h[?25l[51;83H6[17;6H[?25h[?25l[51;83H7[17;7H[?25h[?25l[51;83H8[17;8H[?25h[?25l[51;83H9[17;9H[?25h[?25l[51;83H10[17;10H[?25h[?25l[51;84H1[17;11H[?25h[?25l[51;84H2[17;12H[?25h[?25l[51;84H3[17;13H[?25h[?25l[51;84H4[17;14H[?25h[?25l[31m.hh"[m[17;17H[K[51;84H3[17;13H[?25h[?25l[31m.hh"[m[17;16H[K[51;84H2[17;12H[?25h[?25l[31m.hh"[m[17;15H[K[51;84H1[17;11H[?25h[?25l[31mr.hh"[m[51;84H2[17;12H[?25h[?25l[31mm.hh"[m[51;84H3[17;13H[?25h[51;1H[K[17;12H[?25l[51;70H^[[17;12H[51;70H  [17;13H[51;80H17,12[9CTop[17;12H[?25h[?25l[51;70HZ[17;12H[?25h[?25l[51;71HZ[17;12H[?1000l[?2004l[51;1H"main.cc"[51;70H[K[51;11H116L, 3174C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ vim rm.hh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"rm.hh" 38L, 811C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef OUT_HH_
#define OUT_HH_

#include [m[31m<algorithm>[m
[35m#include [m[31m<vector>[m


[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m
outContainer(Iterator begin, Iterator end)
{
  std::cout << [31m"[ "[m;
  [32mauto[m print = []([32mconst[m [32mint[m& i) { std::cout << i << [31m" "[m ; };
  std::for_each(begin, end, print);
  std::cout << [31m"]"[m << std::endl;
}

[34m/** create a vector which is identical to [begin, end) but with first
 *  occurrence of arg removed.  Output vector elements within [ ],
 *  separated by spaces.
 */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m
loopFn(Iterator begin, Iterator end, [32mint[m arg)
{
  std::vector<[32mint[m> vec;
  [34m//@[m[30m[103mTODO[m
  outContainer(vec.begin(), vec.end());
}

[34m/** Exactly like loopFn() but no loops should be used */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m noLoopFn(Iterator begin, Iterator end, [32mint[m arg)
{
  [34m//@[m[30m[103mTODO[m
}

[35m#endif[m [34m//ifndef OUT_HH_[m
[94m~                                                                                                [40;1H~                                                                                                [41;1H~                                                                                                [42;1H~                                                                                                [43;1H~                                                                                                [44;1H~                                                                                                [45;1H~                                                                                                [46;1H~                                                                                                [47;1H~                                                                                                [48;1H~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H1,1[11CAll[1;1H[?25h[?25l[51;70HZ[1;1H[?25h[?25l[51;71HZ[1;1H[51;1H[?1000l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[51;1H[K[51;1H[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ cat rm.hh 
#ifndef OUT_HH_
#define OUT_HH_

#include <algorithm>
#include <vector>


template <typename Iterator>
void
outContainer(Iterator begin, Iterator end) 
{
  std::cout << "[ ";
  auto print = [](const int& i) { std::cout << i << " " ; };
  std::for_each(begin, end, print);
  std::cout << "]" << std::endl;
}

/** create a vector which is identical to [begin, end) but with first
 *  occurrence of arg removed.  Output vector elements within [ ],
 *  separated by spaces.
 */
template <typename Iterator>
void
loopFn(Iterator begin, Iterator end, int arg)
{
  std::vector<int> vec;
  //@TODO
  outContainer(vec.begin(), vec.end());
}

/** Exactly like loopFn() but no loops should be used */
template <typename Iterator>
void noLoopFn(Iterator begin, Iterator end, int arg)
{
  //@TODO
}

#endif //ifndef OUT_HH_
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ vim rm.hh 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"rm.hh" 38L, 811C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef OUT_HH_
#define OUT_HH_

#include [m[31m<algorithm>[m
[35m#include [m[31m<vector>[m


[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m
outContainer(Iterator begin, Iterator end)
{
  std::cout << [31m"[ "[m;
  [32mauto[m print = []([32mconst[m [32mint[m& i) { std::cout << i << [31m" "[m ; };
  std::for_each(begin, end, print);
  std::cout << [31m"]"[m << std::endl;
}

[34m/** create a vector which is identical to [begin, end) but with first
 *  occurrence of arg removed.  Output vector elements within [ ],
 *  separated by spaces.
 */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m
loopFn(Iterator begin, Iterator end, [32mint[m arg)
{
  std::vector<[32mint[m> vec;
  [34m//@[m[30m[103mTODO[m
  outContainer(vec.begin(), vec.end());
}

[34m/** Exactly like loopFn() but no loops should be used */[m
[32mtemplate[m <[32mtypename[m Iterator>
[32mvoid[m noLoopFn(Iterator begin, Iterator end, [32mint[m arg)
{
  [34m//@[m[30m[103mTODO[m
}

[35m#endif[m [34m//ifndef OUT_HH_[m
[94m~                                                                                                [40;1H~                                                                                                [41;1H~                                                                                                [42;1H~                                                                                                [43;1H~                                                                                                [44;1H~                                                                                                [45;1H~                                                                                                [46;1H~                                                                                                [47;1H~                                                                                                [48;1H~                                                                                                [49;1H~                                                                                                [50;1H~                                                                                                [m[51;80H1,1[11CAll[1;1H[?25h[?25l[51;70H~@k[1;1H[51;70H   [2;1H[51;80H2[2;1H[?25h[?25l[51;70H~@k[2;1H[51;70H   [3;1H[51;80H3,0-1[3;1H[?25h[?25l[51;70H~@k[3;1H[51;70H   [4;1H[51;80H4,1  [4;1H[?25h[?25l[51;70H~@k[4;1H[51;70H   [5;1H[51;80H5[5;1H[?25h[?25l[51;70H~@k[5;1H[51;70H   [6;1H[51;80H6,0-1[6;1H[?25h[?25l[51;70H~@k[6;1H[51;70H   [7;1H[51;80H7[7;1H[?25h[?25l[51;70H~@k[7;1H[51;70H   [8;1H[51;80H8,1  [8;1H[?25h[?25l[51;70H~@k[8;1H[51;70H   [9;1H[51;80H9[9;1H[?25h[?25l[51;70H~@k[9;1H[51;70H   [10;1H[51;80H10,1[10;1H[?25h[?25l[51;70H~@k[10;1H[51;70H   [11;1H[106m{[16;1H}[m[51;81H1[11;1H[?25h[?25l[51;70H~@k[11;1H[51;70H   [12;1H[11;1H{[16;1H}[51;81H2[12;1H[?25h[?25l[51;70H~@k[12;1H[51;70H   [13;1H[51;81H3[13;1H[?25h[?25l[51;70H~@k[13;1H[51;70H   [14;1H[51;81H4[14;1H[?25h[?25l[51;70H~@k[14;1H[51;70H   [15;1H[51;81H5[15;1H[?25h[?25l[51;70H~@k[15;1H[51;70H   [16;1H[11;1H[106m{[16;1H}[m[51;81H6[16;1H[?25h[?25l[51;70H~@k[16;1H[51;70H   [17;1H[11;1H{[16;1H}[51;81H7,0-1[17;1H[?25h[?25l[51;70H~@k[17;1H[51;70H   [18;1H[51;81H8,1  [18;1H[?25h[?25l[51;70H~@k[18;1H[51;70H   [19;1H[51;81H9[19;1H[?25h[?25l[51;70H~@k[19;1H[51;70H   [20;1H[51;80H20[20;1H[?25h[?25l[51;70H~@k[20;1H[51;70H   [21;1H[51;81H1[21;1H[?25h[?25l[51;70H~@k[21;1H[51;70H   [22;1H[51;81H2[22;1H[?25h[?25l[51;70H~@k[22;1H[51;70H   [23;1H[51;81H3[23;1H[?25h[?25l[51;70H~@k[23;1H[51;70H   [24;1H[51;81H4[24;1H[?25h[?25l[51;70H~@k[24;1H[51;70H   [25;1H[106m{[29;1H}[m[51;81H5[25;1H[?25h[?25l[51;70H~@k[25;1H[51;70H   [26;1H[25;1H{[29;1H}[51;81H6[26;1H[?25h[?25l[51;70H~@k[26;1H[51;70H   [27;1H[51;81H7[27;1H[?25h[?25l[51;70Hi[27;1H[51;70H [27;1H[51;1H[1m-- INSERT --[m[51;14H[K[51;80H27,1[10CAll[27;1H[?25h[?25l[51;81H6,2[26;2H[?25h[?25l[51;83H3[26;3H[?25h[?25l[51;83H4[26;4H[?25h[?25l[51;83H5[26;5H[?25h[?25l[51;83H6[26;6H[?25h[?25l[51;83H7[26;7H[?25h[?25l[51;83H8[26;8H[?25h[?25l[51;83H9[26;9H[?25h[?25l[51;83H10[26;10H[?25h[?25l[51;84H1[26;11H[?25h[?25l[51;84H2[26;12H[?25h[?25l[51;84H3[26;13H[?25h[?25l[51;84H4[26;14H[?25h[?25l[51;81H7,10[27;10H[?25h[?25l[34mTOD[m[27;9H[K[51;83H9 [27;9H[?25h[?25l[27;8H[K[51;83H8[27;8H[?25h[?25l[27;7H[K[51;83H7[27;7H[?25h[?25l[27;6H[K[51;83H6[27;6H[?25h[?25l[27;5H[K[51;83H5[27;5H[?25h[?25l/[27;4H[K[51;83H4[27;4H[?25h[?25l[27;3H[K[51;83H3[27;3H[?25h[?25l[51;83H2[27;2H[?25h[?25l[51;83H1[27;1H[?25h[?25l[26;50r[50;1H
[1;51r[26;3Hstd::vector<[32mint[m> vec;[50;1H[94m~                                                                                                [m[51;80H[K[51;80H26,24[9CAll[26;24H[?25h[?25l[27;50r[27;1H[L[1;51r[51;80H[K[51;80H27,3[10CAll[27;3H[?25h[?25l[51;80H[K[51;80H26,3[10CAll[26;3H[?25h[?25l[51;81H7,1[27;1H[?25h[?25l[26;50r[50;1H
[1;51r[26;3Hstd::vector<[32mint[m> vec;[50;1H[94m~                                                                                                [m[51;80H[K[51;80H26,24[9CAll[26;24H[?25h[?25l[27;50r[27;1H[L[1;51r[51;80H[K[51;80H27,3[10CAll[27;3H[?25h[?25lf[51;83H4[27;4H[?25h[?25lo[51;83H5[27;5H[?25h[?25l[38;5;130mfor[m[51;83H6[27;6H[?25h[?25l([51;83H7[27;7H[?25h[?25l)[106m()[m[51;83H8[27;8H[?25h[?25l[28;50r[28;1H[L[1;51r[51;80H[K[51;80H28,4-11[7CAll[27;6H()[28;11H[?25h[?25l  {[106m{

}[m[51;84H   [28;4H[?25h[?25l[29;50r[29;1H[L[1;51r[29;3H}
[106m [m
}[51;80H[K[51;80H29,4[10CAll[29;3H[106m}[m
 [29;4H[?25h[?25l[51;81H8[28;4H[?25h[?25l{
  }[51;81H7[27;4H[?25h[?25l[51;83H5[27;5H[?25h[?25l[1C[106m()[m[51;83H6[27;6H[?25h[?25l[51;83H7[27;7H[?25h[?25l[106ma[mu)au[106m)[m[51;83H9[27;9H[?25h[?25l[106mt[m)t[106m)[m[51;83H10[27;10H[?25h[?25l[32maut[m[32m[106mo[m)[32mo[m[106m)[m[51;84H1[27;11H[?25h[?25l[106m [m) [106m)[m[51;84H2[27;12H[?25h[?25l[106mx[m)x[106m)[m[51;84H3[27;13H[?25h[?25l[106m [m) [106m)[m[51;84H4[27;14H[?25h[?25l[106m:[m):[106m)[m[51;84H5[27;15H[?25h[?25l[106m [m) [106m)[m[51;84H6[27;16H[?25h[?25l[106mv[m)v[106m)[m[51;84H7[27;17H[?25h[?25l[106me[m)e[106m)[m[51;84H8[27;18H[?25h[?25l[106mc[m)c[106m)[m[51;84H9[27;19H[?25h[?25l)[27;19H[K[27;18H[106m)[m[51;84H8[27;18H[?25h[?25l)[27;18H[K[27;17H[106m)[m[51;84H7[27;17H[?25h[?25l)[27;17H[K[27;16H[106m)[m[51;84H6[27;16H[?25h[?25l)[27;16H[K[27;15H[106m)[m[51;84H5[27;15H[?25h[?25l)[27;15H[K[27;14H[106m)[m[51;84H4[27;14H[?25h[?25l)[27;14H[K[27;12H[106m)[m[51;84H2[27;12H[?25h[?25l)[27;12H[K[27;11H[106m)[m[51;84H1[27;11H[?25h[?25laut)[27;11H[K[27;10H[106m)[m[51;84H0[27;10H[?25h[?25l)[27;8H[K[27;7H[106m)[m[51;83H7 [27;7H[?25h[?25l[106mb[m)b[106m)[m[51;83H8[27;8H[?25h[?25l[106mo[m)o[106m)[m[51;83H9[27;9H[?25h[?25l[106mo[m)o[106m)[m[51;83H10[27;10H[?25h[?25l[32mboo[m[32m[106ml[m)[32ml[m[106m)[m[51;84H1[27;11H[?25h[?25l[106m [m) [106m)[m[51;84H2[27;12H[?25h[?25l[106mi[m)i[106m)[m[51;84H3[27;13H[?25h[?25l[106ms[m)s[106m)[m[51;84H4[27;14H[?25h[?25l[106mS[m)S[106m)[m[51;84H5[27;15H[?25h[?25l[106me[m)e[106m)[m[51;84H6[27;16H[?25h[?25l[106me[m)e[106m)[m[51;84H7[27;17H[?25h[?25l[106mn[m)n[106m)[m[51;84H8[27;18H[?25h[?25l[106m [m) [106m)[m[51;84H9[27;19H[?25h[?25l[106m=[m)=[106m)[m[51;83H20[27;20H[?25h[?25l[106m [m) [106m)[m[51;84H1[27;21H[?25h[?25l[106mf[m)f[106m)[m[51;84H2[27;22H[?25h[?25l[106ma[m)a[106m)[m[51;84H3[27;23H[?25h[?25l[106ms[m)s[106m)[m[51;84H4[27;24H[?25h[?25l[106ml[m)l[106m)[m[51;84H5[27;25H[?25h[?25l)[27;25H[K[27;24H[106m)[m[51;84H4[27;24H[?25h[?25l)[27;24H[K[27;23H[106m)[m[51;84H3[27;23H[?25h[?25l[106ml[m)l[106m)[m[51;84H4[27;24H[?25h[?25l[106ms[m)s[106m)[m[51;84H5[27;25H[?25h[?25l[31mfals[m[31m[106me[m)[31me[m[106m)[m[51;84H6[27;26H[?25h[?25l[106m;[m);[106m)[m[51;84H7[27;27H[?25h[?25l[106m [m) [106m)[m[51;84H8[27;28H[?25h[?25l[106mb[megin)begin[106m)[m[51;83H33[27;33H[?25h[?25l[106m [m) [106m)[m[51;84H4[27;34H[?25h[?25l[106m![m)![106m)[m[51;84H5[27;35H[?25h[?25l[106m=[m)=[106m)[m[51;84H6[27;36H[?25h[?25l[106m [m) [106m)[m[51;84H7[27;37H[?25h[?25l[106me[m)e[106m)[m[51;84H8[27;38H[?25h[?25l[106mn[m)n[106m)[m[51;84H9[27;39H[?25h[?25l[106md[m)d[106m)[m[51;83H40[27;40H[?25h[?25l[106m;[m);[106m)[m[51;84H1[27;41H[?25h[?25l[106m [m) [106m)[m[51;84H2[27;42H[?25h[?25l[106mb[m)b[106m)[m[51;84H3[27;43H[?25h[?25l[106me[m)e[106m)[m[51;84H4[27;44H[?25h[?25l[106mg[m)g[106m)[m[51;84H5[27;45H[?25h[?25l[106mi[m)i[106m)[m[51;84H6[27;46H[?25h[?25l[106mn[m)n[106m)[m[51;84H7[27;47H[?25h[?25l[106m+[m+)++[106m)[m[51;84H9[27;49H[?25h[?25l[27;6H([42C)
  [106m{
[m  [106m}[m[51;81H8,4 [28;4H[?25h[?25l[29;50r[29;1H[L[1;51r[29;10H[106m [m
  }[51;80H[K[51;80H29,4-11[7CAll[28;3H{[29;10H [?25h[?25lv[51;83H5-12[29;12H[?25h[?25le[51;83H6-13[29;13H[?25h[?25lc[51;83H7-14[29;14H[?25h[?25l.[51;83H8-15[29;15H[?25h[?25lp[51;83H9-16[29;16H[?25h[?25lu[51;83H10-17[29;17H[?25h[?25ls[51;84H1-18[29;18H[?25h[?25lh[51;84H2-19[29;19H[?25h[?25l_[51;84H3-20[29;20H[?25h[?25lba[51;84H5-22[29;22H[?25h[?25lc[51;84H6-23[29;23H[?25h[?25lk[51;84H7-24[29;24H[?25h[?25l([51;84H8-25[29;25H[?25h[?25l)[106m()[m[51;84H9-26[29;26H[?25h[?25l;()[51;83H20-27[29;27H[?25h[?25l[106m()[m[51;83H19-26[29;26H[?25h[?25l[51;84H8-25[29;25H[?25h[?25l[106m*[m);*[106m)[m[51;84H9-26[29;26H[?25h[?25l[106mb[m);b[106m)[m[51;83H20-27[29;27H[?25h[?25l[106me[m);e[106m)[m[51;84H1-28[29;28H[?25h[?25l[106mg[m);g[106m)[m[51;84H2-29[29;29H[?25h[?25l[106mi[m);i[106m)[m[51;84H3-30[29;30H[?25h[?25l[106mn[m);n[106m)[m[51;84H4-31[29;31H[?25h[?25l[28;3H[106m{[m[29;24H(*begin)
  [106m}[m[51;81H8,4    [28;4H[?25h[?25l{[29;24H[106m([m*begin[106m)[m
  }[51;81H9,24-31[29;31H[?25h[?25l[51;84H5-32[29;32H[?25h[?25l[29;24H(*begin)[51;84H6-33[29;33H[?25h[?25l[28;3H[106m{

[m  [106m}[m[51;81H8,4    [28;4H[?25h[?25l{

  }[51;81H9,26-33[29;33H[?25h[?25l[28;3H[106m{

[m  [106m}[m[51;81H8,4    [28;4H[?25h[?25l[29;50r[29;1H[L[1;51r[30;10H[106m [m
  }[51;80H[K[51;80H29,4-11[7CAll[28;3H{[30;10H [29;11H[?25h[?25li[51;83H5-12[29;12H[?25h[?25l[38;5;130mif[m[51;83H6-13[29;13H[?25h[?25l([51;83H7-14[29;14H[?25h[?25l*[51;83H8-15[29;15H[?25h[?25lb[51;83H9-16[29;16H[?25h[?25le[51;83H10-17[29;17H[?25h[?25lg[51;84H1-18[29;18H[?25h[?25li[51;84H2-19[29;19H[?25h[?25ln[51;84H3-20[29;20H[?25h[?25l[51;84H4-21[29;21H[?25h[?25l==[51;84H7-24[29;24H[?25h[?25la[51;84H8-25[29;25H[?25h[?25lr[51;84H9-26[29;26H[?25h[?25lg[51;83H20-27[29;27H[?25h[?25l)[29;13H[106m([13C)[m[51;84H1-28[29;28H[?25h[?25l[30;50r[30;1H[L[1;51r[51;80H[K[51;80H30,5-19[7CAll[29;13H([13C)[30;19H[?25h[?25lc[51;83H6-20[30;20H[?25h[?25lo[51;83H7-21[30;21H[?25h[?25ln[51;83H8-22[30;22H[?25h[?25lt[51;83H9-23[30;23H[?25h[?25li[51;83H10-24[30;24H[?25h[?25ln[51;84H1-25[30;25H[?25h[?25lu[51;84H2-26[30;26H[?25h[?25l[30;19H[38;5;130mcontinue[m[51;84H3-27[30;27H[?25h[?25l;[51;84H4-28[30;28H[?25h[?25l[29;13H[106m([13C)[m[51;80H29,21[29;28H[?25h[?25l[30;50r[30;1H[L[1;51r[51;80H[K[51;80H30,5-19[7CAll[29;13H([13C)[30;19H[?25h[?25l[30;11H{[106m{[33;3H}[m[51;86H2[30;12H[?25h[?25l[31;50r[31;1H[L[1;51r[33;10H[106m [m
  }[51;80H[K[51;80H31,5-19[7CAll[30;11H{[33;10H [31;19H[?25h[?25l[51;83H2-9 [31;9H[?25h[?25l[51;83H1  [31;1H[?25h[?25l[30;50r[50;1H
[1;51r[30;11H{[50;1H[94m~                                                                                                [m[51;80H[K[51;80H30,5-12[7CAll[30;11H[106m{[33;3H}[30;12H[?25h[?25l[m{[33;3H}[51;81H1,2-9 [31;9H[?25h[?25l[51;83H3-17[31;17H[?25h[?25l[51;83H4-18[31;18H[?25h[?25l[51;83H14-28[31;28H[?25h[?25l[32;50r[32;1H[L[1;51r[51;80H[K[51;80H32,5-19[7CAll[32;19H[?25h[?25l[32;11H}[30;11H[106m{[32;11H}[m[51;86H2[32;12H[?25h[?25l[30;11H{[32;11H}[51;81H1,2-9 [31;9H[?25h[?25l[30;11H[106m{[32;11H}[m[51;81H0,5-12[30;12H[?25h[?25l[31;50r[31;1H[L[1;51r[32;18H[106m [m[33;11H}[51;80H[K[51;80H31,5-19[7CAll[30;11H{[32;18H [31;19H[?25h[?25li[51;83H6-20[31;20H[?25h[?25ls[51;83H7-21[31;21H[?25h[?25lS[51;83H8-22[31;22H[?25h[?25leen[51;83H11-25[31;25H[?25h[?25l[51;84H2-26[31;26H[?25h[?25l=[51;84H3-27[31;27H[?25h[?25l[51;84H4-28[31;28H[?25h[?25lt[51;84H5-29[31;29H[?25h[?25lr[51;84H6-30[31;30H[?25h[?25l[31mtrue[m;[51;84H9-33[31;33H[?25h[?25l[30;11H[106m{[33;11H}[m[51;81H0,5-12 [30;12H[?25h[?25l[29;13H[106m([13C)[m[30;11H{[33;11H}[51;80H29,21-28[29;28H[?25h[?25l[51;84H0-27[29;27H[?25h[?25l[106m [m) [106m)[m[51;84H1-28[29;28H[?25h[?25l[106m&[m)&[106m)[m[51;84H2-29[29;29H[?25h[?25l[106m&[m)&[106m)[m[51;84H3-30[29;30H[?25h[?25l[106m [m) [106m)[m[51;84H4-31[29;31H[?25h[?25l[106mi[m)i[106m)[m[51;84H5-32[29;32H[?25h[?25l[106ms[m)s[106m)[m[51;84H6-33[29;33H[?25h[?25l[106mS[m)S[106m)[m[51;84H7-34[29;34H[?25h[?25l[106me[m)e[106m)[m[51;84H8-35[29;35H[?25h[?25l[106me[m)e[106m)[m[51;84H9-36[29;36H[?25h[?25l[106mn[m)n[106m)[m[51;83H30-37[29;37H[?25h[?25l[106m [m) [106m)[m[51;84H1-38[29;38H[?25h[?25l[106m=[m)=[106m)[m[51;84H2-39[29;39H[?25h[?25l[106m=[m)=[106m)[m[51;84H3-40[29;40H[?25h[?25l[106m [m) [106m)[m[51;84H4-41[29;41H[?25h[?25l[106ma[m)a[106m)[m[51;84H5-42[29;42H[?25h[?25l)[29;42H[K[29;41H[106m)[m[51;84H4-41[29;41H[?25h[?25l[106mf[m)f[106m)[m[51;84H5-42[29;42H[?25h[?25l[106ma[m)a[106m)[m[51;84H6-43[29;43H[?25h[?25l[106ml[m)l[106m)[m[51;84H7-44[29;44H[?25h[?25l[106ms[m)s[106m)[m[51;84H8-45[29;45H[?25h[?25l[31mfals[m[31m[106me[m)[31me[m[106m)[m[51;84H9-46[29;46H[?25h[?25l[29;13H([32C)[30;11H[106m{[33;11H}[m[51;80H30,5-12 [30;12H[?25h[?25l{[33;11H}[51;81H1,19-33[31;33H[?25h[?25l[51;81H2,14-28[32;28H[?25h[?25l[51;81H1,19-33[31;33H[?25h[?25l[30;11H[106m{[33;11H}[m[51;81H0,5-12 [30;12H[?25h[?25l{[33;11H}[51;81H1,19-33[31;33H[?25h[?25l[51;81H2,14-28[32;28H[?25h[?25l[30;11H[106m{[33;11H}[m[51;81H3,5-12 [33;12H[?25h[?25l[28;3H[106m{[m[30;11H{[33;11H}

  [106m}[m[51;81H5,4   [35;4H[?25h[?25l[28;3H{[35;3H}[51;81H4,26-33[34;33H[?25h[?25l[30;11H[106m{[33;11H}[m[51;81H3,5-12 [33;12H[?25h[?25l[30;11H{[33;11H}[51;81H2,14-28[32;28H[?25h[?25l[30;11H[106m{[33;11H}[m[51;81H3,5-12 [33;12H[?25h[?25l[30;11H{[33;11H}[51;81H4,26-33[34;33H[?25h[?25l[28;3H[106m{[35;3H}[m[51;81H5,4    [35;4H[?25h[?25l[28;3H{[35;3H}[51;81H6,40[36;40H[?25h[?25l[28;3H[106m{[35;3H}[m[51;81H5,4 [35;4H[?25h[?25l[28;3H{[35;3H}[51;81H4,26-33[34;33H[?25h[?25l[28;3H[106m{[35;3H}[m[51;81H5,4    [35;4H[?25h[?25l[28;3H{[35;3H}[51;81H6,40[36;40H[?25h[?25l[25;1H[106m{[37;1H}[m[51;81H7,2 [37;2H[?25h[?25l[25;1H{[37;1H}[51;81H8,1[38;1H[?25h[?25l[51;81H9,46[39;46H[?25h[?25l[51;80H40,29[40;29H[?25h[?25l[51;81H1,46[41;46H[?25h[?25l
[106m{

}[m[51;81H2,2 [42;2H[?25h[?25l{

}[51;81H3,10[43;10H[?25h[?25l[42;1H[106m{

}[m[51;81H4,2 [44;2H[?25h[?25l[42;1H{

}[51;81H5,1[45;1H[?25h[?25l[42;1H[106m{

}[m[51;81H4,2[44;2H[?25h[?25l[42;1H{

}[51;81H3,10[43;10H[?25h[?25l[42;1H[106m{

}[m[51;81H2,2 [42;2H[?25h[?25l{

}[51;81H3,10[43;10H[?25h[?25l[51;80H[K[51;80H43,10[9CAll[43;10H[?25h[51;1H[K[?25l[51;80H43,9[10CAll[43;9H[?25h[?25l[51;70Hu[43;9H[51;1H1 change; before #10  05:42:25[51;70H[K[29;27H[29;13H[106m([13C)[m[29;28H[K[51;80H29,20-27      All[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;3Hline less; before #9  05:42:19[51;80H[K[29;50r[50;1H
[1;51r[29;11H[38;5;130mif[m(*begin == arg)[30;11H[106m{[m[30;19H[K[32;11H[106m}[m[50;1H[94m~                                                                                                [m[51;1H[K[51;80H30,4-11[7CAll1 line less; before #9  05:42:19[51;80H[K[51;80H30,4-11[7CAll[30;11H[?25h[?25l[51;70Hu[30;11H[51;22H8[9C6[51;70H[K[31;27H[30;50r[50;1H
[1;51r[30;11H{[30;19H[K[31;11H [7C[38;5;130mcontinue[m;[50;1H[94m~                                                                                                [m[51;1H[K[51;80H31,13-27      All1 line less; before #8  05:42:16[51;80H[K[51;80H31,13-27      All[31;27H[?25h[?25l[51;70Hu[31;27H[51;22H7[9C1[51;70H[K[29;27H[29;50r[50;1H
[1;51r[29;11H[38;5;130mif[m[106m([m*begin == arg[106m)[m[50;1H[94m~                                                                                                [m[51;1H[K[51;80H29,20-27      All1 line less; before #7  05:42:11[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;70Hu[29;27H[51;1H2 fewer lines; before #6  05:42:03[51;70H[K[28;3H[28;50r[28;1H[2M[1;51r[28;3H[106m{[m[28;19H[K[30;3H[106m}[m[49;1H[94m~                                                                                                [50;1H~                                                                                                [m[51;1H[K[51;80H28,3[10CAll2 fewer lines; before #6  05:42:03[51;80H[K[51;80H28,3[10CAll[28;3H[?25h[?25l[51;70H^R[28;3H[51;3Hmore lines; after #6  05:42:03[51;33H[K[28;3H[31;50r[31;1H[2L[1;51r[29;11H[38;5;130mif[m(*begin == arg)[29;28H[K[30;3H [15C[38;5;130mcontinue[m;[31;11Hvec.push_back(*begin);
  [106m}[m[51;1H[K[51;80H28,3[10CAll2 more lines; after #6  05:42:03[51;80H[K[51;80H28,3[10CAll[28;3H[?25h[?25l[51;70H^R[28;3H[51;1H1[10C; after #7  05:42:11[51;32H[K[29;27H[32;50r[32;1H[L[1;51r[28;3H{[29;13H[106m([13C)[m[30;11H{[30;19H[K[31;11H        [38;5;130mcontinue[m;[31;28H[K[32;11Hvec.push_back(*begin);
  }[51;1H[K[51;80H29,20-27      All1 more line; after #7  05:42:11[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;21H8[9C6[51;80H[K[32;50r[32;1H[L[1;51r[29;13H([13C)[32;11H}[51;1H[K[51;80H31,13-27      All1 more line; after #8  05:42:16[51;80H[K[51;80H31,13-27      All[31;27H[?25h[?25l[51;21H9[9C9[51;80H[K[33;50r[33;1H[L[1;51r[30;11H[106m{[m[31;19HisSeen = [31mtrue[m;[32;11H [7C[38;5;130mcontinue[m;[33;11H[106m}[m[51;1H[K[51;80H30,4-11[7CAll1 more line; after #9  05:42:19[51;80H[K[51;80H30,4-11[7CAll[30;11H[?25h[?25l[51;70H^R[30;11H[51;3Hchange; after #10  05:42:25[51;30H[K[29;27H && isSeen == [31mfalse[m)[30;11H{[33;11H}[51;80H29,20-27      All[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;1HAlready at newest change[51;25H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;70H^R[29;27H[51;70H[K[29;27H[51;80H29,20-27      All[29;27H[?25h[?25l[51;70Hu[29;27H[51;1H1 change; before #10  05:42:25[51;70H[K[29;27H[29;13H[106m([13C)[m[29;28H[K[51;80H29,20-27      All[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;70H^R[29;27H[51;11Hafter #10  05:42:25[51;30H[K[29;27H[29;13H([13C && isSeen == [31mfalse[m)[51;80H29,20-27      All[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;70H^R[29;27H[51;1HAlready at newest change[51;25H[K[29;27H[51;80H29,20-27      All[29;27H[?25h[?25l[51;80H[K[51;80H29,20-27      All[29;27H[?25h[?25l[51;70H^R[29;27H[51;70H[K[29;27H[51;80H29,20-27      All[29;27H[?25h[?25l[?25h[?25l[51;70H~@k[29;27H[51;70H   [30;11H[106m{[33;11H}[m[51;80H30,4-11 [30;11H[?25h[?25l[51;70H~@k[30;11H[51;70H   [31;27H[30;11H{[33;11H}[51;81H1,13-27[31;27H[?25h[?25l[51;70H~@k[31;27H[51;70H   [32;27H[51;81H2[32;27H[?25h[?25l[51;70H~@k[32;27H[51;70H   [33;11H[30;11H[106m{[33;11H}[m[51;81H3,4-11 [33;11H[?25h[?25l[51;70H~@k[33;11H[51;70H   [34;27H[30;11H{[33;11H}[51;81H4,20-27[34;27H[?25h[?25l[51;70H~@k[34;27H[51;70H   [35;3H[28;3H[106m{[35;3H}[m[51;81H5,3    [35;3H[?25h[?25l[51;70H~@k[35;3H[51;70H   [36;27H[28;3H{[35;3H}[51;81H6,27[36;27H[?25h[?25l[51;70H~@k[36;27H[51;70H   [37;1H[25;1H[106m{[37;1H}[m[51;81H7,1 [37;1H[?25h[?25l[51;70H~@k[37;1H[51;70H   [38;1H[25;1H{[37;1H}[51;81H8,0-1[38;1H[?25h[?25l[51;70H~@k[38;1H[51;70H   [39;27H[51;81H9,27 [39;27H[?25h[?25l[51;70H~@k[39;27H[51;70H   [40;27H[51;80H40[40;27H[?25h[?25l[51;70H~@k[40;27H[51;70H   [41;27H[51;81H1[41;27H[?25h[?25l[51;70H~@k[41;27H[51;70H   [42;1H[106m{

}[m[51;81H2,1 [42;1H[?25h[?25l[51;70H~@k[42;1H[51;70H   [43;9H[42;1H{

}[51;81H3,9[43;9H[?25h[?25l[51;70H~@k[43;9H[51;70H   [44;1H[42;1H[106m{

}[m[51;81H4,1[44;1H[?25h[?25l[51;70H~@k[44;1H[51;70H   [43;9H[42;1H{

}[51;81H3,9[43;9H[?25h[?25l[51;70H~@k[43;9H[51;70H   [43;8H[51;83H8[43;8H[?25h[?25l[51;70H~@k[43;8H[51;70H   [43;7H[51;83H7[43;7H[?25h[?25l[51;70H~@k[43;7H[51;70H   [43;6H[51;83H6[43;6H[?25h[?25l[51;70Hi[43;6H[51;70H [43;6H[51;1H[1m-- INSERT --[m[51;13H[K[51;80H43,6[10CAll[43;6H[?25h[?25l[51;83H7[43;7H[?25h[?25l[51;83H8[43;8H[?25h[?25l[51;83H9[43;9H[?25h[?25l[51;83H10[43;10H[?25h[?25l[34mTOD[m[43;9H[K[51;83H9 [43;9H[?25h[?25l[43;8H[K[51;83H8[43;8H[?25h[?25l[43;7H[K[51;83H7[43;7H[?25h[?25l[43;6H[K[51;83H6[43;6H[?25h[?25l[43;5H[K[51;83H5[43;5H[?25h[?25l/[43;4H[K[51;83H4[43;4H[?25h[?25l[43;3H[K[51;83H3[43;3H[?25h[?25l[51;83H2[43;2H[?25h[?25l[51;83H1[43;1H[?25h[?25l[42;50r[50;1H
[1;51r[42;1H{[50;1H[94m~                                                                                                [m[51;80H[K[51;80H42,2[10CAll[42;1H[106m{
}[42;2H[?25h[?25l[43;50r[m[43;1H[L[1;51r[43;1H[106m        [m
}[51;80H[K[51;80H43,2-9[8CAll[42;1H{
        [?25h[?25l[51;83H1  [43;1H[?25h[?25l[42;50r[50;1H
[1;51r[42;1H{[50;1H[94m~                                                                                                [m[51;80H[K[51;80H42,2[10CAll[42;1H[106m{
}[42;2H[?25h[?25l[43;50r[m[43;1H[L[1;51r[43;1H[106m        [m
}[51;80H[K[51;80H43,2-9[8CAll[42;1H{
        [?25h[?25l[51;83H1  [43;1H[?25h[?25l[51;83H2[43;2H[?25h[?25l[51;83H3[43;3H[?25h[?25lf[51;83H4[43;4H[?25h[?25lo[51;83H5[43;5H[?25h[?25l[38;5;130mfor[m[51;83H6[43;6H[?25h[?25l[42;1H[106m{

}[m[51;81H2,2[42;2H[?25h[?25l[43;50r[43;1H[L[1;51r[44;1H[106m [m
}[51;80H[K[51;80H43,2-9[8CAll[42;1H{

 [43;9H[?25h[?25l[51;83H1  [43;1H[?25h[?25l[42;50r[50;1H
[1;51r[42;1H{[50;1H[94m~                                                                                                [m[51;80H[K[51;80H42,2[10CAll[42;1H[106m{

}[42;2H[?25h[?25l[m{

}[51;81H3[43;2H[?25h[?25l[51;83H3[43;3H[?25h[?25l[51;83H4[43;4H[?25h[?25l[51;83H5[43;5H[?25h[?25l[51;83H6[43;6H[?25h[?25lfo[43;5H[K[51;83H5[43;5H[?25h[?25l[43;4H[K[51;83H4[43;4H[?25h[?25l[43;3H[K[51;83H3[43;3H[?25h[?25ls[51;83H4[43;4H[?25h[?25lt[51;83H5[43;5H[?25h[?25ld[51;83H6[43;6H[?25h[?25l[38;5;130mstd[m:[43;5H[K[51;83H5[43;5H[?25h[?25l        std::[51;83H7-14[43;14H[?25h[?25lv[51;83H8-15[43;15H[?25h[?25le[51;83H9-16[43;16H[?25h[?25lc[51;83H10-17[43;17H[?25h[?25lt[51;84H1-18[43;18H[?25h[?25lo[51;84H2-19[43;19H[?25h[?25lr[51;84H3-20[43;20H[?25h[?25l<[51;84H4-21[43;21H[?25h[?25li[51;84H5-22[43;22H[?25h[?25ln[51;84H6-23[43;23H[?25h[?25l[32mint[m[51;84H7-24[43;24H[?25h[?25l> vec[51;83H22-29[43;29H[?25h[?25l([51;84H3-30[43;30H[?25h[?25lbegin[51;84H8-35[43;35H[?25h[?25l,[51;84H9-36[43;36H[?25h[?25l[51;83H30-37[43;37H[?25h[?25le[51;84H1-38[43;38H[?25h[?25ln[51;84H2-39[43;39H[?25h[?25ld[51;84H3-40[43;40H[?25h[?25l)[43;29H[106m([10C)[m[51;84H4-41[43;41H[?25h[?25l;[43;29H([10C)[51;84H5-42[43;42H[?25h[?25l[42;1H[106m{

}[m[51;81H2,2    [42;2H[?25h[?25l[51;80H[K[51;80H42,2[10CAll[42;2H[?25h[?25l{

}[51;81H1,42[41;42H[?25h[?25l[51;81H6,24[46;24H[?25h[?25l[51;81H5,1 [45;1H[?25h[?25l[42;1H[106m{

}[m[51;81H4,2[44;2H[?25h[?25l[42;1H{

}[51;81H3,35-42[43;42H[?25h[51;1H[K[43;41H[?25l[51;70H^[[43;41H[51;70H  [43;42H[51;80H43,34-41      All[43;41H[?25h[?25l[51;70H:[43;41H[51;70H[K[51;1H:[?2004h[?25hw[?25l[?25h[?25l"rm.hh" 46L, 993C written[43;41H[51;80H43,34-41      All[51;80H[K[51;80H43,34-41      All[43;41H[?25h[?25l[51;1H[1m-- INSERT --[m[51;14H[K[51;80H43,34-41      All[51;84H5-42[43;42H[?25h[?25l[44;50r[44;1H[L[1;51r[51;80H[K[51;80H44,2-9[8CAll[44;9H[?25h[?25lv[51;83H3-10[44;10H[?25h[?25le[51;83H4-11[44;11H[?25h[?25lc[51;83H5-12[44;12H[?25h[?25l.era[51;83H9-16[44;16H[?25h[?25ls[51;83H10-17[44;17H[?25h[?25le[51;84H1-18[44;18H[?25h[?25l([51;84H2-19[44;19H[?25h[?25l)[106m()[m[51;84H3-20[44;20H[?25h[?25l;()[51;84H4-21[44;21H[?25h[?25l[106m()[m[51;84H3-20[44;20H[?25h[?25l[51;84H2-19[44;19H[?25h[?25l[106mf[m);f[106m)[m[51;84H3-20[44;20H[?25h[?25l[106mi[m);i[106m)[m[51;84H4-21[44;21H[?25h[?25l[106mn[m);n[106m)[m[51;84H5-22[44;22H[?25h[?25l[106md[m);d[106m)[m[51;84H6-23[44;23H[?25h[?25l[106m([m);[44;18H([5C[106m)[m[51;84H7-24[44;24H[?25h[?25l[1C);[44;18H[106m([mfind()[106m)[m[51;84H8-25[44;25H[?25h[?25l[44;18H(find[106m()[m)[51;84H7-24[44;24H[?25h[?25l()[51;81H3[43;24H[?25h[?25l[44;23H[106m()[m[51;81H4[44;24H[?25h[?25l[106mb[m));b[106m)[m[51;84H8-25[44;25H[?25h[?25l[106me[m));e[106m)[m[51;84H9-26[44;26H[?25h[?25l[106mg[m));g[106m)[m[51;83H20-27[44;27H[?25h[?25l[106mi[m));i[106m)[m[51;84H1-28[44;28H[?25h[?25l[106mn[m));n[106m)[m[51;84H2-29[44;29H[?25h[?25l[106m,[m));,[106m)[m[51;84H3-30[44;30H[?25h[?25l[106m [m)); [106m)[m[51;84H4-31[44;31H[?25h[?25l[106me[mnd,));[44;31Hend,[106m)[m[51;84H8-35[44;35H[?25h[?25l[106m [mar)); ar[106m)[m[51;83H31-38[44;38H[?25h[?25l[106mg[m));g[106m)[m[51;84H2-39[44;39H[?25h[?25l[44;18H[106m([mfind([15C)[106m)[m[51;84H3-40[44;40H[?25h[?25l[44;18H([21C)[51;81H3,35-42[43;42H[?25h[?25l[42;1H[106m{


}[m[51;81H2,2    [42;2H[?25h[?25l{


}[51;81H3,35-42[43;42H[?25h[?25l[51;81H4[44;42H[?25h[?25l[51;80H[K[51;80H44,35-42      All[44;42H[?25h[?25l[51;81H3[43;42H[?25h[?25l[44;50r[44;1H[L[1;51r[51;80H[K[51;80H44,2-9[8CAll[44;9H[?25h[?25li[51;83H3-10[44;10H[?25h[?25l[38;5;130mif[m([51;83H5-12[44;12H[?25h[?25lf[51;83H6-13[44;13H[?25h[?25li[51;83H7-14[44;14H[?25h[?25ln[51;83H8-15[44;15H[?25h[?25ld[51;83H9-16[44;16H[?25h[?25l([51;83H10-17[44;17H[?25h[?25l)[106m()[m[51;84H1-18[44;18H[?25h[?25l)[44;11H[106m([mfind()[106m)[m[51;84H2-19[44;19H[?25h[?25l[51;84H1-18[44;18H[?25h[?25l[44;11H(find[106m()[m)[51;84H0-17[44;17H[?25h[?25l[106mb[m))b[106m)[m[51;84H1-18[44;18H[?25h[?25l[106me[m))e[106m)[m[51;84H2-19[44;19H[?25h[?25l[106mg[m))g[106m)[m[51;84H3-20[44;20H[?25h[?25l[106mi[m))i[106m)[m[51;84H4-21[44;21H[?25h[?25l[106mn[m))n[106m)[m[51;84H5-22[44;22H[?25h[?25l[106m,[m)),[106m)[m[51;84H6-23[44;23H[?25h[?25l[106m [m)) [106m)[m[51;84H7-24[44;24H[?25h[?25l[106me[m))e[106m)[m[51;84H8-25[44;25H[?25h[?25l[106mn[m))n[106m)[m[51;84H9-26[44;26H[?25h[?25l[106md[m))d[106m)[m[51;83H20-27[44;27H[?25h[?25l[106m,[m)),[106m)[m[51;84H1-28[44;28H[?25h[?25l[106m [m)) [106m)[m[51;84H2-29[44;29H[?25h[?25l[106me[m))e[106m)[m[51;84H3-30[44;30H[?25h[?25l)[44;31H[K[44;29H[106m)[m)[51;84H2-29[44;29H[?25h[?25l[106ma[m))a[106m)[m[51;84H3-30[44;30H[?25h[?25l[106mr[m))r[106m)[m[51;84H4-31[44;31H[?25h[?25l[106mg[m))g[106m)[m[51;84H5-32[44;32H[?25h[?25l[1C )[44;11H[106m([mfind([15C) [106m)[m[51;84H7-34[44;34H[?25h[?25l[106m![m)![106m)[m[51;84H8-35[44;35H[?25h[?25l[106m [m) [106m)[m[51;84H9-36[44;36H[?25h[?25l)[44;36H[K[44;35H[106m)[m[51;84H8-35[44;35H[?25h[?25l[106m=[m)=[106m)[m[51;84H9-36[44;36H[?25h[?25l[106m [m) [106m)[m[51;83H30-37[44;37H[?25h[?25l[106me[m)e[106m)[m[51;84H1-38[44;38H[?25h[?25l[106mn[m)n[106m)[m[51;84H2-39[44;39H[?25h[?25l[106md[m)d[106m)[m[51;84H3-40[44;40H[?25h[?25l[43;29H[106m([10C)[m[44;11H([28C)[51;81H3[43;40H[?25h[?25l[43;29H([10C)[44;11H[106m([28C)[m[51;81H4[44;40H[?25h[?25l[51;84H4-41[44;41H[?25h[?25l[44;11H([28C)[45;18H[106m([21C)[m[51;81H5[45;41H[?25h[?25l[51;84H3-40[45;40H[?25h[?25l[45;18H(find[106m([15C)[m)[51;84H2-39[45;39H[?25h[?25l[45;23H([15C)[51;84H1-38[45;38H[?25h[?25l[51;84H0-37[45;37H[?25h[?25l[51;83H29-36[45;36H[?25h[?25l[51;84H8-35[45;35H[?25h[?25l[51;84H7-34[45;34H[?25h[?25l[51;84H6-33[45;33H[?25h[?25l[51;84H5-32[45;32H[?25h[?25l[51;84H4-31[45;31H[?25h[?25l[51;84H3-30[45;30H[?25h[?25l[51;84H2-29[45;29H[?25h[?25l[51;84H1-28[45;28H[?25h[?25l[51;84H0-27[45;27H[?25h[?25l[51;83H19-26[45;26H[?25h[?25l[51;84H8-25[45;25H[?25h[?25l[106m([15C)[m[51;84H7-24[45;24H[?25h[?25l[51;84H6-23[45;23H[?25h[?25l([15C)[51;84H5-22[45;22H[?25h[?25l[51;84H4-21[45;21H[?25h[?25l[51;84H3-20[45;20H[?25h[?25l[106m([21C)[m[51;84H2-19[45;19H[?25h[?25l[51;84H1-18[45;18H[?25h[?25l([21C)[51;84H0-17[45;17H[?25h[?25l[51;83H9-16 [45;16H[?25h[?25l[51;83H8-15[45;15H[?25h[?25l[51;83H7-14[45;14H[?25h[?25l[51;83H6-13[45;13H[?25h[?25l[51;83H5-12[45;12H[?25h[?25l[51;83H4-11[45;11H[?25h[?25l[51;83H3-10[45;10H[?25h[?25l[51;83H2-9 [45;9H[?25h[?25l        vec.erase(find(begin, end, arg));[51;83H3-17[45;17H[?25h[?25l[51;83H4-18[45;18H[?25h[?25l[51;83H5-19[45;19H[?25h[?25l[51;83H6-20[45;20H[?25h[?25l[51;83H7-21[45;21H[?25h[?25l[51;83H8-22[45;22H[?25h[?25l[51;83H9-23[45;23H[?25h[?25l[51;83H10-24[45;24H[?25h[?25l[51;84H1-25[45;25H[?25h[?25le[106m([21C)[m[51;84H2-26[45;26H[?25h[?25l[51;84H3-27[45;27H[?25h[?25l([21C)[51;84H4-28[45;28H[?25h[?25l[51;84H5-29[45;29H[?25h[?25l[51;84H6-30[45;30H[?25h[?25ld[106m([15C)[m[51;84H7-31[45;31H[?25h[?25l[51;84H8-32[45;32H[?25h[?25l([15C)[51;84H9-33[45;33H[?25h[?25l[51;83H20-34[45;34H[?25h[?25l[51;84H1-35[45;35H[?25h[?25l[51;84H2-36[45;36H[?25h[?25l[51;84H3-37[45;37H[?25h[?25l[51;84H4-38[45;38H[?25h[?25l[51;84H5-39[45;39H[?25h[?25l[51;83H36-50[45;50H[?25h[?25l[1;50r[50;1H
[1;51r[45;50r[45;1H[L[1;51r[51;80H[K[51;80H46,2-9[8CBot[45;9H[?25h[?25lo[51;83H3-10[45;10H[?25h[?25lu[51;83H4-11[45;11H[?25h[?25lt[51;83H5-12[45;12H[?25h[?25lC[51;83H6-13[45;13H[?25h[?25lo[51;83H7-14[45;14H[?25h[?25ln[51;83H8-15[45;15H[?25h[?25lt[51;83H9-16[45;16H[?25h[?25la[51;83H10-17[45;17H[?25h[?25li[51;84H1-18[45;18H[?25h[?25ln[51;84H2-19[45;19H[?25h[?25ler[51;84H4-21[45;21H[?25h[?25l([51;84H5-22[45;22H[?25h[?25l)[106m()[m[51;84H6-23[45;23H[?25h[?25l;()[51;84H7-24[45;24H[?25h[?25l[106m()[m[51;84H6-23[45;23H[?25h[?25l[51;84H5-22[45;22H[?25h[?25l[106mv[mec.begin);[45;22Hv[8C[106m)[m[51;83H24-31[45;31H[?25h[?25l[106m([m);[45;21H([10C[106m)[m[51;84H5-32[45;32H[?25h[?25l[1C);[45;21H[106m([m[9C()[106m)[m[51;84H6-33[45;33H[?25h[?25l[106m,[m);,[106m)[m[51;84H7-34[45;34H[?25h[?25l[106m [mvec.edn());[45;34H [9C[106m)[m[51;83H37-4[45;44H[?25h[?25l[45;21H([22C)[51;81H5,30[44;44H[?25h[?25l[43;11H[106m([28C)[m[51;81H4,34-41[43;41H[?25h[?25l[43;11H([28C)[51;81H3,35-42[42;42H[?25h[?25l[41;1H[106m{[46;1H}[m[51;81H2,2    [41;2H[?25h[?25l{[46;1H}[51;81H3,35-42[42;42H[?25h[?25l[41;1H[106m{[46;1H}[m[51;81H2,2    [41;2H[?25h[?25l{[46;1H}[51;81H1,44[40;44H[?25h[?25l
[106m{[46;1H}[m[51;81H2,2 [41;2H[?25h[?25l{[46;1H}[51;81H3,35-42[42;42H[?25h[?25l[43;11H[106m([28C)[m[51;81H4,34-41[43;41H[?25h[?25l[51;84H3-40[43;40H[?25h[?25l[43;11H([28C)[51;83H19-26[43;26H[?25h[?25l[51;84H5-22[43;22H[?25h[?25l[51;84H4-21[43;21H[?25h[?25l[51;84H3-20[43;20H[?25h[?25l[51;84H2-19[43;19H[?25h[?25l[51;84H1-18[43;18H[?25h[?25l[106m([15C)[m[51;84H0-17[43;17H[?25h[?25lvbegin, end, ar[106mg[m) != end)[43;16H([15Cg[51;84H1-18[43;18H[?25h[?25lebegin, end, arg) != end)[51;84H2-19[43;19H[?25h[?25lcbegin, end, arg) != end)[51;84H3-20[43;20H[?25h[?25l.begin, end, arg) != end)[51;84H4-21[43;21H[?25h[?25l[51;84H5-22[43;22H[?25h[?25l[51;84H6-23[43;23H[?25h[?25l[51;84H7-24[43;24H[?25h[?25l[51;84H8-25[43;25H[?25h[?25l[51;84H9-26[43;26H[?25h[?25l(, end, arg) != end)[43;26H[106m([10C)[m[51;83H20-27[43;27H[?25h[?25l), end, ar[106mg[m) != end)[43;27H[106m)[m[9Cg[51;84H1-28[43;28H[?25h[?25l()[51;84H4-31[43;31H[?25h[?25l[51;84H3-30[43;30H[?25h[?25lvend, arg) != end)[51;84H4-31[43;31H[?25h[?25leend, arg) != end)[51;84H5-32[43;32H[?25h[?25lcend, arg) != end)[51;84H6-33[43;33H[?25h[?25l.end, arg) != end)[51;84H7-34[43;34H[?25h[?25l[51;84H8-35[43;35H[?25h[?25l[51;84H9-36[43;36H[?25h[?25l[51;83H30-37[43;37H[?25h[?25l(, arg) != end)[43;37H[106m([m, arg[106m)[m[51;84H1-38[43;38H[?25h[?25l), ar[106mg[m) != end)[43;38H[106m)[m, arg[51;84H2-39[43;39H[?25h[?25l()[51;81H3[42;39H[?25h[?25l[43;37H[106m()[m[51;81H4[43;39H[?25h[?25l()[51;84H3-40[43;40H[?25h[?25l[51;81H5,26[44;40H[?25h[?25l[51;81H4,34-41[43;41H[?25h[?25l[51;84H5-42[43;42H[?25h[?25l[51;84H6-43[43;43H[?25h[?25l[43;16H[106m([27C)[m[51;84H7-44[43;44H[?25h[?25l[51;84H8-45[43;45H[?25h[?25l[43;16H([27C)[51;84H9-46[43;46H[?25h[?25l[51;83H40-47[43;47H[?25h[?25l[51;84H1-48[43;48H[?25h[?25l[51;84H2-49[43;49H[?25h[?25l[51;84H3-50[43;50H[?25h[?25l[51;84H2-49[43;49H[?25h[?25lveend)[51;84H4-51[43;51H[?25h[?25lcend)[51;84H5-52[43;52H[?25h[?25l.end)[51;84H6-53[43;53H[?25h[?25l[51;84H7-54[43;54H[?25h[?25l[51;84H8-55[43;55H[?25h[?25l[43;11H[106m([44C)[m[51;84H9-56[43;56H[?25h[?25l[43;11H([44C)[51;84H8-55[43;55H[?25h[?25l()d)[106m()[m[51;83H50-57[43;57H[?25h[?25l[43;11H[106m([m[43C()d[106m)[m[51;84H1-58[43;58H[?25h[?25l)[43;58H[K[43;57H[106m)[m[51;84H0-57[43;57H[?25h[?25l[43;11H([43C[106m()[m)[51;83H49-56[43;56H[?25h[?25l[51;84H8-55[43;55H[?25h[?25l[106md([m))d[1C[106m)[m[51;84H9-56[43;56H[?25h[?25l[51;83H50-57[43;57H[?25h[?25l()[51;81H3,35-42[42;42H[?25h[?25l[43;56H[106m()[m[51;81H4,50-57[43;57H[?25h[?25l()[51;81H5,36-50[44;50H[?25h[?25l[44;26H[106m([21C)[m[51;84H5-49[44;49H[?25h[?25l[51;84H4-48[44;48H[?25h[?25l[44;26H(find[106m([15C)[m)[51;84H3-47[44;47H[?25h[?25l[44;31H([15C)[51;84H2-46[44;46H[?25h[?25l[51;83H20-34[44;34H[?25h[?25l[51;83H19-33[44;33H[?25h[?25l[106m([15C)[m[51;84H8-32[44;32H[?25h[?25lvebegin, end, a[106mr[mg));[44;31H([15Cr[51;83H20-34[44;34H[?25h[?25lcbegin, end, arg));[51;84H1-35[44;35H[?25h[?25l.begin, end, arg));[51;84H2-36[44;36H[?25h[?25l[51;84H3-37[44;37H[?25h[?25l[51;84H4-38[44;38H[?25h[?25l[51;84H5-39[44;39H[?25h[?25l[51;84H6-40[44;40H[?25h[?25l[51;84H7-41[44;41H[?25h[?25l(, end, arg));[44;41H[106m([10C)[m[51;84H8-42[44;42H[?25h[?25l), end, ar[106mg[m));[44;42H[106m)[m[9Cg[51;84H9-43[44;43H[?25h[?25l()[51;83H32-46[44;46H[?25h[?25lvnd, arg));[51;84H3-47[44;47H[?25h[?25lnd, arg));[44;56H[K[51;84H2-46[44;46H[?25h[?25lveend, arg));[51;84H3-47[44;47H[?25h[?25lcend, arg));[51;84H4-48[44;48H[?25h[?25l.end, arg));[51;84H5-49[44;49H[?25h[?25l[51;84H6-50[44;50H[?25h[?25l[51;84H7-51[44;51H[?25h[?25l[51;84H8-52[44;52H[?25h[?25l(, arg));[44;52H[106m([m, arg[106m)[m[51;84H9-53[44;53H[?25h[?25l), ar[106mg[m));[44;53H[106m)[m, arg[51;83H40-54[44;54H[?25h[?25l()[51;84H1-55[44;55H[?25h[?25l[51;84H2-56[44;56H[?25h[?25l[51;84H3-57[44;57H[?25h[?25l[51;84H4-58[44;58H[?25h[?25l[44;31H[106m([27C)[m[51;84H5-59[44;59H[?25h[?25l[43;11H[106m([46C)[m[44;31H([27C)[51;81H4,52[43;59H[?25h[?25l[43;11H([46C)[51;81H3,35-42[42;42H[?25h[?25l[43;11H[106m([46C)[m[51;81H4,52-59[43;59H[?25h[?25l[43;11H([46C)[44;31H[106m([27C)[m[51;81H5,45[44;59H[?25h[?25l[44;31H([27C)[51;81H6,39-46[45;46H[?25h[?25l[44;31H[106m([27C)[m[51;81H5,45-59[44;59H[?25h[?25l[43;11H[106m([46C)[m[44;31H([27C)[51;81H4,52[43;59H[?25h[?25l[43;11H([46C)[51;81H3,35-42[42;42H[?25h[?25l[43;11H[106m([46C)[m[51;81H4,52-59[43;59H[?25h[?25l[43;11H([46C)[44;31H[106m([27C)[m[51;81H5,45[44;59H[?25h[?25l[44;31H([27C)[51;81H6,39-46[45;46H[?25h[?25l[45;21H[106m([22C)[m[51;84H8-45[45;45H[?25h[?25l[51;84H7-44[45;44H[?25h[?25l[45;21H([20C[106m()[m)[51;84H6-43[45;43H[?25h[?25l[51;84H5-42[45;42H[?25h[?25l([106m)[m[1C;[45;45H[K[45;41H[106m([m[1C)[51;84H4-41[45;41H[?25h[?25l([106m)[m[1C;[45;44H[K[45;40H[106m([m[1C)[51;84H3-40[45;40H[?25h[51;1H[K[45;41H[?25l[106mnd[m());[51;1H[1m-- INSERT --[m[67C46,35-42      Bot[45;42H[51;70H^[[45;41H[51;70H  [45;42H[51;1H[K[45;40Hnd[51;80H46,34-41      Bot[45;41H[?25h[?25l[51;70H~@k[45;41H[51;70H   [44;41H[106m()[m[51;81H5,27[44;41H[?25h[?25l[51;70H~@k[44;41H[51;70H   [43;41H[44;41H()[51;81H4,34[43;41H[?25h[?25l[51;70H~@k[43;41H[51;70H   [42;41H[51;81H3[42;41H[?25h[?25l[51;70HZ[42;41H[?25h[?25l[51;71HZ[42;41H[?1000l[?2004l[51;1H"rm.hh"[51;70H[K[51;9H49L, 1132C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0ttman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ ls
main.cc  rm.hh
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ make -f ../Makefile 
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main main.o; do echo $t >>.gitignore; done
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ make -f ../Makefile ls[Kvim rm.hh cat[C[C[C[C[C[C[Cvim[C[C[C[C[C[C[C[2@main.cc[Cls[Kcp ../1-out/main.cc .ls[Kcd 4-rm/ls[Kcd .../main vector ../test.data 56[1Pdeque ../test.data 12[8Pmake -f ../Makefile ./main deque ../test.data 12
[ 22 43 56 64 42 11 22 ]
[ 22 43 56 64 42 11 22 ]
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ ./main deque ../test.data 12[K[K[K
[ 22 43 12 56 64 42 11 22 ]
[ 22 43 12 56 64 42 11 22 ]
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ ./main deque ../test.data[C[1P ../test.data[1P ../test.data[1P ../test.data[1P ../test.data[1P ../test.datas ../test.datae ../test.datat ../test.data
[ 11 12 22 42 43 56 64 ]
[ 11 12 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ ./main set ../test.data 12
[ 11 22 42 43 56 64 ]
[ 11 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ ./main set ../test.data 12[2@mu[3@lti[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[ 11 22 22 42 43 56 64 ]
[ 11 22 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ ./main multiset ../test.data 12[C[K[K[K
[ 11 12 22 22 42 43 56 64 ]
[ 11 12 22 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ ./main multiset ../test.data 22
[ 11 12 22 42 43 56 64 ]
[ 11 12 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ ./main multiset ../test.data 22[1P[1P[1P[1P[1P
[ 11 12 42 43 56 64 ]
[ 11 12 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ ./main set ../test.data 22[5@multi[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[ 11 12 22 22 42 43 56 64 ]
[ 11 12 22 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ ./main multiset ../test.data 2[K
[ 11 12 22 22 42 43 56 64 ]
[ 11 12 22 22 42 43 56 64 ]
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ ./main multiset ../test.data 64
[ 11 12 22 22 42 43 56 ]
[ 11 12 22 22 42 43 56 ]
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ ls
main  main.cc  main.o  rm.hh
tman1@remote00:~/i240b/submit/lab7/exercises/4-rm$ exit
exit

Script done on 2020-03-23 06:04:18-04:00 [COMMAND_EXIT_CODE="0"]
